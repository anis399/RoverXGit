   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "spi_master.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_USIC_CH_SetInputSource,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_USIC_CH_SetInputSource:
  23              	.LFB74:
  24              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2020-12-05
   4:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  47:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  50:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  52:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  54:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  56:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  57:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  58:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  59:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  60:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  62:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  63:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  64:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  65:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  68:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  69:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  70:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  71:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  72:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  73:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  74:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  75:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  76:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  77:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  79:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  80:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  82:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  83:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  84:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  86:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  87:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  88:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  89:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  90:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  92:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  93:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  95:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  96:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-09-30:
  98:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_InvalidateReadData(), XMC_USIC_CH_EnableWordLengthControl() and XMC_USIC
  99:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-12-05:
 101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_PutDataEx()
 102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-04-30:
 104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_SetTriggerLimit()
 105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-12-05:
 107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S to XMC_USIC_CH_BRG_CLOCK_SOURCE_t
 108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CTQSEL_t
 109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
 110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
 112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
 116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
 117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc1_usic_map.h"
 186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc4_usic_map.h"
 190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 355:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 356:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 357:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 358:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 359:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 360:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 361:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 362:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 363:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 364:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 365:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 367:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 368:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 369:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 370:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 371:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 372:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 373:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 374:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 375:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 376:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 377:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 378:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 379:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 380:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 381:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 382:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 383:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 384:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 385:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 386:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 387:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 388:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 389:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 390:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 393:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 395:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 397:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 398:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 399:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 402:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 404:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 406:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 407:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 408:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 409:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 410:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 411:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 412:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 413:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 414:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 415:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 416:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 417:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 418:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 421:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 423:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 425:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 426:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 427:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 428:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 431:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 433:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 435:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos,  /**< Baudrate generator 
 436:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S    = 0x3UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 437:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 438:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 439:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 440:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel input selection for CTQ
 441:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 442:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CTQSEL
 443:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 444:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PDIV = 0x0UL, /**< fCTQIN = fPDIV */
 445:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PPP  = 0x1UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fPPP */
 446:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_SCLK = 0x2UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fSCLK */
 447:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_MCLK = 0x3UL << USIC_CH_BRG_CTQSEL_Pos  /**< fCTQIN = fMCLK */
 448:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CTQSEL_t;
 449:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 450:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 451:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 452:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 453:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 454:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 455:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 456:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 457:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 458:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 459:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 460:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 462:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 463:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 464:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 465:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 466:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 467:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 468:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 469:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 471:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 472:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 473:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 474:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 475:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 476:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 477:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 478:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 479:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 480:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 483:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 484:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 485:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 487:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 488:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 489:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 490:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 491:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 492:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 493:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 494:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 495:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 496:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 497:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 498:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 499:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 500:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 501:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 502:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 503:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 504:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 505:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 506:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 507:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma push
 508:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma anon_unions
 509:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 510:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning 586
 511:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 512:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 514:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 515:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 516:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 517:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 518:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 519:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file,
 520:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 521:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 522:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 523:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 524:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 525:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 526:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 527:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 528:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 529:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 530:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 531:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 532:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 533:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 534:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 535:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 536:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 537:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   union
 539:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   {
 540:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 541:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 542:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 543:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 544:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 545:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   };
 546:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 547:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 548:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   union
 550:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   {
 551:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 552:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 553:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 554:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 555:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 556:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   };
 557:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 558:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 559:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 560:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 561:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 562:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 563:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 564:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 565:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 566:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 567:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 568:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 569:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 570:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 571:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 572:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 573:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 574:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 575:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 576:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 577:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 578:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 579:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 582:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 583:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma pop
 584:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 585:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning restore
 586:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 587:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 588:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 589:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 590:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 591:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 593:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 594:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 595:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 596:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 597:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 598:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 599:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 600:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 601:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 602:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 603:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 604:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 605:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 606:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 607:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 608:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 609:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 610:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 611:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 612:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 613:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 614:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 615:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 616:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 617:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 618:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 619:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 620:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 621:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 622:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 624:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 625:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 626:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 627:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 628:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 629:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 630:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 631:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 632:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 634:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 635:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 636:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 637:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 639:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 640:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 641:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 642:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 643:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 644:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 645:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 646:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 647:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 648:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 649:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 650:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 651:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 652:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 654:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 655:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 656:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 657:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 658:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 659:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 660:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 661:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 662:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 663:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 664:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 665:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 666:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 667:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 668:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 669:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 670:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 674:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 675:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 676:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 677:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 678:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 679:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 680:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 681:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 682:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 683:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 684:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 685:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 686:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 687:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 688:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 689:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 690:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 691:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 692:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 693:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 694:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 695:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 698:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 699:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 700:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 701:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 703:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 704:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 706:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 707:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 708:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 709:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 710:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 711:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 712:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 713:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 714:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 715:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 716:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 717:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 719:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 720:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 721:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 722:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 723:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 726:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 728:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 732:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clksel Baudrate generator clock source.
 733:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pppen Enable 2:1 Divider for fPPP.
 734:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Divider Factor to generate fPDIV = fPPP / (pDIV + 1)
 735:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  ctqsel Input selection for CTQ.
 736:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pctq Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1)
 737:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  dctq Denominator for Time Quanta Counter. fTQ / (DCTQ + 1)
 738:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 739:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 741:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate generator of the USIC channel.
 742:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFractionalDivider() \n\n\n
 745:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 747:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 748:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     bool pppen,
 749:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pdiv,
 750:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 751:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pctq,
 752:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t dctq);
 753:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 757:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 758:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 759:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 760:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 761:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 762:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 763:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 765:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 766:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 767:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 768:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 769:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 770:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 771:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 772:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 773:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 774:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 775:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 776:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 777:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 778:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 780:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 781:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 783:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 784:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 785:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 786:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 787:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 788:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 789:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 790:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 791:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 792:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 793:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 795:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 796:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 797:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 798:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 799:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 800:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 801:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 802:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 803:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 804:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 805:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 806:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 807:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 808:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 809:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 813:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 814:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 815:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 816:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 817:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 818:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 819:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t pdiv,
 820:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t oversampling,
 821:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 822:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 823:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 824:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 825:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 826:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 827:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 828:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 829:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 830:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 831:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 832:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 833:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 834:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 835:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 836:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 837:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc.
 838:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 839:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 841:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 842:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 843:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 844:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
  25              	 .loc 1 844 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 081C     	 mov r0,r1
  40 000a 111C     	 mov r1,r2
  41 000c FB1C     	 add r3,r7,#3
  42 000e 021C     	 add r2,r0,#0
  43 0010 1A70     	 strb r2,[r3]
  44 0012 BB1C     	 add r3,r7,#2
  45 0014 0A1C     	 add r2,r1,#0
  46 0016 1A70     	 strb r2,[r3]
 845:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
  47              	 .loc 1 845 0
  48 0018 FB1C     	 add r3,r7,#3
  49 001a 1878     	 ldrb r0,[r3]
  50 001c FB1C     	 add r3,r7,#3
  51 001e 1B78     	 ldrb r3,[r3]
  52 0020 7A68     	 ldr r2,[r7,#4]
  53 0022 0633     	 add r3,r3,#6
  54 0024 9B00     	 lsl r3,r3,#2
  55 0026 D318     	 add r3,r2,r3
  56 0028 5B68     	 ldr r3,[r3,#4]
  57 002a 0722     	 mov r2,#7
  58 002c 9343     	 bic r3,r2
  59 002e 1A1C     	 mov r2,r3
 846:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
  60              	 .loc 1 846 0
  61 0030 BB1C     	 add r3,r7,#2
  62 0032 1B78     	 ldrb r3,[r3]
 845:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
  63              	 .loc 1 845 0
  64 0034 1A43     	 orr r2,r3
  65 0036 7968     	 ldr r1,[r7,#4]
  66 0038 831D     	 add r3,r0,#6
  67 003a 9B00     	 lsl r3,r3,#2
  68 003c CB18     	 add r3,r1,r3
  69 003e 5A60     	 str r2,[r3,#4]
 847:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
  70              	 .loc 1 847 0
  71 0040 BD46     	 mov sp,r7
  72 0042 02B0     	 add sp,sp,#8
  73              	 
  74 0044 80BD     	 pop {r7,pc}
  75              	 .cfi_endproc
  76              	.LFE74:
  78 0046 C046     	 .section .text.XMC_USIC_CH_WriteToTBUFTCI,"ax",%progbits
  79              	 .align 2
  80              	 .code 16
  81              	 .thumb_func
  83              	XMC_USIC_CH_WriteToTBUFTCI:
  84              	.LFB89:
 848:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 849:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 850:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 851:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 852:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 853:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 854:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 856:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 857:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 858:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 859:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 860:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 861:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 862:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 863:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 864:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_INSW_Msk;
 865:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 866:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 867:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 868:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 869:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 870:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 871:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 872:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 876:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 877:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 878:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 879:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 880:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 881:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 882:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 883:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 884:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 885:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 886:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 887:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 888:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 889:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 890:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 891:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 892:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 893:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 894:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 895:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 896:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 897:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 898:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 899:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 900:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 901:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 902:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 903:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 904:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 905:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 906:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 907:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 908:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 909:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 910:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 911:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 912:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 913:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 914:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 915:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 916:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 917:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 918:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 919:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 920:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 921:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 922:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 923:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 924:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 925:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 926:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 927:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 928:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 929:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 930:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 931:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 932:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 933:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 934:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 935:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 936:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 937:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 938:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 939:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 940:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 941:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 942:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 943:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 944:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 945:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 946:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 947:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 948:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 949:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 950:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 951:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 953:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 954:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 955:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 956:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 957:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &= (uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 958:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 959:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 960:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 961:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 962:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 963:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 964:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 965:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 966:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 968:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 969:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 970:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 973:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 975:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 977:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 979:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 980:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 981:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 982:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 983:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 984:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 985:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 986:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 987:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 988:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 991:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 993:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 994:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 995:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 997:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 998:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 999:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1000:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1001:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1002:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1003:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1004:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
1005:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
1006:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
1007:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
1010:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
1012:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1013:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DSEN_Msk;
1014:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1016:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1017:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1018:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1019:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1020:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
1024:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
1025:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1026:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1027:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
1028:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1029:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
1030:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1031:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DSEN_Msk;
1032:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1033:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1037:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1038:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
1039:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1040:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1041:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1042:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
1043:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1045:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1046:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1047:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
1048:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1049:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)
1050:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1051:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
1052:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
1053:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1058:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1059:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1060:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1061:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1062:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1064:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1065:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1068:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1070:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1071:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
1072:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1073:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1074:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1075:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1076:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1081:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1082:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1083:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1084:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1085:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1086:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1087:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1088:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1089:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1090:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1091:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1092:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1093:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1098:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1099:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t transmit_control_information)
1133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
  85              	 .loc 1 1133 0
  86              	 .cfi_startproc
  87 0000 80B5     	 push {r7,lr}
  88              	.LCFI3:
  89              	 .cfi_def_cfa_offset 8
  90              	 .cfi_offset 7,-8
  91              	 .cfi_offset 14,-4
  92 0002 84B0     	 sub sp,sp,#16
  93              	.LCFI4:
  94              	 .cfi_def_cfa_offset 24
  95 0004 00AF     	 add r7,sp,#0
  96              	.LCFI5:
  97              	 .cfi_def_cfa_register 7
  98 0006 F860     	 str r0,[r7,#12]
  99 0008 7A60     	 str r2,[r7,#4]
 100 000a 0A23     	 mov r3,#10
 101 000c FB18     	 add r3,r7,r3
 102 000e 0A1C     	 add r2,r1,#0
 103 0010 1A80     	 strh r2,[r3]
1134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
 104              	 .loc 1 1134 0
 105 0012 0A23     	 mov r3,#10
 106 0014 FB18     	 add r3,r7,r3
 107 0016 1988     	 ldrh r1,[r3]
 108 0018 FB68     	 ldr r3,[r7,#12]
 109 001a 7A68     	 ldr r2,[r7,#4]
 110 001c 2032     	 add r2,r2,#32
 111 001e 9200     	 lsl r2,r2,#2
 112 0020 D150     	 str r1,[r2,r3]
1135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 113              	 .loc 1 1135 0
 114 0022 BD46     	 mov sp,r7
 115 0024 04B0     	 add sp,sp,#16
 116              	 
 117 0026 80BD     	 pop {r7,pc}
 118              	 .cfi_endproc
 119              	.LFE89:
 121              	 .section .text.XMC_USIC_CH_EnableEvent,"ax",%progbits
 122              	 .align 2
 123              	 .code 16
 124              	 .thumb_func
 126              	XMC_USIC_CH_EnableEvent:
 127              	.LFB95:
1136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value
1183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly.
1225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 128              	 .loc 1 1253 0
 129              	 .cfi_startproc
 130 0000 80B5     	 push {r7,lr}
 131              	.LCFI6:
 132              	 .cfi_def_cfa_offset 8
 133              	 .cfi_offset 7,-8
 134              	 .cfi_offset 14,-4
 135 0002 82B0     	 sub sp,sp,#8
 136              	.LCFI7:
 137              	 .cfi_def_cfa_offset 16
 138 0004 00AF     	 add r7,sp,#0
 139              	.LCFI8:
 140              	 .cfi_def_cfa_register 7
 141 0006 7860     	 str r0,[r7,#4]
 142 0008 3960     	 str r1,[r7]
1254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
 143              	 .loc 1 1254 0
 144 000a 7B68     	 ldr r3,[r7,#4]
 145 000c 1A6C     	 ldr r2,[r3,#64]
 146 000e 3B68     	 ldr r3,[r7]
 147 0010 1A43     	 orr r2,r3
 148 0012 7B68     	 ldr r3,[r7,#4]
 149 0014 1A64     	 str r2,[r3,#64]
1255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 150              	 .loc 1 1255 0
 151 0016 BD46     	 mov sp,r7
 152 0018 02B0     	 add sp,sp,#8
 153              	 
 154 001a 80BD     	 pop {r7,pc}
 155              	 .cfi_endproc
 156              	.LFE95:
 158              	 .section .text.XMC_USIC_CH_DisableEvent,"ax",%progbits
 159              	 .align 2
 160              	 .code 16
 161              	 .thumb_func
 163              	XMC_USIC_CH_DisableEvent:
 164              	.LFB96:
1256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
1273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 165              	 .loc 1 1274 0
 166              	 .cfi_startproc
 167 0000 80B5     	 push {r7,lr}
 168              	.LCFI9:
 169              	 .cfi_def_cfa_offset 8
 170              	 .cfi_offset 7,-8
 171              	 .cfi_offset 14,-4
 172 0002 82B0     	 sub sp,sp,#8
 173              	.LCFI10:
 174              	 .cfi_def_cfa_offset 16
 175 0004 00AF     	 add r7,sp,#0
 176              	.LCFI11:
 177              	 .cfi_def_cfa_register 7
 178 0006 7860     	 str r0,[r7,#4]
 179 0008 3960     	 str r1,[r7]
1275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
 180              	 .loc 1 1275 0
 181 000a 7B68     	 ldr r3,[r7,#4]
 182 000c 1B6C     	 ldr r3,[r3,#64]
 183 000e 3A68     	 ldr r2,[r7]
 184 0010 D243     	 mvn r2,r2
 185 0012 1A40     	 and r2,r3
 186 0014 7B68     	 ldr r3,[r7,#4]
 187 0016 1A64     	 str r2,[r3,#64]
1276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 188              	 .loc 1 1276 0
 189 0018 BD46     	 mov sp,r7
 190 001a 02B0     	 add sp,sp,#8
 191              	 
 192 001c 80BD     	 pop {r7,pc}
 193              	 .cfi_endproc
 194              	.LFE96:
 196 001e C046     	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
 197              	 .align 2
 198              	 .code 16
 199              	 .thumb_func
 201              	XMC_USIC_CH_GetTransmitBufferStatus:
 202              	.LFB97:
1277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 203              	 .loc 1 1318 0
 204              	 .cfi_startproc
 205 0000 80B5     	 push {r7,lr}
 206              	.LCFI12:
 207              	 .cfi_def_cfa_offset 8
 208              	 .cfi_offset 7,-8
 209              	 .cfi_offset 14,-4
 210 0002 82B0     	 sub sp,sp,#8
 211              	.LCFI13:
 212              	 .cfi_def_cfa_offset 16
 213 0004 00AF     	 add r7,sp,#0
 214              	.LCFI14:
 215              	 .cfi_def_cfa_register 7
 216 0006 7860     	 str r0,[r7,#4]
1319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
 217              	 .loc 1 1319 0
 218 0008 7B68     	 ldr r3,[r7,#4]
 219 000a 9B6B     	 ldr r3,[r3,#56]
 220 000c DBB2     	 uxtb r3,r3
 221 000e 7F22     	 mov r2,#127
 222 0010 9343     	 bic r3,r2
 223 0012 DBB2     	 uxtb r3,r3
1320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 224              	 .loc 1 1320 0
 225 0014 181C     	 mov r0,r3
 226 0016 BD46     	 mov sp,r7
 227 0018 02B0     	 add sp,sp,#8
 228              	 
 229 001a 80BD     	 pop {r7,pc}
 230              	 .cfi_endproc
 231              	.LFE97:
 233              	 .section .text.XMC_USIC_CH_GetReceiveBufferStatus,"ax",%progbits
 234              	 .align 2
 235              	 .code 16
 236              	 .thumb_func
 238              	XMC_USIC_CH_GetReceiveBufferStatus:
 239              	.LFB98:
1321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte.
1335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 240              	 .loc 1 1342 0
 241              	 .cfi_startproc
 242 0000 80B5     	 push {r7,lr}
 243              	.LCFI15:
 244              	 .cfi_def_cfa_offset 8
 245              	 .cfi_offset 7,-8
 246              	 .cfi_offset 14,-4
 247 0002 82B0     	 sub sp,sp,#8
 248              	.LCFI16:
 249              	 .cfi_def_cfa_offset 16
 250 0004 00AF     	 add r7,sp,#0
 251              	.LCFI17:
 252              	 .cfi_def_cfa_register 7
 253 0006 7860     	 str r0,[r7,#4]
1343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
 254              	 .loc 1 1343 0
 255 0008 7B68     	 ldr r3,[r7,#4]
 256 000a 1A6D     	 ldr r2,[r3,#80]
 257 000c C023     	 mov r3,#192
 258 000e DB01     	 lsl r3,r3,#7
 259 0010 1340     	 and r3,r2
1344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 260              	 .loc 1 1344 0
 261 0012 181C     	 mov r0,r3
 262 0014 BD46     	 mov sp,r7
 263 0016 02B0     	 add sp,sp,#8
 264              	 
 265 0018 80BD     	 pop {r7,pc}
 266              	 .cfi_endproc
 267              	.LFE98:
 269 001a C046     	 .section .text.XMC_USIC_CH_TriggerServiceRequest,"ax",%progbits
 270              	 .align 2
 271              	 .code 16
 272              	 .thumb_func
 274              	XMC_USIC_CH_TriggerServiceRequest:
 275              	.LFB107:
1345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1355:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1356:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1357:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1358:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1359:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1360:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1361:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1362:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1363:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1364:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1365:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_START_TRANSMISION_MODE_t start_transmision_mode)
1366:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1367:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1368:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1369:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1370:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1372:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1373:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1374:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1375:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1376:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1380:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1381:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1382:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1383:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1384:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1385:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1386:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output_mode)
1387:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1388:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1389:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1390:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1391:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1392:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1393:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1394:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1395:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1396:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1397:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1398:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the
1399:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1400:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1401:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1402:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1403:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1404:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1405:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1406:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1407:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1408:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1409:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1410:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1411:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1412:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1413:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1414:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1415:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1416:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1417:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1418:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1419:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1420:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1421:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of word length. \n\n
1422:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of word length is enabled, word length is configured based on the
1423:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], word length is con
1424:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1425:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1426:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1428:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1429:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1430:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableWordLengthControl(XMC_USIC_CH_t *const channel)
1431:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1432:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1433:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1434:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1435:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1436:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_WLEMD_Msk;
1437:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1438:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1439:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1440:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1441:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1442:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1443:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1444:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1445:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1446:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1447:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1448:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1449:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1450:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1451:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1452:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1453:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1454:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1455:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1456:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1457:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1458:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1459:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1460:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1461:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1462:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1463:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of word length. \n\n
1464:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of word length is disabled, word length has to configured explicitly.
1465:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Word length remains fixed until it is changed again.
1466:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1467:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1468:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetWordLength() \n\n\n
1469:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1470:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableWordLengthControl(XMC_USIC_CH_t *const channel)
1471:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1472:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_WLEMD_Msk;
1473:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1474:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1475:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1476:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1477:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1478:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1479:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1480:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1481:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1482:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1483:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1484:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1485:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1486:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1487:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1488:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1489:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1490:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1491:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1492:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1493:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1494:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1495:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1496:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1497:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1498:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1499:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1500:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1501:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1502:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1503:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1504:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1505:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1506:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1507:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1508:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1509:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1510:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1511:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1512:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1513:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1514:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1515:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1516:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1517:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1518:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1519:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be
1520:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled.
1521:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1522:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1524:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1526:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 276              	 .loc 1 1526 0
 277              	 .cfi_startproc
 278 0000 80B5     	 push {r7,lr}
 279              	.LCFI18:
 280              	 .cfi_def_cfa_offset 8
 281              	 .cfi_offset 7,-8
 282              	 .cfi_offset 14,-4
 283 0002 82B0     	 sub sp,sp,#8
 284              	.LCFI19:
 285              	 .cfi_def_cfa_offset 16
 286 0004 00AF     	 add r7,sp,#0
 287              	.LCFI20:
 288              	 .cfi_def_cfa_register 7
 289 0006 7860     	 str r0,[r7,#4]
 290 0008 3960     	 str r1,[r7]
1527:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
 291              	 .loc 1 1527 0
 292 000a 3B68     	 ldr r3,[r7]
 293 000c 8022     	 mov r2,#128
 294 000e 5202     	 lsl r2,r2,#9
 295 0010 9A40     	 lsl r2,r2,r3
 296 0012 7B68     	 ldr r3,[r7,#4]
 297 0014 9A66     	 str r2,[r3,#104]
1528:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 298              	 .loc 1 1528 0
 299 0016 BD46     	 mov sp,r7
 300 0018 02B0     	 add sp,sp,#8
 301              	 
 302 001a 80BD     	 pop {r7,pc}
 303              	 .cfi_endproc
 304              	.LFE107:
 306              	 .section .text.XMC_USIC_CH_TXFIFO_EnableEvent,"ax",%progbits
 307              	 .align 2
 308              	 .code 16
 309              	 .thumb_func
 311              	XMC_USIC_CH_TXFIFO_EnableEvent:
 312              	.LFB112:
1529:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1534:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1535:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1536:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1537:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1538:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1539:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1540:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1541:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1542:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1543:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1544:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buffer_status)
1545:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1546:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1547:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1548:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1553:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1554:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1557:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1560:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_InvalidateReadData(XMC_USIC_CH_t *const channel)
1562:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = USIC_CH_FMR_CRDV0_Msk | USIC_CH_FMR_CRDV1_Msk;
1564:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1567:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1568:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1569:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1570:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1571:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1572:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1573:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1574:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1575:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1576:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the
1577:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1578:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1579:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1580:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1581:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1582:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1583:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive_level)
1584:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1586:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1587:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1588:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1589:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1590:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1591:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1592:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1593:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1594:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1595:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1596:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1597:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1598:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1599:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1603:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1604:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1605:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1606:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1607:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1608:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1609:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1610:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1611:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1612:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1613:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1614:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1615:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1616:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1617:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1618:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1619:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1620:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1621:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1622:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1623:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1624:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1625:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() }
1627:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1628:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1629:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1630:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the
1631:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1632:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1633:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1634:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1635:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1636:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1637:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1638:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
1639:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1640:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1641:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1642:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1643:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1644:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1645:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
1646:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1647:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1648:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1649:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
1650:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1651:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1652:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1653:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1654:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
1655:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
1656:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1657:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR = (channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) | ((limit << USIC_CH_TBCTR
1658:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1659:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1660:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1661:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1666:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1667:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1668:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1669:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1670:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1671:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
1672:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1673:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1674:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1675:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1676:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1677:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1678:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1679:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1680:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1681:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 313              	 .loc 1 1681 0
 314              	 .cfi_startproc
 315 0000 80B5     	 push {r7,lr}
 316              	.LCFI21:
 317              	 .cfi_def_cfa_offset 8
 318              	 .cfi_offset 7,-8
 319              	 .cfi_offset 14,-4
 320 0002 82B0     	 sub sp,sp,#8
 321              	.LCFI22:
 322              	 .cfi_def_cfa_offset 16
 323 0004 00AF     	 add r7,sp,#0
 324              	.LCFI23:
 325              	 .cfi_def_cfa_register 7
 326 0006 7860     	 str r0,[r7,#4]
 327 0008 3960     	 str r1,[r7]
1682:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
 328              	 .loc 1 1682 0
 329 000a 7A68     	 ldr r2,[r7,#4]
 330 000c 8423     	 mov r3,#132
 331 000e 5B00     	 lsl r3,r3,#1
 332 0010 D258     	 ldr r2,[r2,r3]
 333 0012 3B68     	 ldr r3,[r7]
 334 0014 1A43     	 orr r2,r3
 335 0016 111C     	 mov r1,r2
 336 0018 7A68     	 ldr r2,[r7,#4]
 337 001a 8423     	 mov r3,#132
 338 001c 5B00     	 lsl r3,r3,#1
 339 001e D150     	 str r1,[r2,r3]
1683:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 340              	 .loc 1 1683 0
 341 0020 BD46     	 mov sp,r7
 342 0022 02B0     	 add sp,sp,#8
 343              	 
 344 0024 80BD     	 pop {r7,pc}
 345              	 .cfi_endproc
 346              	.LFE112:
 348 0026 C046     	 .section .text.XMC_USIC_CH_TXFIFO_DisableEvent,"ax",%progbits
 349              	 .align 2
 350              	 .code 16
 351              	 .thumb_func
 353              	XMC_USIC_CH_TXFIFO_DisableEvent:
 354              	.LFB113:
1684:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1685:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1686:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1687:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1688:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1689:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1690:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1691:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1692:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1693:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1694:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
1695:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent().
1696:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1697:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1698:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1699:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1700:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1701:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1702:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1703:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 355              	 .loc 1 1703 0
 356              	 .cfi_startproc
 357 0000 80B5     	 push {r7,lr}
 358              	.LCFI24:
 359              	 .cfi_def_cfa_offset 8
 360              	 .cfi_offset 7,-8
 361              	 .cfi_offset 14,-4
 362 0002 82B0     	 sub sp,sp,#8
 363              	.LCFI25:
 364              	 .cfi_def_cfa_offset 16
 365 0004 00AF     	 add r7,sp,#0
 366              	.LCFI26:
 367              	 .cfi_def_cfa_register 7
 368 0006 7860     	 str r0,[r7,#4]
 369 0008 3960     	 str r1,[r7]
1704:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
 370              	 .loc 1 1704 0
 371 000a 7A68     	 ldr r2,[r7,#4]
 372 000c 8423     	 mov r3,#132
 373 000e 5B00     	 lsl r3,r3,#1
 374 0010 D358     	 ldr r3,[r2,r3]
 375 0012 3A68     	 ldr r2,[r7]
 376 0014 D243     	 mvn r2,r2
 377 0016 1A40     	 and r2,r3
 378 0018 111C     	 mov r1,r2
 379 001a 7A68     	 ldr r2,[r7,#4]
 380 001c 8423     	 mov r3,#132
 381 001e 5B00     	 lsl r3,r3,#1
 382 0020 D150     	 str r1,[r2,r3]
1705:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 383              	 .loc 1 1705 0
 384 0022 BD46     	 mov sp,r7
 385 0024 02B0     	 add sp,sp,#8
 386              	 
 387 0026 80BD     	 pop {r7,pc}
 388              	 .cfi_endproc
 389              	.LFE113:
 391              	 .section .text.XMC_USIC_CH_TXFIFO_PutDataHPCMode,"ax",%progbits
 392              	 .align 2
 393              	 .code 16
 394              	 .thumb_func
 396              	XMC_USIC_CH_TXFIFO_PutDataHPCMode:
 397              	.LFB117:
1706:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1710:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1711:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1712:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1713:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1714:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1715:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1716:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1717:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1718:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1719:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1720:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1721:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1722:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1723:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1724:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1725:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1726:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1727:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1728:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1729:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1730:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1731:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1732:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
1733:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1734:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1735:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1736:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1737:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1738:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1739:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1740:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1741:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1742:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1744:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1745:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1746:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1747:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1748:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1749:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1750:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1751:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1752:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1753:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1754:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1755:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1756:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1757:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1758:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1759:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1760:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param loc Input location. \n
1761:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1762:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1763:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1764:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit data can be loaded to TBUF by software by writing to the transmit buffer input
1765:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * locations TBUFx (x = 00-31), consisting of 32 consecutive addresses. The data written
1766:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * to one of these input locations is stored in the transmit buffer TBUF. Additionally, the
1767:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * address of the written location is evaluated and can be used for additional control
1768:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * purposes. This 5-bit wide information (named Transmit Control Information TCI) can be
1769:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * used for different purposes in different protocols.
1770:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableWordLengthControl() \n
1773:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1774:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1775:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataEx(XMC_USIC_CH_t *const channel, const uint16_t data
1776:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1777:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[loc] = data;
1778:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1779:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1780:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1781:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1782:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1783:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1784:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1785:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1786:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1787:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1788:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1789:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1790:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1791:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1792:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1793:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1794:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1795:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_PutDataEx() \n
1796:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1797:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1798:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1799:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1800:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1801:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1802:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1803:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1804:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1805:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1806:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1807:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1808:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1809:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1810:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1811:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1812:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1813:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1814:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1815:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1816:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1817:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1818:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1819:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1821:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1822:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1823:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1824:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1825:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 398              	 .loc 1 1825 0
 399              	 .cfi_startproc
 400 0000 80B5     	 push {r7,lr}
 401              	.LCFI27:
 402              	 .cfi_def_cfa_offset 8
 403              	 .cfi_offset 7,-8
 404              	 .cfi_offset 14,-4
 405 0002 84B0     	 sub sp,sp,#16
 406              	.LCFI28:
 407              	 .cfi_def_cfa_offset 24
 408 0004 00AF     	 add r7,sp,#0
 409              	.LCFI29:
 410              	 .cfi_def_cfa_register 7
 411 0006 F860     	 str r0,[r7,#12]
 412 0008 7A60     	 str r2,[r7,#4]
 413 000a 0A23     	 mov r3,#10
 414 000c FB18     	 add r3,r7,r3
 415 000e 0A1C     	 add r2,r1,#0
 416 0010 1A80     	 strh r2,[r3]
1826:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
 417              	 .loc 1 1826 0
 418 0012 0A23     	 mov r3,#10
 419 0014 FB18     	 add r3,r7,r3
 420 0016 1988     	 ldrh r1,[r3]
 421 0018 FB68     	 ldr r3,[r7,#12]
 422 001a 7A68     	 ldr r2,[r7,#4]
 423 001c 6032     	 add r2,r2,#96
 424 001e 9200     	 lsl r2,r2,#2
 425 0020 D150     	 str r1,[r2,r3]
1827:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 426              	 .loc 1 1827 0
 427 0022 BD46     	 mov sp,r7
 428 0024 04B0     	 add sp,sp,#16
 429              	 
 430 0026 80BD     	 pop {r7,pc}
 431              	 .cfi_endproc
 432              	.LFE117:
 434              	 .section .text.XMC_USIC_CH_TXFIFO_Flush,"ax",%progbits
 435              	 .align 2
 436              	 .code 16
 437              	 .thumb_func
 439              	XMC_USIC_CH_TXFIFO_Flush:
 440              	.LFB118:
1828:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1829:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1830:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1831:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1832:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1833:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1834:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1835:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1836:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1837:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1839:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1840:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1841:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1842:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 441              	 .loc 1 1842 0
 442              	 .cfi_startproc
 443 0000 80B5     	 push {r7,lr}
 444              	.LCFI30:
 445              	 .cfi_def_cfa_offset 8
 446              	 .cfi_offset 7,-8
 447              	 .cfi_offset 14,-4
 448 0002 82B0     	 sub sp,sp,#8
 449              	.LCFI31:
 450              	 .cfi_def_cfa_offset 16
 451 0004 00AF     	 add r7,sp,#0
 452              	.LCFI32:
 453              	 .cfi_def_cfa_register 7
 454 0006 7860     	 str r0,[r7,#4]
1843:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
 455              	 .loc 1 1843 0
 456 0008 7A68     	 ldr r2,[r7,#4]
 457 000a 8C23     	 mov r3,#140
 458 000c 5B00     	 lsl r3,r3,#1
 459 000e 8021     	 mov r1,#128
 460 0010 0902     	 lsl r1,r1,#8
 461 0012 D150     	 str r1,[r2,r3]
1844:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 462              	 .loc 1 1844 0
 463 0014 BD46     	 mov sp,r7
 464 0016 02B0     	 add sp,sp,#8
 465              	 
 466 0018 80BD     	 pop {r7,pc}
 467              	 .cfi_endproc
 468              	.LFE118:
 470 001a C046     	 .section .text.XMC_USIC_CH_TXFIFO_IsFull,"ax",%progbits
 471              	 .align 2
 472              	 .code 16
 473              	 .thumb_func
 475              	XMC_USIC_CH_TXFIFO_IsFull:
 476              	.LFB119:
1845:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1846:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1847:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1848:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1849:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1850:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1851:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1852:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1853:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1854:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1855:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1856:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1857:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1858:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1859:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1860:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1861:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 477              	 .loc 1 1861 0
 478              	 .cfi_startproc
 479 0000 80B5     	 push {r7,lr}
 480              	.LCFI33:
 481              	 .cfi_def_cfa_offset 8
 482              	 .cfi_offset 7,-8
 483              	 .cfi_offset 14,-4
 484 0002 82B0     	 sub sp,sp,#8
 485              	.LCFI34:
 486              	 .cfi_def_cfa_offset 16
 487 0004 00AF     	 add r7,sp,#0
 488              	.LCFI35:
 489              	 .cfi_def_cfa_register 7
 490 0006 7860     	 str r0,[r7,#4]
1862:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
 491              	 .loc 1 1862 0
 492 0008 7A68     	 ldr r2,[r7,#4]
 493 000a 8A23     	 mov r3,#138
 494 000c 5B00     	 lsl r3,r3,#1
 495 000e D258     	 ldr r2,[r2,r3]
 496 0010 8023     	 mov r3,#128
 497 0012 5B01     	 lsl r3,r3,#5
 498 0014 1340     	 and r3,r2
 499 0016 5A1E     	 sub r2,r3,#1
 500 0018 9341     	 sbc r3,r3,r2
 501 001a DBB2     	 uxtb r3,r3
1863:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 502              	 .loc 1 1863 0
 503 001c 181C     	 mov r0,r3
 504 001e BD46     	 mov sp,r7
 505 0020 02B0     	 add sp,sp,#8
 506              	 
 507 0022 80BD     	 pop {r7,pc}
 508              	 .cfi_endproc
 509              	.LFE119:
 511              	 .section .text.XMC_USIC_CH_TXFIFO_IsEmpty,"ax",%progbits
 512              	 .align 2
 513              	 .code 16
 514              	 .thumb_func
 516              	XMC_USIC_CH_TXFIFO_IsEmpty:
 517              	.LFB120:
1864:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1865:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1866:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1867:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1868:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1869:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1870:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1872:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1873:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1874:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO,
1875:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1876:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1877:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1878:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1879:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1880:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1881:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 518              	 .loc 1 1881 0
 519              	 .cfi_startproc
 520 0000 80B5     	 push {r7,lr}
 521              	.LCFI36:
 522              	 .cfi_def_cfa_offset 8
 523              	 .cfi_offset 7,-8
 524              	 .cfi_offset 14,-4
 525 0002 82B0     	 sub sp,sp,#8
 526              	.LCFI37:
 527              	 .cfi_def_cfa_offset 16
 528 0004 00AF     	 add r7,sp,#0
 529              	.LCFI38:
 530              	 .cfi_def_cfa_register 7
 531 0006 7860     	 str r0,[r7,#4]
1882:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
 532              	 .loc 1 1882 0
 533 0008 7A68     	 ldr r2,[r7,#4]
 534 000a 8A23     	 mov r3,#138
 535 000c 5B00     	 lsl r3,r3,#1
 536 000e D258     	 ldr r2,[r2,r3]
 537 0010 8023     	 mov r3,#128
 538 0012 1B01     	 lsl r3,r3,#4
 539 0014 1340     	 and r3,r2
 540 0016 5A1E     	 sub r2,r3,#1
 541 0018 9341     	 sbc r3,r3,r2
 542 001a DBB2     	 uxtb r3,r3
1883:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 543              	 .loc 1 1883 0
 544 001c 181C     	 mov r0,r3
 545 001e BD46     	 mov sp,r7
 546 0020 02B0     	 add sp,sp,#8
 547              	 
 548 0022 80BD     	 pop {r7,pc}
 549              	 .cfi_endproc
 550              	.LFE120:
 552              	 .section .text.XMC_USIC_CH_RXFIFO_EnableEvent,"ax",%progbits
 553              	 .align 2
 554              	 .code 16
 555              	 .thumb_func
 557              	XMC_USIC_CH_RXFIFO_EnableEvent:
 558              	.LFB125:
1884:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1885:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1886:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1887:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1888:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n
1889:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1890:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1891:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1892:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1893:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1894:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1895:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1896:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1897:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1898:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1899:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1900:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1901:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1902:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1903:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1904:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1905:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1906:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1907:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1908:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1909:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1910:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1911:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1912:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1913:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1914:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1915:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1916:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1917:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1918:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1919:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1920:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1921:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1922:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1923:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1924:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_TBERI_Msk));
1925:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1926:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1927:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1928:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1929:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1930:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1931:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1932:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1933:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1934:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1935:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1936:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1937:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
1938:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1939:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
1940:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1941:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1942:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1943:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1944:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1945:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1946:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
1947:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1948:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1949:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1950:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1951:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1952:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1953:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1954:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1955:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1956:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1957:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1958:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1959:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1960:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1961:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1962:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1963:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1964:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1965:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1966:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1967:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1968:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1969:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1970:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1971:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1972:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
1973:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1974:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1975:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1976:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1977:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1978:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1979:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1980:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1981:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1982:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1983:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1984:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1985:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1986:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1987:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_RXFIFO_SetTriggerLimit() }
1988:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1989:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1990:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1991:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the
1992:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1993:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1994:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1995:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1996:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1997:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1998:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1999:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
2000:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2001:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2002:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2003:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2004:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
2005:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
2006:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2007:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2008:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2009:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
2010:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2011:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2012:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() \n\n\n
2013:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2014:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
2015:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
2016:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2017:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR = (channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) | ((limit << USIC_CH_RBCTR
2018:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2019:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2020:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2021:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2022:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2023:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
2024:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2025:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2026:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2027:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
2028:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
2029:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
2030:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
2031:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2032:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
2033:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
2034:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2035:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2036:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
2037:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2038:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
2039:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 559              	 .loc 1 2039 0
 560              	 .cfi_startproc
 561 0000 80B5     	 push {r7,lr}
 562              	.LCFI39:
 563              	 .cfi_def_cfa_offset 8
 564              	 .cfi_offset 7,-8
 565              	 .cfi_offset 14,-4
 566 0002 82B0     	 sub sp,sp,#8
 567              	.LCFI40:
 568              	 .cfi_def_cfa_offset 16
 569 0004 00AF     	 add r7,sp,#0
 570              	.LCFI41:
 571              	 .cfi_def_cfa_register 7
 572 0006 7860     	 str r0,[r7,#4]
 573 0008 3960     	 str r1,[r7]
2040:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
 574              	 .loc 1 2040 0
 575 000a 7A68     	 ldr r2,[r7,#4]
 576 000c 8623     	 mov r3,#134
 577 000e 5B00     	 lsl r3,r3,#1
 578 0010 D258     	 ldr r2,[r2,r3]
 579 0012 3B68     	 ldr r3,[r7]
 580 0014 1A43     	 orr r2,r3
 581 0016 111C     	 mov r1,r2
 582 0018 7A68     	 ldr r2,[r7,#4]
 583 001a 8623     	 mov r3,#134
 584 001c 5B00     	 lsl r3,r3,#1
 585 001e D150     	 str r1,[r2,r3]
2041:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 586              	 .loc 1 2041 0
 587 0020 BD46     	 mov sp,r7
 588 0022 02B0     	 add sp,sp,#8
 589              	 
 590 0024 80BD     	 pop {r7,pc}
 591              	 .cfi_endproc
 592              	.LFE125:
 594 0026 C046     	 .section .text.XMC_USIC_CH_RXFIFO_DisableEvent,"ax",%progbits
 595              	 .align 2
 596              	 .code 16
 597              	 .thumb_func
 599              	XMC_USIC_CH_RXFIFO_DisableEvent:
 600              	.LFB126:
2042:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2043:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2044:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2045:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2046:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2047:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
2048:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
2049:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
2050:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2051:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2052:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2053:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
2054:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
2055:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent().
2056:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
2057:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
2058:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2059:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2060:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2061:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2062:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
2063:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 601              	 .loc 1 2063 0
 602              	 .cfi_startproc
 603 0000 80B5     	 push {r7,lr}
 604              	.LCFI42:
 605              	 .cfi_def_cfa_offset 8
 606              	 .cfi_offset 7,-8
 607              	 .cfi_offset 14,-4
 608 0002 82B0     	 sub sp,sp,#8
 609              	.LCFI43:
 610              	 .cfi_def_cfa_offset 16
 611 0004 00AF     	 add r7,sp,#0
 612              	.LCFI44:
 613              	 .cfi_def_cfa_register 7
 614 0006 7860     	 str r0,[r7,#4]
 615 0008 3960     	 str r1,[r7]
2064:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
 616              	 .loc 1 2064 0
 617 000a 7A68     	 ldr r2,[r7,#4]
 618 000c 8623     	 mov r3,#134
 619 000e 5B00     	 lsl r3,r3,#1
 620 0010 D358     	 ldr r3,[r2,r3]
 621 0012 3A68     	 ldr r2,[r7]
 622 0014 D243     	 mvn r2,r2
 623 0016 1A40     	 and r2,r3
 624 0018 111C     	 mov r1,r2
 625 001a 7A68     	 ldr r2,[r7,#4]
 626 001c 8623     	 mov r3,#134
 627 001e 5B00     	 lsl r3,r3,#1
 628 0020 D150     	 str r1,[r2,r3]
2065:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 629              	 .loc 1 2065 0
 630 0022 BD46     	 mov sp,r7
 631 0024 02B0     	 add sp,sp,#8
 632              	 
 633 0026 80BD     	 pop {r7,pc}
 634              	 .cfi_endproc
 635              	.LFE126:
 637              	 .section .text.XMC_USIC_CH_RXFIFO_Flush,"ax",%progbits
 638              	 .align 2
 639              	 .code 16
 640              	 .thumb_func
 642              	XMC_USIC_CH_RXFIFO_Flush:
 643              	.LFB128:
2066:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2067:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2068:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2069:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2070:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
2071:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
2072:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
2073:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
2074:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
2075:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2076:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2077:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2078:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
2079:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
2080:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
2081:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
2082:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
2083:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
2084:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
2085:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2086:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
2087:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2088:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2089:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2090:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2091:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
2092:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
2093:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
2094:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2095:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2096:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2097:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2098:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
2099:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
2100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
2103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
2104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
2105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
2106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
2107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
2110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
2112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
2114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
2123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
2124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
2127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
2129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 644              	 .loc 1 2129 0
 645              	 .cfi_startproc
 646 0000 80B5     	 push {r7,lr}
 647              	.LCFI45:
 648              	 .cfi_def_cfa_offset 8
 649              	 .cfi_offset 7,-8
 650              	 .cfi_offset 14,-4
 651 0002 82B0     	 sub sp,sp,#8
 652              	.LCFI46:
 653              	 .cfi_def_cfa_offset 16
 654 0004 00AF     	 add r7,sp,#0
 655              	.LCFI47:
 656              	 .cfi_def_cfa_register 7
 657 0006 7860     	 str r0,[r7,#4]
2130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
 658              	 .loc 1 2130 0
 659 0008 7A68     	 ldr r2,[r7,#4]
 660 000a 8C23     	 mov r3,#140
 661 000c 5B00     	 lsl r3,r3,#1
 662 000e 8021     	 mov r1,#128
 663 0010 C901     	 lsl r1,r1,#7
 664 0012 D150     	 str r1,[r2,r3]
2131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 665              	 .loc 1 2131 0
 666 0014 BD46     	 mov sp,r7
 667 0016 02B0     	 add sp,sp,#8
 668              	 
 669 0018 80BD     	 pop {r7,pc}
 670              	 .cfi_endproc
 671              	.LFE128:
 673 001a C046     	 .section .text.XMC_USIC_CH_RXFIFO_IsEmpty,"ax",%progbits
 674              	 .align 2
 675              	 .code 16
 676              	 .thumb_func
 678              	XMC_USIC_CH_RXFIFO_IsEmpty:
 679              	.LFB130:
2132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
2137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
2138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
2141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
2142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
2143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
2146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
2148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
2150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
2156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
2157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
2160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
2161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
2162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
2163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
2168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 680              	 .loc 1 2168 0
 681              	 .cfi_startproc
 682 0000 80B5     	 push {r7,lr}
 683              	.LCFI48:
 684              	 .cfi_def_cfa_offset 8
 685              	 .cfi_offset 7,-8
 686              	 .cfi_offset 14,-4
 687 0002 82B0     	 sub sp,sp,#8
 688              	.LCFI49:
 689              	 .cfi_def_cfa_offset 16
 690 0004 00AF     	 add r7,sp,#0
 691              	.LCFI50:
 692              	 .cfi_def_cfa_register 7
 693 0006 7860     	 str r0,[r7,#4]
2169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
 694              	 .loc 1 2169 0
 695 0008 7A68     	 ldr r2,[r7,#4]
 696 000a 8A23     	 mov r3,#138
 697 000c 5B00     	 lsl r3,r3,#1
 698 000e D358     	 ldr r3,[r2,r3]
 699 0010 0822     	 mov r2,#8
 700 0012 1340     	 and r3,r2
 701 0014 5A1E     	 sub r2,r3,#1
 702 0016 9341     	 sbc r3,r3,r2
 703 0018 DBB2     	 uxtb r3,r3
2170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 704              	 .loc 1 2170 0
 705 001a 181C     	 mov r0,r3
 706 001c BD46     	 mov sp,r7
 707 001e 02B0     	 add sp,sp,#8
 708              	 
 709 0020 80BD     	 pop {r7,pc}
 710              	 .cfi_endproc
 711              	.LFE130:
 713 0022 C046     	 .section .text.XMC_USIC_CH_ConfigureShiftClockOutput,"ax",%progbits
 714              	 .align 2
 715              	 .code 16
 716              	 .thumb_func
 718              	XMC_USIC_CH_ConfigureShiftClockOutput:
 719              	.LFB137:
2171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
2176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
2177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
2180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
2181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the
2182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
2183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
2188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
2190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
2196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
2201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
2202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
2203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
2204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
2205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
2207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
2210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
2212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
2214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_RBERI_Msk |
2215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_ARBI_Msk));
2216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
2222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
2228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
2229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
2230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
2231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
2232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
2233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
2236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
2238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
2239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
2241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
2250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
2251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
2254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
2256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
2258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
2267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
2268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
2271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
2273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
2275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
2281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
2282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
2286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
2288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t passive_level)
2289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
2291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
2296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
2297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
2298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
2299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
2300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
2301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
2302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
2303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
2307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
2308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
2309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
2310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
2311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
2312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
2315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t passive_level,
2316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t clock_output)
2317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 720              	 .loc 1 2317 0
 721              	 .cfi_startproc
 722 0000 80B5     	 push {r7,lr}
 723              	.LCFI51:
 724              	 .cfi_def_cfa_offset 8
 725              	 .cfi_offset 7,-8
 726              	 .cfi_offset 14,-4
 727 0002 84B0     	 sub sp,sp,#16
 728              	.LCFI52:
 729              	 .cfi_def_cfa_offset 24
 730 0004 00AF     	 add r7,sp,#0
 731              	.LCFI53:
 732              	 .cfi_def_cfa_register 7
 733 0006 F860     	 str r0,[r7,#12]
 734 0008 B960     	 str r1,[r7,#8]
 735 000a 7A60     	 str r2,[r7,#4]
2318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
 736              	 .loc 1 2318 0
 737 000c FB68     	 ldr r3,[r7,#12]
 738 000e 5B69     	 ldr r3,[r3,#20]
 739 0010 054A     	 ldr r2,.L24
 740 0012 1A40     	 and r2,r3
2319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                             USIC_CH_BRG_SCLKOSEL_Msk))) |
2320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
 741              	 .loc 1 2320 0
 742 0014 BB68     	 ldr r3,[r7,#8]
2319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                             USIC_CH_BRG_SCLKOSEL_Msk))) |
 743              	 .loc 1 2319 0
 744 0016 1A43     	 orr r2,r3
 745              	 .loc 1 2320 0
 746 0018 7B68     	 ldr r3,[r7,#4]
 747 001a 1A43     	 orr r2,r3
2318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
 748              	 .loc 1 2318 0
 749 001c FB68     	 ldr r3,[r7,#12]
 750 001e 5A61     	 str r2,[r3,#20]
2321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
2322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 751              	 .loc 1 2322 0
 752 0020 BD46     	 mov sp,r7
 753 0022 04B0     	 add sp,sp,#16
 754              	 
 755 0024 80BD     	 pop {r7,pc}
 756              	.L25:
 757 0026 C046     	 .align 2
 758              	.L24:
 759 0028 FFFFFF2F 	 .word 805306367
 760              	 .cfi_endproc
 761              	.LFE137:
 763              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
 764              	 .align 2
 765              	 .code 16
 766              	 .thumb_func
 768              	XMC_USIC_CH_SetMode:
 769              	.LFB138:
2323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
2328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
2329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
2330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
2331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
2335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
2336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 770              	 .loc 1 2342 0
 771              	 .cfi_startproc
 772 0000 80B5     	 push {r7,lr}
 773              	.LCFI54:
 774              	 .cfi_def_cfa_offset 8
 775              	 .cfi_offset 7,-8
 776              	 .cfi_offset 14,-4
 777 0002 82B0     	 sub sp,sp,#8
 778              	.LCFI55:
 779              	 .cfi_def_cfa_offset 16
 780 0004 00AF     	 add r7,sp,#0
 781              	.LCFI56:
 782              	 .cfi_def_cfa_register 7
 783 0006 7860     	 str r0,[r7,#4]
 784 0008 0A1C     	 mov r2,r1
 785 000a FB1C     	 add r3,r7,#3
 786 000c 1A70     	 strb r2,[r3]
2343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
 787              	 .loc 1 2343 0
 788 000e 7B68     	 ldr r3,[r7,#4]
 789 0010 1B6C     	 ldr r3,[r3,#64]
 790 0012 0F22     	 mov r2,#15
 791 0014 9343     	 bic r3,r2
 792 0016 1A1C     	 mov r2,r3
 793 0018 FB1C     	 add r3,r7,#3
 794 001a 1B78     	 ldrb r3,[r3]
 795 001c 1A43     	 orr r2,r3
 796 001e 7B68     	 ldr r3,[r7,#4]
 797 0020 1A64     	 str r2,[r3,#64]
2344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 798              	 .loc 1 2344 0
 799 0022 BD46     	 mov sp,r7
 800 0024 02B0     	 add sp,sp,#8
 801              	 
 802 0026 80BD     	 pop {r7,pc}
 803              	 .cfi_endproc
 804              	.LFE138:
 806              	 .section .text.XMC_SPI_CH_Start,"ax",%progbits
 807              	 .align 2
 808              	 .code 16
 809              	 .thumb_func
 811              	XMC_SPI_CH_Start:
 812              	.LFB140:
 813              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_spi.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @file xmc_spi.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @date 2020-12-05
   4:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Initial
  46:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  47:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-05-20:
  48:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Documentation improved <br>
  49:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetSlaveSelectDelay(), XMC_SPI_CH_TriggerServiceRequest() and
  50:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_SelectInterruptNodePointer() <br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetInterwordDelaySCLK() <br>
  52:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  53:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-06-20:
  54:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  55:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  56:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-24:
  57:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_SPI_CH_DisableDelayCompensation()
  58:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_EnableDelayCompensation() <br>
  59:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  60:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-27:
  61:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for external input for BRG configuration:XMC_SPI_CH_ConfigExternalInputSignalTo
  62:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  63:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-01:
  64:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  65:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_EVENT_t enum for supporting XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_Di
  66:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *       for supporting multiple events configuration <br>
  67:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  68:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-08:
  69:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Adding API for configuring the receiving clock phase in the slave:XMC_SPI_CH_DataLatchedIn
  70:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  71:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-04-10:
  72:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added an API for configuring the transmit mode:XMC_SPI_CH_SetTransmitMode() <br>
  73:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  74:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-05-20:
  75:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_EnableDataTransmission() and XMC_SPI_CH_DisableDataTransmission()
  76:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  77:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-03-30:
  78:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Fix XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX macro value
  79:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-05-07:
  81:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added normal_divider_mode to XMC_SPI_CH_CONFIG_t configuration structure.
  82:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  83:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetBaudrateEx()
  84:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  85:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-09-04:
  86:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *    - Added XMC_SPI_CLOCK_MODE_t enum
  87:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  88:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 2020-12-05:
  89:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *    - Added XMC_SPI_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  90:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  91:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @endcond
  92:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
  93:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
  94:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
  95:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #ifndef XMC_SPI_H
  96:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI_H
  97:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
  98:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
  99:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * HEADER FILES
 100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #include "xmc_usic.h"
 102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup XMClib XMC Peripheral Library
 105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup SPI
 110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @brief Synchronous serial channel driver for SPI-like communication.
 111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * The SPI driver uses Universal Serial Interface Channel(USIC) module.
 113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * The USIC module supports multiple data lines for SPI communication. \n
 114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Full duplex communication with 2 separate lines for transmission and reception.
 115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Half duplex communication with 1 common line shared for transmission and reception.
 116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Dual mode communication with 2 common lines shared for transmission and reception.
 117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Quad mode communication with 4 common lines shared for transmission and reception.<br><br>
 118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver provides structures, enumerations and APIs for configuring the USIC channel for SPI c
 120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * and also for data transaction.<br>
 121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver features:
 122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Configuration structure XMC_SPI_CH_CONFIG_t and SPI initialization function XMC_SPI_CH_Init()
 123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of protocol word and frame length using XMC_SPI_CH_SetWordLength(), XMC_
 124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows manipulation of data frame at runtime using XMC_SPI_CH_EnableSOF(), XMC_SPI_CH_EnableE
 125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  XMC_SPI_CH_EnableSlaveSelect(), XMC_SPI_CH_DisableSlaveSelect()
 126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides APIs for transmitting data and receiving data using XMC_SPI_CH_Transmit(), XMC_SPI_C
 127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of shift clock using XMC_SPI_CH_ConfigureShiftClockOutput()
 128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides enumeration of SPI protocol events using @ref XMC_SPI_CH_STATUS_FLAG_t
 129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * MACROS
 134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC0)
 137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH0 XMC_USIC0_CH0 /**< SPI0 channel 0 base address */
 138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH1 XMC_USIC0_CH1 /**< SPI0 channel 1 base address */
 139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC1)
 142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH0 XMC_USIC1_CH0 /**< SPI1 channel 0 base address */
 143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH1 XMC_USIC1_CH1 /**< SPI1 channel 1 base address */
 144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC2)
 147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH0 XMC_USIC2_CH0 /**< SPI2 channel 0 base address */
 148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH1 XMC_USIC2_CH1 /**< SPI2 channel 1 base address */
 149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * ENUMS
 153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines return status of SPI driver APIs
 157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS
 159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_OK,    /**< Status of the Module: OK */
 161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_ERROR, /**< Status of the Module: ERROR */
 162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_BUSY   /**< The Module is busy */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_t;
 164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the SPI bus mode
 166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BUS_MODE
 168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_MASTER, /**< SPI Master */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_SLAVE   /**< SPI Slave */
 171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BUS_MODE_t;
 172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the slave select signals SELO[7:0] in relation to the master slave selec
 175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SEL_MSLS_INV
 177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_SAME_AS_MSLS = 0x0UL, /**< The SELO outputs have the same polarity as the MS
 179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                   (active high) */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_INV_TO_MSLS = 0x1UL << USIC_CH_PCR_SSCMode_SELINV_Pos /**< The SELO outputs 
 181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   polarity to the M
 182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   (active low)*/
 183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t;
 184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the data inputs.
 187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_DATA_POLARITY
 189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_DIRECT = 0x0UL, /**< The polarity of the data line is not inverted */
 191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_INVERT = 0x1UL << USIC_CH_DX2CR_DPOL_Pos /**< The polarity of the data l
 192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_DATA_POLARITY_t;
 193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines Slave Select lines
 196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SELECT
 198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_0 = 1UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 0 */
 200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_1 = 2UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 1 */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_2 = 4UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 2 */
 202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_3 = 8UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 3 */
 203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_4 = 16UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 4 */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_5 = 32UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 5 */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_6 = 64UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 6 */
 206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_7 = 128UL << USIC_CH_PCR_SSCMode_SELO_Pos /**< Slave Select line 7 */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SELECT_t;
 208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI specific events
 211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_EVENT
 213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_PARITY_ERROR = USIC_CH_PCR_SSCMode_PARIEN_Msk >> 13U,       /**< Parity error ev
 223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_MSLS_CHANGE =  USIC_CH_PCR_SSCMode_MSLSIEN_Msk >> 13U,      /**< Master slave se
 224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DX2TIEN_ACTIVATED = USIC_CH_PCR_SSCMode_DX2TIEN_Msk >> 13U  /**< Slave select in
 225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_EVENT_t;
 226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI event status
 229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS_FLAG
 231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS = USIC_CH_PSR_SSCMode_MSLS_Msk,                          /**< Status 
 233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             select(
 234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_SSCMode_DX2S_Msk,                          /**< Status 
 235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input(D
 236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED = USIC_CH_PSR_SSCMode_MSLSEV_Msk,         /**< Status 
 237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             output 
 238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_SSCMode_DX2TEV_Msk,         /**< Status 
 239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input s
 240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_PARITY_ERROR_EVENT_DETECTED = USIC_CH_PSR_SSCMode_PARERR_Msk, /**< Indicat
 241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             parity 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_SSCMode_RSIF_Msk,     /**< Status 
 243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_SSCMode_DLIF_Msk,          /**< Status 
 245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_SSCMode_TSIF_Msk,      /**< Status
 246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_SSCMode_TBIF_Msk,    /**< Status 
 248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_RIF_Msk,             /**< Status 
 250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_AIF_Msk, /**< Status 
 251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             receive
 252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_SSCMode_BRGIF_Msk/**< Status 
 253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             generat
 254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_FLAG_t;
 255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines input frequency sources for slave select signal delay configuration.
 258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY
 260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPDIV = 0x0UL, /**< Output of PDIV divider: FPDIV */
 262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPPP  = 0x1UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< P
 263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FSCLK = 0x2UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< S
 264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FMCLK = 0x3UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos  /**< M
 265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_t;
 266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Define data and clock input stages
 269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT
 271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */
 273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SELIN = 2UL,  /**< Slave select input stage */
 275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_t;
 279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Define SPI data transfer mode
 282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_MODE
 284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD = 0UL,            /**< SPI standard full duplex mode */
 286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX = 5UL, /**< SPI standard half duplex mode */
 287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_DUAL = 6UL,                /**< SPI half duplex mode with dual data lines */
 288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_QUAD = 7UL                 /**< SPI half duplex mode with quad data lines */
 289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_MODE_t;
 290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock passive level
 294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay disabled */
 298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay disabled */
 300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay enabled */
 302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay enabled */
 304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI clock modes
 309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /* CPOL=0 is a clock which idles at 0, and each cycle consists of a pulse of 1. That is, the leadin
 312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /* CPOL=1 is a clock which idles at 1, and each cycle consists of a pulse of 0. That is, the leadin
 313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /* CPHA=0, the "out" side changes the data on the trailing edge of the preceding clock cycle, while
 314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****    The out side holds the data valid until the trailing edge of the current clock cycle. For the fi
 315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /* For CPHA=1, the "out" side changes the data on the leading edge of the current clock cycle, whil
 316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   The out side holds the data valid until the leading edge of the following clock cycle. For the la
 317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CLOCK_MODE
 318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_0_CPHA_0 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
 320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_0_CPHA_1 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
 321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_1_CPHA_0 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
 322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_1_CPHA_1 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED
 323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CLOCK_MODE_t;
 324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock output
 327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** */
 328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT
 329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,  /**< Baudrate 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI channel interrupt node pointers
 336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INTERRUPT_NODE_POINTER
 338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INTERRUPT_NODE_POINTER_t;
 345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * DATA STRUCTURES
 348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** ***************************************************************************************************
 349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Structure for initializing SPI channel.
 352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** typedef struct XMC_SPI_CH_CONFIG
 354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 355:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   uint32_t baudrate;							                /**< Module baud rate for communication */
 356:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   bool normal_divider_mode;                       /**< Selects normal divider mode for baudrate gen
 357:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_t bus_mode;                 /**< Bus mode: Master/Slave */
 358:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t selo_inversion; /**< Enable inversion of Slave select signal rela
 359:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                                        MSLS signal  */
 360:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;          /**< Enable parity check for transmit and receive
 361:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_CONFIG_t;
 362:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 363:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 364:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * API PROTOTYPES
 365:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 366:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 367:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef __cplusplus
 368:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** extern "C" {
 369:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 370:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 371:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 372:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 373:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 374:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 375:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 376:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 377:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 378:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 379:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 380:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 381:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 382:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 383:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 384:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 385:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 386:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 387:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 388:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 389:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 390:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 391:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 392:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 393:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 394:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 395:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 396:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 397:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 398:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 399:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 400:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 401:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const config, bool 
 402:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 403:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 404:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 405:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 406:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 407:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 408:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 409:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 410:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 411:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 412:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 413:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 414:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 415:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 416:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 417:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 418:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 419:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 420:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 421:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 422:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 423:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 424:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 425:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 426:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 427:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 428:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 429:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 430:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 431:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Init(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const
 433:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 434:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_InitEx(channel, config, true);
 435:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 436:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 437:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 438:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 439:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 440:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 441:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 442:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 443:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected USIC channel to operate in SPI mode, by setting CCR.MODE bits.\n\n
 444:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * It should be executed after XMC_SPI_CH_Init() during initialization. By invoking XMC_SPI_CH_Stop
 445:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * to IDLE state. Call XMC_SPI_CH_Start() to set the SPI mode again, as needed later in the program
 446:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 447:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 448:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 449:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 450:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Start(XMC_USIC_CH_t *const channel)
 451:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 814              	 .loc 2 451 0
 815              	 .cfi_startproc
 816 0000 80B5     	 push {r7,lr}
 817              	.LCFI57:
 818              	 .cfi_def_cfa_offset 8
 819              	 .cfi_offset 7,-8
 820              	 .cfi_offset 14,-4
 821 0002 82B0     	 sub sp,sp,#8
 822              	.LCFI58:
 823              	 .cfi_def_cfa_offset 16
 824 0004 00AF     	 add r7,sp,#0
 825              	.LCFI59:
 826              	 .cfi_def_cfa_register 7
 827 0006 7860     	 str r0,[r7,#4]
 452:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   /* USIC channel in SPI mode */
 453:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_SPI);
 828              	 .loc 2 453 0
 829 0008 7B68     	 ldr r3,[r7,#4]
 830 000a 181C     	 mov r0,r3
 831 000c 0121     	 mov r1,#1
 832 000e FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 454:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 833              	 .loc 2 454 0
 834 0012 BD46     	 mov sp,r7
 835 0014 02B0     	 add sp,sp,#8
 836              	 
 837 0016 80BD     	 pop {r7,pc}
 838              	 .cfi_endproc
 839              	.LFE140:
 841              	 .section .text.XMC_SPI_CH_SetTransmitMode,"ax",%progbits
 842              	 .align 2
 843              	 .code 16
 844              	 .thumb_func
 846              	XMC_SPI_CH_SetTransmitMode:
 847              	.LFB141:
 455:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 456:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 457:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 458:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 459:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for stopping is processed
 460:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 461:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 462:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 463:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 464:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected SPI channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 465:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * After calling XMC_SPI_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_SPI_C
 466:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * invoked to start the communication again.
 467:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 468:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 469:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Start()
 470:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 471:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_Stop(XMC_USIC_CH_t *const channel);
 472:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 473:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 474:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 475:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 476:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 477:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 478:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 479:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 480:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 481:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 482:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 483:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 484:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 485:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 486:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 487:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 488:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 489:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 490:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 491:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 492:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 493:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 494:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 495:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 496:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 497:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 498:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 499:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 500:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 501:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 502:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 503:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 504:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, const uint32_t rate, boo
 505:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 506:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 507:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 508:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param slave Slave select signal.\n
 509:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ref XMC_SPI_CH_SLAVE_SELECT_t for valid values.
 510:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 511:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 512:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 513:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 514:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable the selected slave signal by setting PCR.SELO bits.\n\n
 515:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Each slave is connected with one slave select signal. This is not configured in XMC_SPI_CH_Init(
 516:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() with required \a slave to to start the communication. After finis
 517:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * communication XMC_SPI_CH_DisableSlaveSelect() can be invoked to disable the slaves.
 518:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 519:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 520:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSlaveSelect()
 521:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 522:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableSlaveSelect(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_SLAVE_SELECT_t sla
 523:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 524:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 525:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant ponter to XMC_USIC_CH_t, pointing to the USIC channel base address.
 526:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 527:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 528:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 529:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 530:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Disable all the slave signals by clearing PCR.SELO bits.\n\n
 531:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() has to be invoked to start the communication with the desired sla
 532:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 533:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 534:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect()
 535:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 536:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableSlaveSelect(XMC_USIC_CH_t *const channel);
 537:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 538:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 539:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 540:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 541:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 542:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 543:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 544:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 545:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 546:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. \n\n
 547:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * By enabling this the direction of the data pin is updated by hardware itself. Before transmittin
 548:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * mode to ensure the proper communication.
 549:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 550:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 551:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Transmit()
 552:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 553:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetTransmitMode(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE
 554:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 848              	 .loc 2 554 0
 849              	 .cfi_startproc
 850 0000 80B5     	 push {r7,lr}
 851              	.LCFI60:
 852              	 .cfi_def_cfa_offset 8
 853              	 .cfi_offset 7,-8
 854              	 .cfi_offset 14,-4
 855 0002 82B0     	 sub sp,sp,#8
 856              	.LCFI61:
 857              	 .cfi_def_cfa_offset 16
 858 0004 00AF     	 add r7,sp,#0
 859              	.LCFI62:
 860              	 .cfi_def_cfa_register 7
 861 0006 7860     	 str r0,[r7,#4]
 862 0008 0A1C     	 mov r2,r1
 863 000a FB1C     	 add r3,r7,#3
 864 000c 1A70     	 strb r2,[r3]
 555:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 865              	 .loc 2 555 0
 866 000e 7B68     	 ldr r3,[r7,#4]
 867 0010 1B6C     	 ldr r3,[r3,#64]
 868 0012 C022     	 mov r2,#192
 869 0014 9343     	 bic r3,r2
 870 0016 1A1C     	 mov r2,r3
 556:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                  (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 871              	 .loc 2 556 0
 872 0018 FB1C     	 add r3,r7,#3
 873 001a 1B78     	 ldrb r3,[r3]
 874 001c 9B01     	 lsl r3,r3,#6
 875 001e FF21     	 mov r1,#255
 876 0020 0B40     	 and r3,r1
 555:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 877              	 .loc 2 555 0
 878 0022 1A43     	 orr r2,r3
 879 0024 7B68     	 ldr r3,[r7,#4]
 880 0026 1A64     	 str r2,[r3,#64]
 557:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 881              	 .loc 2 557 0
 882 0028 BD46     	 mov sp,r7
 883 002a 02B0     	 add sp,sp,#8
 884              	 
 885 002c 80BD     	 pop {r7,pc}
 886              	 .cfi_endproc
 887              	.LFE141:
 889 002e C046     	 .section .text.XMC_SPI_CH_SetSlaveSelectDelay,"ax",%progbits
 890              	 .align 2
 891              	 .code 16
 892              	 .thumb_func
 894              	XMC_SPI_CH_SetSlaveSelectDelay:
 895              	.LFB154:
 558:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 559:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 560:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 561:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param data Data to be transmitted
 562:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 563:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 564:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 565:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 566:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 567:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 568:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 569:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. By enabling this the 
 570:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * pin is updated by hardware itself. TCI(Transmit Control Information) allows dynamic control of b
 571:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * and pin direction during data transfers by writing to SCTR.DSM and SCTR.HPCDIR bit fields. To su
 572:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * update, TCSR.HPCMD(Hardware Port control) will be enabled during the initialization using XMC_SP
 573:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 574:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 575:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 576:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 577:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 578:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_SPI_CH_MODE_t
 579:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 580:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 581:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 582:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 583:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 584:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 585:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 586:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 587:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 588:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 589:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 590:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be invoked to read the data from the buffers.
 591:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 592:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 593:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedDaa()
 594:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 595:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE_t mode)
 596:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 597:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   /* Transmit dummy data */
 598:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_Transmit(channel, (uint16_t)0xffffU, (XMC_SPI_CH_MODE_t)((uint16_t)mode & 0xfffbU));
 599:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 600:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 601:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 602:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 603:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 604:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint16_t Data read from the receive buffer.
 605:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 606:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 607:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 608:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Invocation of XMC_SPI_CH_Receive() receives the data and place it into receive buffer. After rec
 609:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be used to read the data from the buffer.
 610:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 611:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 612:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 613:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 614:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** uint16_t XMC_SPI_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 615:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 616:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 617:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 618:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 619:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 620:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 621:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 622:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 623:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. Invoke XMC_SPI_CH_SetBitOrderLsbFirst() to set di
 624:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * the program.
 625:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 626:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 627:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderMsbFirst()
 628:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 629:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 630:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 631:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 632:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 633:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 634:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 635:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 636:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 637:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 638:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 639:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 640:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from MSB to LSB, by setting SCTR.SDIR bit.\n\n
 641:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. This is not set during XMC_SPI_CH_Init().
 642:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Invoke XMC_SPI_CH_SetBitOrderMsbFirst() to set direction as needed in the program.
 643:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 644:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 645:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderLsbFirst()
 646:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 647:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderMsbFirst(XMC_USIC_CH_t *const channel)
 648:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 649:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR |= (uint32_t)USIC_CH_SCTR_SDIR_Msk;
 650:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 651:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 652:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 653:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 654:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be enabled.
 655:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 656:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 657:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 658:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 659:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 660:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 661:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the SPI protocol specific events, by configuring PCR register.\n\n
 662:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Events can be enabled as needed using XMC_SPI_CH_EnableEvent().
 663:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent() can be used to disable the events.
 664:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 665:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 666:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent()
 667:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 668:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 669:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 670:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 671:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 672:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be disabled.
 673:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 674:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 675:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 676:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 677:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 678:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 679:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the SPI protocol specific events, by configuring PCR register.\n\n
 680:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * After disabling the events, XMC_SPI_CH_EnableEvent() has to be invoked to re-enable the events.
 681:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 682:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 683:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableEvent()
 684:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 685:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 686:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 687:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 688:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 689:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 690:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint32_t Status of SPI protocol events.
 691:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 692:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 693:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Returns the status of the events, by reading PSR register.\n\n
 694:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * This indicates the status of the all the events, for SPI communication.
 695:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 696:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 697:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_ClearStatusFlag()
 698:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 699:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE uint32_t XMC_SPI_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 700:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 701:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   return channel->PSR_SSCMode;
 702:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 703:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 704:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 705:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 706:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param flag Protocol event status to be cleared for detection of next occurence.
 707:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_STATUS_FLAG_t for valid values. <b>OR</b> combinations of these 
 708:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 709:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 710:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 711:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 712:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Clears the events specified, by setting PSCR register.\n\n
 713:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * During communication the events occurred have to be cleared to detect their next occurence.\n
 714:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
 715:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *       event has to be cleared after transmission of each data word. Otherwise next event cannot 
 716:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 717:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 718:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetStatusFlag()
 719:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 720:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 721:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 722:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PSCR |= flag;
 723:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 724:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 725:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 726:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 727:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 728:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 729:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 730:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 731:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the generation of Master clock by setting PCR.MCLK bit.\n\n
 732:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * This clock can be used as a clock reference for external devices. This is not enabled during ini
 733:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(). Invoke XMC_SPI_CH_EnableMasterClock() to enable as needed in the program, or 
 734:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableMasterClock().
 735:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 736:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 737:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableMasterClock()
 738:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 739:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableMasterClock(XMC_USIC_CH_t *const channel)
 740:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 741:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= (uint32_t)USIC_CH_PCR_SSCMode_MCLK_Msk;
 742:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 743:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 744:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 745:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 746:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 747:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 748:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 749:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 750:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the generation of Master clock by clearing PCR.MCLK bit.\n\n
 751:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * This clock can be enabled by invoking XMC_SPI_CH_EnableMasterClock() as needed in the program.
 752:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 753:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 754:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableMasterClock()
 755:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 756:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableMasterClock(XMC_USIC_CH_t *const channel)
 757:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 758:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_MCLK_Msk;
 759:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 760:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef USIC_CH_PCR_SSCMode_SLPHSEL_Msk
 761:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 762:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 763:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 764:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 765:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 766:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 767:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Data bits are shifted out with the leading edge of the shift clock signal and latched in with th
 768:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 769:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 770:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DataLatchedInLeadingEdge()
 771:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 772:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DataLatchedInTrailingEdge(XMC_USIC_CH_t *const channel)
 773:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 774:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_SLPHSEL_Msk;
 775:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 776:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 777:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 778:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 779:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 780:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 781:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 782:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 783:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * The first data bit is shifted out when the data shift unit receives a low to high transition fro
 784:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * stage. Subsequent bits are shifted out with the trailing edge of the shift clock signal. Data bi
 785:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * always latched in with the leading edge.
 786:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 787:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 788:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DataLatchedInTrailingEdge()
 789:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 790:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DataLatchedInLeadingEdge(XMC_USIC_CH_t *const channel)
 791:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 792:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= USIC_CH_PCR_SSCMode_SLPHSEL_Msk;
 793:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 794:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 795:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 796:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 797:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 798:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 799:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 800:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 801:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the delay after each word, by setting PCR.TIWEN bit.\n\n
 802:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * The inter word delay starts at the end of last SCLK cycle of data word. During this time no cloc
 803:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * generated and MSLS signal stays active. If inter word delay is not enabled, last data bit of a d
 804:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * followed by the first data bit of the next data word. This is not enabled in XMC_SPI_CH_Init(). 
 805:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay() has to be invoked as needed in the program. And can be disable
 806:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableInterwordDelay().
 807:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 808:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 809:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableInterwordDelay()
 810:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 811:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableInterwordDelay(XMC_USIC_CH_t *const channel)
 812:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 813:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= (uint32_t)USIC_CH_PCR_SSCMode_TIWEN_Msk;
 814:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 815:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 816:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 817:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 818:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 819:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 820:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 821:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 822:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the delay after after each word, by clearing PCR.TIWEN bit.\n\n
 823:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * So the last data bit of a data word is directly followed by the first data bit of the next data 
 824:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * be enabled by invoking XMC_SPI_CH_EnableInterwordDelay().
 825:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 826:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 827:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay()
 828:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 829:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableInterwordDelay(XMC_USIC_CH_t *const channel)
 830:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 831:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_TIWEN_Msk;
 832:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 833:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 834:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 835:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 836:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param tinterword_delay_ns delay in terms of nano seconds.
 837:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 838:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 839:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 840:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 841:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the inter word delay by setting PCR.PCTQ1, PCR.DCTQ1 bit fields.\n\n
 842:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * The inter word delay is dependent on the peripheral clock. The maximum possible value is calcula
 843:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * below formula\n
 844:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *            Maximum inter word delay = ((1 + PCTQ1_max)(1 + DCTQ1_max)) / peripheral clock\n
 845:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *                                       where PCTQ1_max = 3 and DCTQ1_max = 31\n
 846:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * After configuring the inter word delay, this has to be enabled by invoking XMC_SPI_CH_EnableInte
 847:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 848:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 849:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay(),XMC_SPI_CH_SetInterwordDelaySCLK()
 850:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 851:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_SetInterwordDelay(XMC_USIC_CH_t *const channel, uint32_t tinterword_delay_ns);
 852:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 853:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 854:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 855:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param sclk_period  in terms of clk cycles.
 856:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 857:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 858:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 859:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 860:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the inter word delay by setting PCR.DCTQ1 bit fields.\n\n
 861:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * This delay is dependent on the peripheral clock. The maximum possible value supported by this AP
 862:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * is 32 clock cycles.
 863:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * After configuring the inter word delay, this has to be enabled by invoking XMC_SPI_CH_EnableInte
 864:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 865:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 866:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableInterwordDelay(),XMC_SPI_CH_EnableInterwordDelay()
 867:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 868:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetInterwordDelaySCLK(XMC_USIC_CH_t *const channel, uint32_t sclk_p
 869:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 870:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode = (uint32_t)((channel->PCR_SSCMode) & (~(USIC_CH_PCR_SSCMode_DCTQ1_Msk |
 871:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                     USIC_CH_PCR_SSCMode_PCTQ1_Msk |
 872:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                     USIC_CH_PCR_SSCMode_CTQSEL1_Msk))) |
 873:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                          (((sclk_period - 1U) <<  USIC_CH_PCR_SSCMode_DCTQ1_Pos) |
 874:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                           (0x02U <<  USIC_CH_PCR_SSCMode_CTQSEL1_Pos));
 875:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 876:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 877:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 878:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 879:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param sclk_period delay in terms of sclk clock cycles.
 880:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 881:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 882:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 883:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 884:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the leading/trailing delay by setting BRG.DCTQ bit field.\n\n
 885:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * This delay is dependent on the peripheral clock. The maximum possible value supported by this AP
 886:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * is 30 clock cycles.
 887:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 888:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 889:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetSlaveSelectDelay(XMC_USIC_CH_t *const channel, uint32_t sclk_per
 890:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 896              	 .loc 2 890 0
 897              	 .cfi_startproc
 898 0000 80B5     	 push {r7,lr}
 899              	.LCFI63:
 900              	 .cfi_def_cfa_offset 8
 901              	 .cfi_offset 7,-8
 902              	 .cfi_offset 14,-4
 903 0002 82B0     	 sub sp,sp,#8
 904              	.LCFI64:
 905              	 .cfi_def_cfa_offset 16
 906 0004 00AF     	 add r7,sp,#0
 907              	.LCFI65:
 908              	 .cfi_def_cfa_register 7
 909 0006 7860     	 str r0,[r7,#4]
 910 0008 3960     	 str r1,[r7]
 891:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 892:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 911              	 .loc 2 892 0
 912 000a 7B68     	 ldr r3,[r7,#4]
 913 000c 5B69     	 ldr r3,[r3,#20]
 914 000e 074A     	 ldr r2,.L30
 915 0010 1A40     	 and r2,r3
 893:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                    USIC_CH_BRG_PCTQ_Msk)) |
 894:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                  (((sclk_period - 1U) << USIC_CH_BRG_DCTQ_Pos) | (0x01U << USIC_CH_BRG_PCTQ_Pos));
 916              	 .loc 2 894 0
 917 0012 3B68     	 ldr r3,[r7]
 918 0014 013B     	 sub r3,r3,#1
 919 0016 9B02     	 lsl r3,r3,#10
 893:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                    USIC_CH_BRG_PCTQ_Msk)) |
 920              	 .loc 2 893 0
 921 0018 1343     	 orr r3,r2
 922 001a 8022     	 mov r2,#128
 923 001c 5200     	 lsl r2,r2,#1
 924 001e 1A43     	 orr r2,r3
 892:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                    USIC_CH_BRG_PCTQ_Msk)) |
 925              	 .loc 2 892 0
 926 0020 7B68     	 ldr r3,[r7,#4]
 927 0022 5A61     	 str r2,[r3,#20]
 895:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 928              	 .loc 2 895 0
 929 0024 BD46     	 mov sp,r7
 930 0026 02B0     	 add sp,sp,#8
 931              	 
 932 0028 80BD     	 pop {r7,pc}
 933              	.L31:
 934 002a C046     	 .align 2
 935              	.L30:
 936 002c FF80FFFF 	 .word -32513
 937              	 .cfi_endproc
 938              	.LFE154:
 940              	 .section .text.XMC_SPI_CH_ConfigureShiftClockOutput,"ax",%progbits
 941              	 .align 2
 942              	 .code 16
 943              	 .thumb_func
 945              	XMC_SPI_CH_ConfigureShiftClockOutput:
 946              	.LFB157:
 896:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 897:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 898:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 899:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 900:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 901:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 902:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 903:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 904:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure to keep MSLS(Slave select signal) active even after finishing the current data frame,
 905:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * by setting PCR.FEM bit.\n\n
 906:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically used during the transmission of multi-data word frames, where there is possibi
 907:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * delivering the data. Frame end mode is enabled in XMC_SPI_CH_Init() during initialization. To di
 908:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableFEM() can be invoked as needed in the program.
 909:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 910:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 911:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableFEM()
 912:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 913:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableFEM(XMC_USIC_CH_t *const channel)
 914:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 915:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode |= (uint32_t)USIC_CH_PCR_SSCMode_FEM_Msk;
 916:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 917:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 918:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 919:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 920:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 921:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 922:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 923:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 924:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure to disable the MSLS(Slave select signal) if the current data frame is considered as fi
 925:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * by setting PCR.FEM bit.\n\n
 926:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 927:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * When the last bit of a data word has been sent out and the transmit buffer TBUF does not contain
 928:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * considered as frame is ended and MSLS(Slave select signal) is disabled.
 929:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 930:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 931:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableFEM()
 932:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 933:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableFEM(XMC_USIC_CH_t *const channel)
 934:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 935:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PCR_SSCMode &= (uint32_t)~USIC_CH_PCR_SSCMode_FEM_Msk;
 936:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 937:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 938:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 939:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 940:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param passive_level polarity and delay of the selected shift clock.\n
 941:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *                      Refer @ref XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t for valid inputs.
 942:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param clock_output shift clock source.\n
 943:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *                     Refer @ref XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t for valid inputs.
 944:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 945:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 946:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 947:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 948:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Configures the shift clock source with the selected polarity and delay by setting BRG.SCLKOSEL a
 949:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * In Master mode operation, shift clock is generated by the internal baud rate generator. This SCL
 950:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * for external slave devices by SCLKOUT signal.\n
 951:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * In Slave mode, the signal is received from the external master. So the DX1(input) stage has to b
 952:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * The shift clock output(SCLKOUT) signal polarity can be set relative to SCLK, with the delay of h
 953:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * period. These settings are applicable only in master mode.
 954:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 955:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
 956:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****     const XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t passive_level,
 957:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****     const XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t clock_output)
 958:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 947              	 .loc 2 958 0
 948              	 .cfi_startproc
 949 0000 80B5     	 push {r7,lr}
 950              	.LCFI66:
 951              	 .cfi_def_cfa_offset 8
 952              	 .cfi_offset 7,-8
 953              	 .cfi_offset 14,-4
 954 0002 84B0     	 sub sp,sp,#16
 955              	.LCFI67:
 956              	 .cfi_def_cfa_offset 24
 957 0004 00AF     	 add r7,sp,#0
 958              	.LCFI68:
 959              	 .cfi_def_cfa_register 7
 960 0006 F860     	 str r0,[r7,#12]
 961 0008 B960     	 str r1,[r7,#8]
 962 000a 7A60     	 str r2,[r7,#4]
 959:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_ConfigureShiftClockOutput(channel, (XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t)passi
 963              	 .loc 2 959 0
 964 000c F968     	 ldr r1,[r7,#12]
 965 000e BA68     	 ldr r2,[r7,#8]
 966 0010 7B68     	 ldr r3,[r7,#4]
 967 0012 081C     	 mov r0,r1
 968 0014 111C     	 mov r1,r2
 969 0016 1A1C     	 mov r2,r3
 970 0018 FFF7FEFF 	 bl XMC_USIC_CH_ConfigureShiftClockOutput
 960:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****                                         (XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t)clock_output);
 961:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 971              	 .loc 2 961 0
 972 001c BD46     	 mov sp,r7
 973 001e 04B0     	 add sp,sp,#16
 974              	 
 975 0020 80BD     	 pop {r7,pc}
 976              	 .cfi_endproc
 977              	.LFE157:
 979 0022 C046     	 .section .text.XMC_SPI_CH_SetInputSource,"ax",%progbits
 980              	 .align 2
 981              	 .code 16
 982              	 .thumb_func
 984              	XMC_SPI_CH_SetInputSource:
 985              	.LFB164:
 962:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 963:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 964:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 965:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  word_length Number of bits to be configured for a data word. \n
 966:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *         \b Range: 1 to 16.
 967:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 968:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 969:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 970:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
 971:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the data word length.\n\n
 972:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
 973:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 974:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 975:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetFrameLength()
 976:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
 977:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_leng
 978:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 979:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetWordLength(channel, word_length);
 980:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 981:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
 982:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
 983:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 984:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  frame_length Number of bits in a frame. \n
 985:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *                \b Range: 1 to 64. If the value 64 is configured, then the frame does not
 986:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *                automatically end. User should explicitly end the frame.
 987:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 988:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 989:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 990:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
 991:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Define the data frame length.\n\n
 992:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the number of bits to be serially transmitted in a frame.
 993:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * The frame length should be multiples of word length. If the value is set to 64, the frame does n
 994:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * automatically end. Use XMC_SPI_CH_DisableSlaveSelect() to end the frame after all the data
 995:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * is transmitted.
 996:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
 997:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 998:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl(), XMC_SPI_CH_DisableSlaveSele
 999:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
1000:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_le
1001:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
1002:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetFrameLength(channel, frame_length);
1003:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
1004:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
1005:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
1006:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
1007:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1008:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
1009:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1010:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
1011:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure the handling of start of frame through software, by setting TCSR.SOF bit.\n\n
1012:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * This can be used if the software handles the TBUF data without FIFO. If SOF is set, a valid cont
1013:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * considered as first word of a new frame by finishing the currently running frame. For software h
1014:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * it is recommended to configure TCSR.WLEMD as 0. This is not configured during initialization. XM
1015:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * can be called as needed in the program and can be disabled by XMC_SPI_CH_DisableSOF().
1016:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1017:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
1018:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSOF()
1019:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
1020:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableSOF(XMC_USIC_CH_t *const channel)
1021:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
1022:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_SOF_Msk;
1023:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
1024:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
1025:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
1026:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
1027:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1028:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
1029:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1030:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
1031:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the control of the handling start of frame through hardware, by clearing TCSR.SOF bit.\n\n
1032:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Typically this can be disabled, where the transmission control is done by the hardware.
1033:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1034:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
1035:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSOF()
1036:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
1037:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableSOF(XMC_USIC_CH_t *const channel)
1038:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
1039:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_SOF_Msk;
1040:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
1041:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
1042:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
1043:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
1044:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1045:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
1046:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1047:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
1048:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure the handling of end of frame through software, by setting TCSR.EOF bit.\n\n
1049:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * This can be used if the software handles the TBUF data without FIFO. If EOF is set, a valid cont
1050:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * considered as last word of a frame. After transfer of the last word, MSLS signal becomes inactiv
1051:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * handling of EOF bit, it is recommended to configure TCSR.WLEMD as 0. \n
1052:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \b Note: The API should be called before putting the last data word of the frame to TBUF.
1053:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1054:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
1055:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEOF()
1056:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
1057:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_EnableEOF(XMC_USIC_CH_t *const channel)
1058:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
1059:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_EOF_Msk;
1060:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
1061:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
1062:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
1063:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
1064:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1065:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
1066:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1067:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
1068:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Configure the handling of end of frame through hardware, by clearing TCSR.EOF bit.\n\n
1069:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Typically this can be disabled, where the transmission control is done by the hardware.
1070:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1071:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
1072:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableEOF()
1073:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
1074:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_DisableEOF(XMC_USIC_CH_t *const channel)
1075:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
1076:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_EOF_Msk;
1077:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
1078:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** 
1079:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** /**
1080:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
1081:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  input SPI channel input stage.\n
1082:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer @ref XMC_SPI_CH_INPUT_t for valid values
1083:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @param  source Input source select for the input stage.
1084:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *                Range : [0 to 7]
1085:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1086:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
1087:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  *
1088:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description</b><br>
1089:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Selects the data source for SPI input stage, by configuring DXCR.DSEL bits.\n\n
1090:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
1091:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * input stages like DX0CR, DX1CR etc. This is not done during initialization. This has to be confi
1092:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  * the SPI communication.
1093:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****  */
1094:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetInputSource(XMC_USIC_CH_t *const channel,
1095:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****     const XMC_SPI_CH_INPUT_t input,
1096:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****     const uint8_t source)
1097:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** {
 986              	 .loc 2 1097 0
 987              	 .cfi_startproc
 988 0000 80B5     	 push {r7,lr}
 989              	.LCFI69:
 990              	 .cfi_def_cfa_offset 8
 991              	 .cfi_offset 7,-8
 992              	 .cfi_offset 14,-4
 993 0002 82B0     	 sub sp,sp,#8
 994              	.LCFI70:
 995              	 .cfi_def_cfa_offset 16
 996 0004 00AF     	 add r7,sp,#0
 997              	.LCFI71:
 998              	 .cfi_def_cfa_register 7
 999 0006 7860     	 str r0,[r7,#4]
 1000 0008 081C     	 mov r0,r1
 1001 000a 111C     	 mov r1,r2
 1002 000c FB1C     	 add r3,r7,#3
 1003 000e 021C     	 add r2,r0,#0
 1004 0010 1A70     	 strb r2,[r3]
 1005 0012 BB1C     	 add r3,r7,#2
 1006 0014 0A1C     	 add r2,r1,#0
 1007 0016 1A70     	 strb r2,[r3]
1098:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_DSEN_Msk)) | USIC_CH_DX0
 1008              	 .loc 2 1098 0
 1009 0018 FB1C     	 add r3,r7,#3
 1010 001a 1878     	 ldrb r0,[r3]
 1011 001c FB1C     	 add r3,r7,#3
 1012 001e 1B78     	 ldrb r3,[r3]
 1013 0020 7A68     	 ldr r2,[r7,#4]
 1014 0022 0633     	 add r3,r3,#6
 1015 0024 9B00     	 lsl r3,r3,#2
 1016 0026 D318     	 add r3,r2,r3
 1017 0028 5B68     	 ldr r3,[r3,#4]
 1018 002a 5022     	 mov r2,#80
 1019 002c 9343     	 bic r3,r2
 1020 002e 1022     	 mov r2,#16
 1021 0030 1A43     	 orr r2,r3
 1022 0032 7968     	 ldr r1,[r7,#4]
 1023 0034 831D     	 add r3,r0,#6
 1024 0036 9B00     	 lsl r3,r3,#2
 1025 0038 CB18     	 add r3,r1,r3
 1026 003a 5A60     	 str r2,[r3,#4]
1099:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 1027              	 .loc 2 1099 0
 1028 003c 7968     	 ldr r1,[r7,#4]
 1029 003e FB1C     	 add r3,r7,#3
 1030 0040 1A78     	 ldrb r2,[r3]
 1031 0042 BB1C     	 add r3,r7,#2
 1032 0044 1B78     	 ldrb r3,[r3]
 1033 0046 081C     	 mov r0,r1
 1034 0048 111C     	 mov r1,r2
 1035 004a 1A1C     	 mov r2,r3
 1036 004c FFF7FEFF 	 bl XMC_USIC_CH_SetInputSource
1100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_spi.h **** }
 1037              	 .loc 2 1100 0
 1038 0050 BD46     	 mov sp,r7
 1039 0052 02B0     	 add sp,sp,#8
 1040              	 
 1041 0054 80BD     	 pop {r7,pc}
 1042              	 .cfi_endproc
 1043              	.LFE164:
 1045 0056 C046     	 .section .text.SPI_MASTER_GetAppVersion,"ax",%progbits
 1046              	 .align 2
 1047              	 .global SPI_MASTER_GetAppVersion
 1048              	 .code 16
 1049              	 .thumb_func
 1051              	SPI_MASTER_GetAppVersion:
 1052              	.LFB200:
 1053              	 .file 3 "../Dave/Generated/SPI_MASTER/spi_master.c"
   1:../Dave/Generated/SPI_MASTER/spi_master.c **** /**
   2:../Dave/Generated/SPI_MASTER/spi_master.c ****  * @file spi_master.c
   3:../Dave/Generated/SPI_MASTER/spi_master.c ****  * @date 2018-06-20
   4:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
   5:../Dave/Generated/SPI_MASTER/spi_master.c ****  * NOTE:
   6:../Dave/Generated/SPI_MASTER/spi_master.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
   8:../Dave/Generated/SPI_MASTER/spi_master.c ****  * @cond
   9:../Dave/Generated/SPI_MASTER/spi_master.c ****  **************************************************************************************************
  10:../Dave/Generated/SPI_MASTER/spi_master.c ****  * SPI_MASTER v4.3.30 - Configures the properties of USIC channel to support SPI mode of communicat
  11:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  12:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  13:../Dave/Generated/SPI_MASTER/spi_master.c ****  * All rights reserved.
  14:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  15:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/SPI_MASTER/spi_master.c ****  * following conditions are met:
  17:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  18:../Dave/Generated/SPI_MASTER/spi_master.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/SPI_MASTER/spi_master.c ****  *   disclaimer.
  20:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  21:../Dave/Generated/SPI_MASTER/spi_master.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/SPI_MASTER/spi_master.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  24:../Dave/Generated/SPI_MASTER/spi_master.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/SPI_MASTER/spi_master.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  27:../Dave/Generated/SPI_MASTER/spi_master.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/SPI_MASTER/spi_master.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/SPI_MASTER/spi_master.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/SPI_MASTER/spi_master.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/SPI_MASTER/spi_master.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/SPI_MASTER/spi_master.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/SPI_MASTER/spi_master.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  35:../Dave/Generated/SPI_MASTER/spi_master.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/SPI_MASTER/spi_master.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/SPI_MASTER/spi_master.c ****  **************************************************************************************************
  38:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  39:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Change History
  40:../Dave/Generated/SPI_MASTER/spi_master.c ****  * --------------
  41:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  42:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2015-02-16:
  43:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - Initial version<br>
  44:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  45:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2015-02-20:
  46:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - SPI_MASTER_SetMode() API is updated to return, error if mode change is not possible.<br>
  47:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  48:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2015-05-08:
  49:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - SPI_MASTER_SetBaudRate() and SPI_MASTER_Transfer() are added<br>
  50:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - "SPI_MASTER_OVERSAMPLING" macro is removed, since it is not being used<br>
  51:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - SPI_MASTER_lInit() prototype is moved to spi_master_conf.c file<br>
  52:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - All local APIs are made as static<br>
  53:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - Added SPI_MASTER_lPortModeSet() and SPI_MASTER_lPortModeReset() to support SPI_MASTER_SetB
  54:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - SPI_MASTER_lStd_RBUF_Flush() renamed as SPI_MASTER_lStd_RBUFFlush()<br>
  55:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - SPI_MASTER_lGetFIFOSize() is removed by replacing the functionality<br>
  56:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - In SPI_MASTER_Receive(), SPI_MASTER_Transmit() APIs a runtime condition check is added for
  57:../Dave/Generated/SPI_MASTER/spi_master.c ****  *       and length<br>
  58:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - In SPI_MASTER_lTransmitHandler() API, local call to FIFO fill is removed and replaced with
  59:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  60:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2015-06-20:
  61:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - For SPI_MASTER_Transfer(), SPI_MASTER_Receive(), SPI_MASTER_Transmit() APIs, the input dat
  62:../Dave/Generated/SPI_MASTER/spi_master.c ****  *       from 16-bit to 8-bit.
  63:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - Word count in Transmission and reception APIs, is updated according to the word length set
  64:../Dave/Generated/SPI_MASTER/spi_master.c ****  *       instead of data length.
  65:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - In SPI_MASTER_Transfer() API, a check is added to support full duplex mode only.
  66:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - SPI_MASTER_lFIFORead() local API signature is changed to accept number of bytes per word.
  67:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - word_length is moved from SPI_MASTER_CONFIG_t to SPI_MASTER_DYNAMIC_CONFIG_t, to support r
  68:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - Abort API are updated to return the status.
  69:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  70:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2015-07-07:
  71:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - DYNAMIC_CONFIG_t is renamed as RUNTIME_t
  72:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  73:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2015-09-30:
  74:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - SPI_MASTER_STATUS_MODE_MISMATCH is returned from the transmit and receive APIs
  75:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 
  76:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2015-10-08:
  77:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - SPI_MASTER_lValidateModeChange() local API is added to chekc the mode change is vaild or n
  78:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - Abort APIs are updated.
  79:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  80:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2015-10-14:
  81:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - new variable "spi_master_config_mode" to store the actual mode generated during initialisa
  82:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - SPI_MASTER_lValidateModeChange() is updated to support full-duplex to half-duplex mode.
  83:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - XMC_USIC_CH_TriggerServiceRequest() is removed from the DMA transmit by adding during init
  84:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  85:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2015-12-17:
  86:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - Corrected transmission of unintended data during reception.
  87:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  88:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2016-04-07:
  89:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - memcpy() usage is eliminated.
  90:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - Usage of the XMC_SPI_Transmit() API is replaced with  XMC_USIC_CH_WriteToTBUFTCI(),
  91:../Dave/Generated/SPI_MASTER/spi_master.c ****  *       XMC_USIC_CH_TXFIFO_PutDataHPCMode() based on the mode selected to improve the performance.
  92:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  93:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2016-06-07:
  94:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - SPI_MASTER_Receive API in direct mode, corrected.
  95:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  96:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2016-10-26:
  97:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - Fix issue when using FIFO and high baudrates by setting the RX FIFO limit to half of the R
  98:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
  99:../Dave/Generated/SPI_MASTER/spi_master.c ****  * 2018-06-20:
 100:../Dave/Generated/SPI_MASTER/spi_master.c ****  *     - Fix SPI_MASTER_lReceiveHandler FIFO limit setting
 101:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
 102:../Dave/Generated/SPI_MASTER/spi_master.c ****  * @endcond
 103:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
 104:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 105:../Dave/Generated/SPI_MASTER/spi_master.c **** /**************************************************************************************************
 106:../Dave/Generated/SPI_MASTER/spi_master.c ****  * HEADER FILES
 107:../Dave/Generated/SPI_MASTER/spi_master.c ****  **************************************************************************************************
 108:../Dave/Generated/SPI_MASTER/spi_master.c **** #include "spi_master.h"
 109:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 110:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 111:../Dave/Generated/SPI_MASTER/spi_master.c **** /**************************************************************************************************
 112:../Dave/Generated/SPI_MASTER/spi_master.c ****  * MACROS
 113:../Dave/Generated/SPI_MASTER/spi_master.c ****  **************************************************************************************************
 114:../Dave/Generated/SPI_MASTER/spi_master.c **** #define SPI_MASTER_WORD_LENGTH_8_BIT             (8U) /* This is used to check while incrementing t
 115:../Dave/Generated/SPI_MASTER/spi_master.c **** #define SPI_MASTER_2_BYTES_PER_WORD              (2U) /* Word length is 16-bits */
 116:../Dave/Generated/SPI_MASTER/spi_master.c **** #define SPI_MASTER_1_BYTE_PER_WORD               (1U) /* Word length is 8-bits */
 117:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 118:../Dave/Generated/SPI_MASTER/spi_master.c **** #define SPI_MASTER_RECEIVE_INDICATION_FLAG       ((uint32_t)XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATI
 119:../Dave/Generated/SPI_MASTER/spi_master.c ****                                                   (uint32_t)XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECE
 120:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 121:../Dave/Generated/SPI_MASTER/spi_master.c **** #define SPI_MASTER_FIFO_RECEIVE_INDICATION_FLAG  ((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_STANDARD | \
 122:../Dave/Generated/SPI_MASTER/spi_master.c ****                                                   (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE)
 123:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 124:../Dave/Generated/SPI_MASTER/spi_master.c **** #define SPI_MASTER_RECEIVE_EVENT                 ((uint32_t)XMC_SPI_CH_EVENT_STANDARD_RECEIVE | \
 125:../Dave/Generated/SPI_MASTER/spi_master.c ****                                                   (uint32_t)XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE)
 126:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 127:../Dave/Generated/SPI_MASTER/spi_master.c **** #define SPI_MASTER_FIFO_RECEIVE_EVENT            ((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD 
 128:../Dave/Generated/SPI_MASTER/spi_master.c ****                                                   (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE
 129:../Dave/Generated/SPI_MASTER/spi_master.c **** /**************************************************************************************************
 130:../Dave/Generated/SPI_MASTER/spi_master.c ****  * LOCAL DATA
 131:../Dave/Generated/SPI_MASTER/spi_master.c **** ***************************************************************************************************
 132:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 133:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 134:../Dave/Generated/SPI_MASTER/spi_master.c **** /**************************************************************************************************
 135:../Dave/Generated/SPI_MASTER/spi_master.c ****  * LOCAL ROUTINES
 136:../Dave/Generated/SPI_MASTER/spi_master.c ****  **************************************************************************************************
 137:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_INTERRUPT_TRANSMIT_MODE == 1U)
 138:../Dave/Generated/SPI_MASTER/spi_master.c **** /* Transmit interrupt handler for the APP */
 139:../Dave/Generated/SPI_MASTER/spi_master.c **** void SPI_MASTER_lTransmitHandler(const SPI_MASTER_t * const handle);
 140:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 141:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 142:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
 143:../Dave/Generated/SPI_MASTER/spi_master.c **** static SPI_MASTER_STATUS_t SPI_MASTER_lReceiveIRQ(const SPI_MASTER_t *const handle, uint32_t count)
 144:../Dave/Generated/SPI_MASTER/spi_master.c **** /* This is used to reconfigure the FIFO settings dynamically */
 145:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lReconfigureRxFIFO(const SPI_MASTER_t * const handle, uint32_t data_size);
 146:../Dave/Generated/SPI_MASTER/spi_master.c **** /* Read data from FIFO */
 147:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lFIFORead(const SPI_MASTER_t * const handle, const uint32_t bytes_per_word);
 148:../Dave/Generated/SPI_MASTER/spi_master.c **** /* Receive interrupt handler for the APP */
 149:../Dave/Generated/SPI_MASTER/spi_master.c **** void SPI_MASTER_lReceiveHandler(const SPI_MASTER_t * const handle);
 150:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 151:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 152:../Dave/Generated/SPI_MASTER/spi_master.c **** #if(SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 153:../Dave/Generated/SPI_MASTER/spi_master.c **** static SPI_MASTER_STATUS_t SPI_MASTER_lReceiveDMA(const SPI_MASTER_t *const handle, uint32_t count)
 154:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 155:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 156:../Dave/Generated/SPI_MASTER/spi_master.c **** #if(SPI_MASTER_DIRECT_TRANSMIT_MODE == 1U)
 157:../Dave/Generated/SPI_MASTER/spi_master.c **** static SPI_MASTER_STATUS_t SPI_MASTER_lStartTransmitPolling(const SPI_MASTER_t *const handle, uint8
 158:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 159:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 160:../Dave/Generated/SPI_MASTER/spi_master.c **** #if(SPI_MASTER_DIRECT_RECEIVE_MODE == 1U)
 161:../Dave/Generated/SPI_MASTER/spi_master.c **** static SPI_MASTER_STATUS_t SPI_MASTER_lStartReceivePolling(const SPI_MASTER_t *const handle, uint8_
 162:../Dave/Generated/SPI_MASTER/spi_master.c **** static SPI_MASTER_STATUS_t SPI_MASTER_lReceivePolling(const SPI_MASTER_t *const handle, uint32_t co
 163:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 164:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 165:../Dave/Generated/SPI_MASTER/spi_master.c **** #ifdef SPI_MASTER_PARITY_ERROR
 166:../Dave/Generated/SPI_MASTER/spi_master.c **** /* Protocol interrupt handler for the APP */
 167:../Dave/Generated/SPI_MASTER/spi_master.c **** void SPI_MASTER_lProtocolHandler(const SPI_MASTER_t * const handle);
 168:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 169:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 170:../Dave/Generated/SPI_MASTER/spi_master.c **** /* Flush RBUF0, RBUF1 */
 171:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lStdRBUFFlush(XMC_USIC_CH_t *const channel);
 172:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 173:../Dave/Generated/SPI_MASTER/spi_master.c **** /* This is used to reconfigure the registers while changing the SPI mode dynamically */
 174:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lPortConfig(const SPI_MASTER_t* handle);
 175:../Dave/Generated/SPI_MASTER/spi_master.c **** /* Set the mode of the port pin according to the configuration */
 176:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lPortModeSet(const SPI_MASTER_t* handle);
 177:../Dave/Generated/SPI_MASTER/spi_master.c **** /* Set the mode of the port pin as input */
 178:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lPortModeReset(const SPI_MASTER_t* handle);
 179:../Dave/Generated/SPI_MASTER/spi_master.c **** /* Returns whether mode change is valid or not */
 180:../Dave/Generated/SPI_MASTER/spi_master.c **** static SPI_MASTER_STATUS_t SPI_MASTER_lValidateModeChange(const SPI_MASTER_t * handle, XMC_SPI_CH_M
 181:../Dave/Generated/SPI_MASTER/spi_master.c **** /**************************************************************************************************
 182:../Dave/Generated/SPI_MASTER/spi_master.c ****  * API IMPLEMENTATION
 183:../Dave/Generated/SPI_MASTER/spi_master.c ****  **************************************************************************************************
 184:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
 185:../Dave/Generated/SPI_MASTER/spi_master.c ****  * API to retrieve the version of the SPI_MASTER
 186:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 187:../Dave/Generated/SPI_MASTER/spi_master.c **** DAVE_APP_VERSION_t SPI_MASTER_GetAppVersion()
 188:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 1054              	 .loc 3 188 0
 1055              	 .cfi_startproc
 1056 0000 80B5     	 push {r7,lr}
 1057              	.LCFI72:
 1058              	 .cfi_def_cfa_offset 8
 1059              	 .cfi_offset 7,-8
 1060              	 .cfi_offset 14,-4
 1061 0002 82B0     	 sub sp,sp,#8
 1062              	.LCFI73:
 1063              	 .cfi_def_cfa_offset 16
 1064 0004 00AF     	 add r7,sp,#0
 1065              	.LCFI74:
 1066              	 .cfi_def_cfa_register 7
 189:../Dave/Generated/SPI_MASTER/spi_master.c ****   DAVE_APP_VERSION_t version;
 190:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 191:../Dave/Generated/SPI_MASTER/spi_master.c ****   version.major = SPI_MASTER_MAJOR_VERSION;
 1067              	 .loc 3 191 0
 1068 0006 3B1C     	 mov r3,r7
 1069 0008 0422     	 mov r2,#4
 1070 000a 1A70     	 strb r2,[r3]
 192:../Dave/Generated/SPI_MASTER/spi_master.c ****   version.minor = SPI_MASTER_MINOR_VERSION;
 1071              	 .loc 3 192 0
 1072 000c 3B1C     	 mov r3,r7
 1073 000e 0322     	 mov r2,#3
 1074 0010 5A70     	 strb r2,[r3,#1]
 193:../Dave/Generated/SPI_MASTER/spi_master.c ****   version.patch = SPI_MASTER_PATCH_VERSION;
 1075              	 .loc 3 193 0
 1076 0012 3B1C     	 mov r3,r7
 1077 0014 1E22     	 mov r2,#30
 1078 0016 9A70     	 strb r2,[r3,#2]
 194:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 195:../Dave/Generated/SPI_MASTER/spi_master.c ****   return version;
 1079              	 .loc 3 195 0
 1080 0018 3B1D     	 add r3,r7,#4
 1081 001a 3A1C     	 mov r2,r7
 1082 001c 1188     	 ldrh r1,[r2]
 1083 001e 1980     	 strh r1,[r3]
 1084 0020 9278     	 ldrb r2,[r2,#2]
 1085 0022 9A70     	 strb r2,[r3,#2]
 1086 0024 3A1D     	 add r2,r7,#4
 1087 0026 0023     	 mov r3,#0
 1088 0028 1178     	 ldrb r1,[r2]
 1089 002a FF20     	 mov r0,#255
 1090 002c 0140     	 and r1,r0
 1091 002e FF20     	 mov r0,#255
 1092 0030 8343     	 bic r3,r0
 1093 0032 0B43     	 orr r3,r1
 1094 0034 5178     	 ldrb r1,[r2,#1]
 1095 0036 FF20     	 mov r0,#255
 1096 0038 0140     	 and r1,r0
 1097 003a 0902     	 lsl r1,r1,#8
 1098 003c 0648     	 ldr r0,.L36
 1099 003e 0340     	 and r3,r0
 1100 0040 0B43     	 orr r3,r1
 1101 0042 9278     	 ldrb r2,[r2,#2]
 1102 0044 FF21     	 mov r1,#255
 1103 0046 0A40     	 and r2,r1
 1104 0048 1204     	 lsl r2,r2,#16
 1105 004a 0449     	 ldr r1,.L36+4
 1106 004c 0B40     	 and r3,r1
 1107 004e 1343     	 orr r3,r2
 196:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 1108              	 .loc 3 196 0
 1109 0050 181C     	 mov r0,r3
 1110 0052 BD46     	 mov sp,r7
 1111 0054 02B0     	 add sp,sp,#8
 1112              	 
 1113 0056 80BD     	 pop {r7,pc}
 1114              	.L37:
 1115              	 .align 2
 1116              	.L36:
 1117 0058 FF00FFFF 	 .word -65281
 1118 005c FFFF00FF 	 .word -16711681
 1119              	 .cfi_endproc
 1120              	.LFE200:
 1122              	 .section .text.SPI_MASTER_Init,"ax",%progbits
 1123              	 .align 2
 1124              	 .global SPI_MASTER_Init
 1125              	 .code 16
 1126              	 .thumb_func
 1128              	SPI_MASTER_Init:
 1129              	.LFB201:
 197:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 198:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
 199:../Dave/Generated/SPI_MASTER/spi_master.c ****  * This function initializes the SPI channel, based on UI configuration.
 200:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 201:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_Init(SPI_MASTER_t* const handle)
 202:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 1130              	 .loc 3 202 0
 1131              	 .cfi_startproc
 1132 0000 90B5     	 push {r4,r7,lr}
 1133              	.LCFI75:
 1134              	 .cfi_def_cfa_offset 12
 1135              	 .cfi_offset 4,-12
 1136              	 .cfi_offset 7,-8
 1137              	 .cfi_offset 14,-4
 1138 0002 85B0     	 sub sp,sp,#20
 1139              	.LCFI76:
 1140              	 .cfi_def_cfa_offset 32
 1141 0004 00AF     	 add r7,sp,#0
 1142              	.LCFI77:
 1143              	 .cfi_def_cfa_register 7
 1144 0006 7860     	 str r0,[r7,#4]
 203:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 204:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 205:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_ASSERT("SPI_MASTER_Init:handle NULL" , (handle != NULL));
 206:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 207:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* Configure the port registers and data input registers of SPI channel */
 208:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = handle->config->fptr_spi_master_config();
 1145              	 .loc 3 208 0
 1146 0008 7B68     	 ldr r3,[r7,#4]
 1147 000a 5B68     	 ldr r3,[r3,#4]
 1148 000c 5B68     	 ldr r3,[r3,#4]
 1149 000e 0F22     	 mov r2,#15
 1150 0010 BC18     	 add r4,r7,r2
 1151 0012 9847     	 blx r3
 1152 0014 031C     	 mov r3,r0
 1153 0016 2370     	 strb r3,[r4]
 209:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 210:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 1154              	 .loc 3 210 0
 1155 0018 0F23     	 mov r3,#15
 1156 001a FB18     	 add r3,r7,r3
 1157 001c 1B78     	 ldrb r3,[r3]
 211:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 1158              	 .loc 3 211 0
 1159 001e 181C     	 mov r0,r3
 1160 0020 BD46     	 mov sp,r7
 1161 0022 05B0     	 add sp,sp,#20
 1162              	 
 1163 0024 90BD     	 pop {r4,r7,pc}
 1164              	 .cfi_endproc
 1165              	.LFE201:
 1167 0026 C046     	 .section .text.SPI_MASTER_SetMode,"ax",%progbits
 1168              	 .align 2
 1169              	 .global SPI_MASTER_SetMode
 1170              	 .code 16
 1171              	 .thumb_func
 1173              	SPI_MASTER_SetMode:
 1174              	.LFB202:
 212:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 213:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
 214:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Change the SPI mode of communication.
 215:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 216:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_SetMode(SPI_MASTER_t* const handle,
 217:../Dave/Generated/SPI_MASTER/spi_master.c ****                                        const XMC_SPI_CH_MODE_t mode)
 218:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 1175              	 .loc 3 218 0
 1176              	 .cfi_startproc
 1177 0000 90B5     	 push {r4,r7,lr}
 1178              	.LCFI78:
 1179              	 .cfi_def_cfa_offset 12
 1180              	 .cfi_offset 4,-12
 1181              	 .cfi_offset 7,-8
 1182              	 .cfi_offset 14,-4
 1183 0002 85B0     	 sub sp,sp,#20
 1184              	.LCFI79:
 1185              	 .cfi_def_cfa_offset 32
 1186 0004 00AF     	 add r7,sp,#0
 1187              	.LCFI80:
 1188              	 .cfi_def_cfa_register 7
 1189 0006 7860     	 str r0,[r7,#4]
 1190 0008 0A1C     	 mov r2,r1
 1191 000a FB1C     	 add r3,r7,#3
 1192 000c 1A70     	 strb r2,[r3]
 219:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 220:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 221:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_ASSERT("SPI_MASTER_Configure:handle NULL" , (handle != NULL));
 222:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 223:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_SUCCESS;
 1193              	 .loc 3 223 0
 1194 000e 0F23     	 mov r3,#15
 1195 0010 FB18     	 add r3,r7,r3
 1196 0012 0022     	 mov r2,#0
 1197 0014 1A70     	 strb r2,[r3]
 224:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 225:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((false == handle->runtime->tx_busy) && (false == handle->runtime->rx_busy))
 1198              	 .loc 3 225 0
 1199 0016 7B68     	 ldr r3,[r7,#4]
 1200 0018 9B68     	 ldr r3,[r3,#8]
 1201 001a 2022     	 mov r2,#32
 1202 001c 9B5C     	 ldrb r3,[r3,r2]
 1203 001e DBB2     	 uxtb r3,r3
 1204 0020 0122     	 mov r2,#1
 1205 0022 5340     	 eor r3,r2
 1206 0024 DBB2     	 uxtb r3,r3
 1207 0026 002B     	 cmp r3,#0
 1208 0028 2BD0     	 beq .L41
 1209              	 .loc 3 225 0 is_stmt 0 discriminator 1
 1210 002a 7B68     	 ldr r3,[r7,#4]
 1211 002c 9B68     	 ldr r3,[r3,#8]
 1212 002e DB7F     	 ldrb r3,[r3,#31]
 1213 0030 DBB2     	 uxtb r3,r3
 1214 0032 0122     	 mov r2,#1
 1215 0034 5340     	 eor r3,r2
 1216 0036 DBB2     	 uxtb r3,r3
 1217 0038 002B     	 cmp r3,#0
 1218 003a 22D0     	 beq .L41
 226:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 227:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (handle->runtime->spi_master_mode != mode)
 1219              	 .loc 3 227 0 is_stmt 1
 1220 003c 7B68     	 ldr r3,[r7,#4]
 1221 003e 9B68     	 ldr r3,[r3,#8]
 1222 0040 1B7F     	 ldrb r3,[r3,#28]
 1223 0042 DBB2     	 uxtb r3,r3
 1224 0044 FA1C     	 add r2,r7,#3
 1225 0046 1278     	 ldrb r2,[r2]
 1226 0048 9A42     	 cmp r2,r3
 1227 004a 19D0     	 beq .L42
 228:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 229:../Dave/Generated/SPI_MASTER/spi_master.c ****       status =  SPI_MASTER_lValidateModeChange(handle, mode);
 1228              	 .loc 3 229 0
 1229 004c 0F23     	 mov r3,#15
 1230 004e FC18     	 add r4,r7,r3
 1231 0050 7A68     	 ldr r2,[r7,#4]
 1232 0052 FB1C     	 add r3,r7,#3
 1233 0054 1B78     	 ldrb r3,[r3]
 1234 0056 101C     	 mov r0,r2
 1235 0058 191C     	 mov r1,r3
 1236 005a FFF7FEFF 	 bl SPI_MASTER_lValidateModeChange
 1237 005e 031C     	 mov r3,r0
 1238 0060 2370     	 strb r3,[r4]
 230:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 231:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (SPI_MASTER_STATUS_SUCCESS == status)
 1239              	 .loc 3 231 0
 1240 0062 0F23     	 mov r3,#15
 1241 0064 FB18     	 add r3,r7,r3
 1242 0066 1B78     	 ldrb r3,[r3]
 1243 0068 002B     	 cmp r3,#0
 1244 006a 09D1     	 bne .L42
 232:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 233:../Dave/Generated/SPI_MASTER/spi_master.c ****         handle->runtime->spi_master_mode = mode;
 1245              	 .loc 3 233 0
 1246 006c 7B68     	 ldr r3,[r7,#4]
 1247 006e 9B68     	 ldr r3,[r3,#8]
 1248 0070 FA1C     	 add r2,r7,#3
 1249 0072 1278     	 ldrb r2,[r2]
 1250 0074 1A77     	 strb r2,[r3,#28]
 234:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 235:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* This changes the operating mode and related settings */
 236:../Dave/Generated/SPI_MASTER/spi_master.c ****         SPI_MASTER_lPortConfig(handle);
 1251              	 .loc 3 236 0
 1252 0076 7B68     	 ldr r3,[r7,#4]
 1253 0078 181C     	 mov r0,r3
 1254 007a FFF7FEFF 	 bl SPI_MASTER_lPortConfig
 227:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 1255              	 .loc 3 227 0
 1256 007e 04E0     	 b .L43
 1257              	.L42:
 1258 0080 03E0     	 b .L43
 1259              	.L41:
 237:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 238:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 239:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 240:../Dave/Generated/SPI_MASTER/spi_master.c ****   else
 241:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 242:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_STATUS_BUSY;
 1260              	 .loc 3 242 0
 1261 0082 0F23     	 mov r3,#15
 1262 0084 FB18     	 add r3,r7,r3
 1263 0086 0222     	 mov r2,#2
 1264 0088 1A70     	 strb r2,[r3]
 1265              	.L43:
 243:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 244:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 1266              	 .loc 3 244 0
 1267 008a 0F23     	 mov r3,#15
 1268 008c FB18     	 add r3,r7,r3
 1269 008e 1B78     	 ldrb r3,[r3]
 245:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 1270              	 .loc 3 245 0
 1271 0090 181C     	 mov r0,r3
 1272 0092 BD46     	 mov sp,r7
 1273 0094 05B0     	 add sp,sp,#20
 1274              	 
 1275 0096 90BD     	 pop {r4,r7,pc}
 1276              	 .cfi_endproc
 1277              	.LFE202:
 1279              	 .section .text.SPI_MASTER_SetBaudRate,"ax",%progbits
 1280              	 .align 2
 1281              	 .global SPI_MASTER_SetBaudRate
 1282              	 .code 16
 1283              	 .thumb_func
 1285              	SPI_MASTER_SetBaudRate:
 1286              	.LFB203:
 246:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 247:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
 248:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Set the baud rate during runtime.
 249:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 250:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_SetBaudRate(SPI_MASTER_t* const handle, const uint32_t baud_rate)
 251:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 1287              	 .loc 3 251 0
 1288              	 .cfi_startproc
 1289 0000 90B5     	 push {r4,r7,lr}
 1290              	.LCFI81:
 1291              	 .cfi_def_cfa_offset 12
 1292              	 .cfi_offset 4,-12
 1293              	 .cfi_offset 7,-8
 1294              	 .cfi_offset 14,-4
 1295 0002 85B0     	 sub sp,sp,#20
 1296              	.LCFI82:
 1297              	 .cfi_def_cfa_offset 32
 1298 0004 00AF     	 add r7,sp,#0
 1299              	.LCFI83:
 1300              	 .cfi_def_cfa_register 7
 1301 0006 7860     	 str r0,[r7,#4]
 1302 0008 3960     	 str r1,[r7]
 252:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 253:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 254:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((false == handle->runtime->tx_busy) && (false == handle->runtime->rx_busy))
 1303              	 .loc 3 254 0
 1304 000a 7B68     	 ldr r3,[r7,#4]
 1305 000c 9B68     	 ldr r3,[r3,#8]
 1306 000e 2022     	 mov r2,#32
 1307 0010 9B5C     	 ldrb r3,[r3,r2]
 1308 0012 DBB2     	 uxtb r3,r3
 1309 0014 0122     	 mov r2,#1
 1310 0016 5340     	 eor r3,r2
 1311 0018 DBB2     	 uxtb r3,r3
 1312 001a 002B     	 cmp r3,#0
 1313 001c 4AD0     	 beq .L46
 1314              	 .loc 3 254 0 is_stmt 0 discriminator 1
 1315 001e 7B68     	 ldr r3,[r7,#4]
 1316 0020 9B68     	 ldr r3,[r3,#8]
 1317 0022 DB7F     	 ldrb r3,[r3,#31]
 1318 0024 DBB2     	 uxtb r3,r3
 1319 0026 0122     	 mov r2,#1
 1320 0028 5340     	 eor r3,r2
 1321 002a DBB2     	 uxtb r3,r3
 1322 002c 002B     	 cmp r3,#0
 1323 002e 41D0     	 beq .L46
 255:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 256:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Stops the SPI channel */
 257:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = (SPI_MASTER_STATUS_t)XMC_SPI_CH_Stop(handle->channel);
 1324              	 .loc 3 257 0 is_stmt 1
 1325 0030 7B68     	 ldr r3,[r7,#4]
 1326 0032 1B68     	 ldr r3,[r3]
 1327 0034 0F22     	 mov r2,#15
 1328 0036 BC18     	 add r4,r7,r2
 1329 0038 181C     	 mov r0,r3
 1330 003a FFF7FEFF 	 bl XMC_SPI_CH_Stop
 1331 003e 031C     	 mov r3,r0
 1332 0040 2370     	 strb r3,[r4]
 258:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 259:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (SPI_MASTER_STATUS_SUCCESS == status)
 1333              	 .loc 3 259 0
 1334 0042 0F23     	 mov r3,#15
 1335 0044 FB18     	 add r3,r7,r3
 1336 0046 1B78     	 ldrb r3,[r3]
 1337 0048 002B     	 cmp r3,#0
 1338 004a 32D1     	 bne .L47
 260:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 261:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Set all the pins as input */
 262:../Dave/Generated/SPI_MASTER/spi_master.c ****       SPI_MASTER_lPortModeReset(handle);
 1339              	 .loc 3 262 0
 1340 004c 7B68     	 ldr r3,[r7,#4]
 1341 004e 181C     	 mov r0,r3
 1342 0050 FFF7FEFF 	 bl SPI_MASTER_lPortModeReset
 263:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 264:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Update the new baud rate */
 265:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = (SPI_MASTER_STATUS_t)XMC_SPI_CH_SetBaudrate(handle->channel, baud_rate);
 1343              	 .loc 3 265 0
 1344 0054 7B68     	 ldr r3,[r7,#4]
 1345 0056 1A68     	 ldr r2,[r3]
 1346 0058 0F23     	 mov r3,#15
 1347 005a FC18     	 add r4,r7,r3
 1348 005c 3B68     	 ldr r3,[r7]
 1349 005e 101C     	 mov r0,r2
 1350 0060 191C     	 mov r1,r3
 1351 0062 FFF7FEFF 	 bl XMC_SPI_CH_SetBaudrate
 1352 0066 031C     	 mov r3,r0
 1353 0068 2370     	 strb r3,[r4]
 266:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 267:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (SPI_MASTER_STATUS_SUCCESS == status)
 1354              	 .loc 3 267 0
 1355 006a 0F23     	 mov r3,#15
 1356 006c FB18     	 add r3,r7,r3
 1357 006e 1B78     	 ldrb r3,[r3]
 1358 0070 002B     	 cmp r3,#0
 1359 0072 09D1     	 bne .L48
 268:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 269:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Configure Leading/Trailing delay */
 270:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_SPI_CH_SetSlaveSelectDelay(handle->channel, (uint32_t)handle->config->leading_trailing_
 1360              	 .loc 3 270 0
 1361 0074 7B68     	 ldr r3,[r7,#4]
 1362 0076 1968     	 ldr r1,[r3]
 1363 0078 7B68     	 ldr r3,[r7,#4]
 1364 007a 5B68     	 ldr r3,[r3,#4]
 1365 007c 8822     	 mov r2,#136
 1366 007e 9B5C     	 ldrb r3,[r3,r2]
 1367 0080 081C     	 mov r0,r1
 1368 0082 191C     	 mov r1,r3
 1369 0084 FFF7FEFF 	 bl XMC_SPI_CH_SetSlaveSelectDelay
 1370              	.L48:
 271:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 272:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 273:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Configure the clock polarity and clock delay */
 274:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_SPI_CH_ConfigureShiftClockOutput(handle->channel,
 1371              	 .loc 3 274 0
 1372 0088 7B68     	 ldr r3,[r7,#4]
 1373 008a 1968     	 ldr r1,[r3]
 275:../Dave/Generated/SPI_MASTER/spi_master.c ****                                            handle->config->shift_clk_passive_level,
 1374              	 .loc 3 275 0
 1375 008c 7B68     	 ldr r3,[r7,#4]
 1376 008e 5B68     	 ldr r3,[r3,#4]
 274:../Dave/Generated/SPI_MASTER/spi_master.c ****                                            handle->config->shift_clk_passive_level,
 1377              	 .loc 3 274 0
 1378 0090 8022     	 mov r2,#128
 1379 0092 9B58     	 ldr r3,[r3,r2]
 1380 0094 081C     	 mov r0,r1
 1381 0096 191C     	 mov r1,r3
 1382 0098 0022     	 mov r2,#0
 1383 009a FFF7FEFF 	 bl XMC_SPI_CH_ConfigureShiftClockOutput
 276:../Dave/Generated/SPI_MASTER/spi_master.c ****                                            XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK);
 277:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Start the SPI channel */
 278:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_SPI_CH_Start(handle->channel);
 1384              	 .loc 3 278 0
 1385 009e 7B68     	 ldr r3,[r7,#4]
 1386 00a0 1B68     	 ldr r3,[r3]
 1387 00a2 181C     	 mov r0,r3
 1388 00a4 FFF7FEFF 	 bl XMC_SPI_CH_Start
 279:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 280:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Set the mode of the according the generated configuration */
 281:../Dave/Generated/SPI_MASTER/spi_master.c ****       SPI_MASTER_lPortModeSet(handle);
 1389              	 .loc 3 281 0
 1390 00a8 7B68     	 ldr r3,[r7,#4]
 1391 00aa 181C     	 mov r0,r3
 1392 00ac FFF7FEFF 	 bl SPI_MASTER_lPortModeSet
 259:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 1393              	 .loc 3 259 0
 1394 00b0 04E0     	 b .L49
 1395              	.L47:
 1396 00b2 03E0     	 b .L49
 1397              	.L46:
 282:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 283:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 284:../Dave/Generated/SPI_MASTER/spi_master.c ****   else
 285:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 286:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_STATUS_BUSY;
 1398              	 .loc 3 286 0
 1399 00b4 0F23     	 mov r3,#15
 1400 00b6 FB18     	 add r3,r7,r3
 1401 00b8 0222     	 mov r2,#2
 1402 00ba 1A70     	 strb r2,[r3]
 1403              	.L49:
 287:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 288:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 289:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 1404              	 .loc 3 289 0
 1405 00bc 0F23     	 mov r3,#15
 1406 00be FB18     	 add r3,r7,r3
 1407 00c0 1B78     	 ldrb r3,[r3]
 290:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 1408              	 .loc 3 290 0
 1409 00c2 181C     	 mov r0,r3
 1410 00c4 BD46     	 mov sp,r7
 1411 00c6 05B0     	 add sp,sp,#20
 1412              	 
 1413 00c8 90BD     	 pop {r4,r7,pc}
 1414              	 .cfi_endproc
 1415              	.LFE203:
 1417 00ca C046     	 .section .text.SPI_MASTER_Transmit,"ax",%progbits
 1418              	 .align 2
 1419              	 .global SPI_MASTER_Transmit
 1420              	 .code 16
 1421              	 .thumb_func
 1423              	SPI_MASTER_Transmit:
 1424              	.LFB204:
 291:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 292:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_Transmit(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_
 293:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 1425              	 .loc 3 293 0
 1426              	 .cfi_startproc
 1427 0000 90B5     	 push {r4,r7,lr}
 1428              	.LCFI84:
 1429              	 .cfi_def_cfa_offset 12
 1430              	 .cfi_offset 4,-12
 1431              	 .cfi_offset 7,-8
 1432              	 .cfi_offset 14,-4
 1433 0002 87B0     	 sub sp,sp,#28
 1434              	.LCFI85:
 1435              	 .cfi_def_cfa_offset 40
 1436 0004 00AF     	 add r7,sp,#0
 1437              	.LCFI86:
 1438              	 .cfi_def_cfa_register 7
 1439 0006 F860     	 str r0,[r7,#12]
 1440 0008 B960     	 str r1,[r7,#8]
 1441 000a 7A60     	 str r2,[r7,#4]
 294:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 295:../Dave/Generated/SPI_MASTER/spi_master.c ****   
 296:../Dave/Generated/SPI_MASTER/spi_master.c ****    status = SPI_MASTER_STATUS_FAILURE;
 1442              	 .loc 3 296 0
 1443 000c 1723     	 mov r3,#23
 1444 000e FB18     	 add r3,r7,r3
 1445 0010 0122     	 mov r2,#1
 1446 0012 1A70     	 strb r2,[r3]
 297:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 298:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_INTERRUPT_TRANSMIT_MODE == 1U)
 299:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->config->transmit_mode == SPI_MASTER_TRANSFER_MODE_INTERRUPT)
 1447              	 .loc 3 299 0
 1448 0014 FB68     	 ldr r3,[r7,#12]
 1449 0016 5B68     	 ldr r3,[r3,#4]
 1450 0018 8422     	 mov r2,#132
 1451 001a 9B5C     	 ldrb r3,[r3,r2]
 1452 001c 002B     	 cmp r3,#0
 1453 001e 0BD1     	 bne .L52
 300:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 301:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_StartTransmitIRQ(handle, dataptr, count);
 1454              	 .loc 3 301 0
 1455 0020 1723     	 mov r3,#23
 1456 0022 FC18     	 add r4,r7,r3
 1457 0024 F968     	 ldr r1,[r7,#12]
 1458 0026 BA68     	 ldr r2,[r7,#8]
 1459 0028 7B68     	 ldr r3,[r7,#4]
 1460 002a 081C     	 mov r0,r1
 1461 002c 111C     	 mov r1,r2
 1462 002e 1A1C     	 mov r2,r3
 1463 0030 FFF7FEFF 	 bl SPI_MASTER_StartTransmitIRQ
 1464 0034 031C     	 mov r3,r0
 1465 0036 2370     	 strb r3,[r4]
 1466              	.L52:
 302:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 303:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 304:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 305:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 306:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->config->transmit_mode == SPI_MASTER_TRANSFER_MODE_DMA)
 307:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 308:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_StartTransmitDMA(handle, dataptr, count);
 309:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 310:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 311:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 312:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DIRECT_TRANSMIT_MODE == 1U)
 313:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->config->transmit_mode == SPI_MASTER_TRANSFER_MODE_DIRECT)
 314:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 315:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_lStartTransmitPolling(handle, dataptr, count);
 316:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 317:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 318:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 319:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 1467              	 .loc 3 319 0
 1468 0038 1723     	 mov r3,#23
 1469 003a FB18     	 add r3,r7,r3
 1470 003c 1B78     	 ldrb r3,[r3]
 320:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 1471              	 .loc 3 320 0
 1472 003e 181C     	 mov r0,r3
 1473 0040 BD46     	 mov sp,r7
 1474 0042 07B0     	 add sp,sp,#28
 1475              	 
 1476 0044 90BD     	 pop {r4,r7,pc}
 1477              	 .cfi_endproc
 1478              	.LFE204:
 1480 0046 C046     	 .section .text.SPI_MASTER_Receive,"ax",%progbits
 1481              	 .align 2
 1482              	 .global SPI_MASTER_Receive
 1483              	 .code 16
 1484              	 .thumb_func
 1486              	SPI_MASTER_Receive:
 1487              	.LFB205:
 321:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 322:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_Receive(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_t
 323:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 1488              	 .loc 3 323 0
 1489              	 .cfi_startproc
 1490 0000 90B5     	 push {r4,r7,lr}
 1491              	.LCFI87:
 1492              	 .cfi_def_cfa_offset 12
 1493              	 .cfi_offset 4,-12
 1494              	 .cfi_offset 7,-8
 1495              	 .cfi_offset 14,-4
 1496 0002 87B0     	 sub sp,sp,#28
 1497              	.LCFI88:
 1498              	 .cfi_def_cfa_offset 40
 1499 0004 00AF     	 add r7,sp,#0
 1500              	.LCFI89:
 1501              	 .cfi_def_cfa_register 7
 1502 0006 F860     	 str r0,[r7,#12]
 1503 0008 B960     	 str r1,[r7,#8]
 1504 000a 7A60     	 str r2,[r7,#4]
 324:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 325:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 326:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_FAILURE;
 1505              	 .loc 3 326 0
 1506 000c 1723     	 mov r3,#23
 1507 000e FB18     	 add r3,r7,r3
 1508 0010 0122     	 mov r2,#1
 1509 0012 1A70     	 strb r2,[r3]
 327:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 328:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
 329:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->config->receive_mode == SPI_MASTER_TRANSFER_MODE_INTERRUPT)
 1510              	 .loc 3 329 0
 1511 0014 FB68     	 ldr r3,[r7,#12]
 1512 0016 5B68     	 ldr r3,[r3,#4]
 1513 0018 8522     	 mov r2,#133
 1514 001a 9B5C     	 ldrb r3,[r3,r2]
 1515 001c 002B     	 cmp r3,#0
 1516 001e 0BD1     	 bne .L55
 330:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 331:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_StartReceiveIRQ(handle, dataptr, count);
 1517              	 .loc 3 331 0
 1518 0020 1723     	 mov r3,#23
 1519 0022 FC18     	 add r4,r7,r3
 1520 0024 F968     	 ldr r1,[r7,#12]
 1521 0026 BA68     	 ldr r2,[r7,#8]
 1522 0028 7B68     	 ldr r3,[r7,#4]
 1523 002a 081C     	 mov r0,r1
 1524 002c 111C     	 mov r1,r2
 1525 002e 1A1C     	 mov r2,r3
 1526 0030 FFF7FEFF 	 bl SPI_MASTER_StartReceiveIRQ
 1527 0034 031C     	 mov r3,r0
 1528 0036 2370     	 strb r3,[r4]
 1529              	.L55:
 332:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 333:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 334:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 335:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 336:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->config->receive_mode == SPI_MASTER_TRANSFER_MODE_DMA)
 337:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 338:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_StartReceiveDMA(handle, dataptr, count);
 339:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 340:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 341:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 342:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DIRECT_RECEIVE_MODE == 1U)
 343:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->config->receive_mode == SPI_MASTER_TRANSFER_MODE_DIRECT)
 344:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 345:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_lStartReceivePolling(handle, dataptr, count);
 346:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 347:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 348:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 349:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 1530              	 .loc 3 349 0
 1531 0038 1723     	 mov r3,#23
 1532 003a FB18     	 add r3,r7,r3
 1533 003c 1B78     	 ldrb r3,[r3]
 350:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 1534              	 .loc 3 350 0
 1535 003e 181C     	 mov r0,r3
 1536 0040 BD46     	 mov sp,r7
 1537 0042 07B0     	 add sp,sp,#28
 1538              	 
 1539 0044 90BD     	 pop {r4,r7,pc}
 1540              	 .cfi_endproc
 1541              	.LFE205:
 1543 0046 C046     	 .section .text.SPI_MASTER_StartTransmitIRQ,"ax",%progbits
 1544              	 .align 2
 1545              	 .global SPI_MASTER_StartTransmitIRQ
 1546              	 .code 16
 1547              	 .thumb_func
 1549              	SPI_MASTER_StartTransmitIRQ:
 1550              	.LFB206:
 351:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 352:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_INTERRUPT_TRANSMIT_MODE == 1U)
 353:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
 354:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Transmit the number of data words specified.
 355:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 356:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitIRQ(const SPI_MASTER_t *const handle, uint8_t* dataptr,
 357:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 1551              	 .loc 3 357 0
 1552              	 .cfi_startproc
 1553 0000 80B5     	 push {r7,lr}
 1554              	.LCFI90:
 1555              	 .cfi_def_cfa_offset 8
 1556              	 .cfi_offset 7,-8
 1557              	 .cfi_offset 14,-4
 1558 0002 88B0     	 sub sp,sp,#32
 1559              	.LCFI91:
 1560              	 .cfi_def_cfa_offset 40
 1561 0004 00AF     	 add r7,sp,#0
 1562              	.LCFI92:
 1563              	 .cfi_def_cfa_register 7
 1564 0006 F860     	 str r0,[r7,#12]
 1565 0008 B960     	 str r1,[r7,#8]
 1566 000a 7A60     	 str r2,[r7,#4]
 358:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 359:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t bytes_per_word = SPI_MASTER_1_BYTE_PER_WORD; /* This is to support the word length 8 and
 1567              	 .loc 3 359 0
 1568 000c 0123     	 mov r3,#1
 1569 000e BB61     	 str r3,[r7,#24]
 360:../Dave/Generated/SPI_MASTER/spi_master.c ****                                                            Specify the number of bytes for the conf
 361:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
 362:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 363:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_ASSERT("SPI_MASTER_StartTransmitIRQ:handle NULL" , (handle != NULL));
 364:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 365:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_MODE_MISMATCH;
 1570              	 .loc 3 365 0
 1571 0010 1F23     	 mov r3,#31
 1572 0012 FB18     	 add r3,r7,r3
 1573 0014 0422     	 mov r2,#4
 1574 0016 1A70     	 strb r2,[r3]
 366:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
 1575              	 .loc 3 366 0
 1576 0018 FB68     	 ldr r3,[r7,#12]
 1577 001a 9B68     	 ldr r3,[r3,#8]
 1578 001c 7B61     	 str r3,[r7,#20]
 367:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 368:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->config->transmit_mode == SPI_MASTER_TRANSFER_MODE_INTERRUPT)
 1579              	 .loc 3 368 0
 1580 001e FB68     	 ldr r3,[r7,#12]
 1581 0020 5B68     	 ldr r3,[r3,#4]
 1582 0022 8422     	 mov r2,#132
 1583 0024 9B5C     	 ldrb r3,[r3,r2]
 1584 0026 002B     	 cmp r3,#0
 1585 0028 64D1     	 bne .L58
 369:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 370:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Check whether SPI channel is free or not */
 371:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((dataptr != NULL) && (count > 0U))
 1586              	 .loc 3 371 0
 1587 002a BB68     	 ldr r3,[r7,#8]
 1588 002c 002B     	 cmp r3,#0
 1589 002e 5DD0     	 beq .L59
 1590              	 .loc 3 371 0 is_stmt 0 discriminator 1
 1591 0030 7B68     	 ldr r3,[r7,#4]
 1592 0032 002B     	 cmp r3,#0
 1593 0034 5AD0     	 beq .L59
 372:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 373:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_BUSY;
 1594              	 .loc 3 373 0 is_stmt 1
 1595 0036 1F23     	 mov r3,#31
 1596 0038 FB18     	 add r3,r7,r3
 1597 003a 0222     	 mov r2,#2
 1598 003c 1A70     	 strb r2,[r3]
 374:../Dave/Generated/SPI_MASTER/spi_master.c ****       /*Check data pointer is valid or not*/
 375:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (false == runtime_handle->tx_busy)
 1599              	 .loc 3 375 0
 1600 003e 7B69     	 ldr r3,[r7,#20]
 1601 0040 2022     	 mov r2,#32
 1602 0042 9B5C     	 ldrb r3,[r3,r2]
 1603 0044 DBB2     	 uxtb r3,r3
 1604 0046 0122     	 mov r2,#1
 1605 0048 5340     	 eor r3,r2
 1606 004a DBB2     	 uxtb r3,r3
 1607 004c 002B     	 cmp r3,#0
 1608 004e 4CD0     	 beq .L60
 376:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 377:../Dave/Generated/SPI_MASTER/spi_master.c ****         if (handle->runtime->word_length > SPI_MASTER_WORD_LENGTH_8_BIT)
 1609              	 .loc 3 377 0
 1610 0050 FB68     	 ldr r3,[r7,#12]
 1611 0052 9B68     	 ldr r3,[r3,#8]
 1612 0054 1B68     	 ldr r3,[r3]
 1613 0056 082B     	 cmp r3,#8
 1614 0058 01D9     	 bls .L61
 378:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 379:../Dave/Generated/SPI_MASTER/spi_master.c ****           bytes_per_word = SPI_MASTER_2_BYTES_PER_WORD; /* Word length is 16-bits */
 1615              	 .loc 3 379 0
 1616 005a 0223     	 mov r3,#2
 1617 005c BB61     	 str r3,[r7,#24]
 1618              	.L61:
 380:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 381:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 382:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Obtain the address of data, size of data */
 383:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data = dataptr;
 1619              	 .loc 3 383 0
 1620 005e 7B69     	 ldr r3,[r7,#20]
 1621 0060 BA68     	 ldr r2,[r7,#8]
 1622 0062 9A61     	 str r2,[r3,#24]
 384:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data_count = (uint32_t)count << (bytes_per_word - 1U);
 1623              	 .loc 3 384 0
 1624 0064 BB69     	 ldr r3,[r7,#24]
 1625 0066 013B     	 sub r3,r3,#1
 1626 0068 1A1C     	 mov r2,r3
 1627 006a 7B68     	 ldr r3,[r7,#4]
 1628 006c 9340     	 lsl r3,r3,r2
 1629 006e 1A1C     	 mov r2,r3
 1630 0070 7B69     	 ldr r3,[r7,#20]
 1631 0072 5A60     	 str r2,[r3,#4]
 385:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Initialize to first index and set the busy flag */
 386:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data_index = 0U;
 1632              	 .loc 3 386 0
 1633 0074 7B69     	 ldr r3,[r7,#20]
 1634 0076 0022     	 mov r2,#0
 1635 0078 9A60     	 str r2,[r3,#8]
 387:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_busy = true;
 1636              	 .loc 3 387 0
 1637 007a 7B69     	 ldr r3,[r7,#20]
 1638 007c 2022     	 mov r2,#32
 1639 007e 0121     	 mov r1,#1
 1640 0080 9954     	 strb r1,[r3,r2]
 388:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 389:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Enable the transmit buffer event */
 390:../Dave/Generated/SPI_MASTER/spi_master.c ****         if ((uint32_t)handle->config->tx_fifo_size > 0U)
 1641              	 .loc 3 390 0
 1642 0082 FB68     	 ldr r3,[r7,#12]
 1643 0084 5B68     	 ldr r3,[r3,#4]
 1644 0086 7C22     	 mov r2,#124
 1645 0088 9B5C     	 ldrb r3,[r3,r2]
 1646 008a 002B     	 cmp r3,#0
 1647 008c 0DD0     	 beq .L62
 391:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 392:../Dave/Generated/SPI_MASTER/spi_master.c ****           /* Flush the Transmit FIFO */
 393:../Dave/Generated/SPI_MASTER/spi_master.c ****           XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 1648              	 .loc 3 393 0
 1649 008e FB68     	 ldr r3,[r7,#12]
 1650 0090 1B68     	 ldr r3,[r3]
 1651 0092 181C     	 mov r0,r3
 1652 0094 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_Flush
 394:../Dave/Generated/SPI_MASTER/spi_master.c ****           XMC_USIC_CH_TXFIFO_EnableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_ST
 1653              	 .loc 3 394 0
 1654 0098 FB68     	 ldr r3,[r7,#12]
 1655 009a 1A68     	 ldr r2,[r3]
 1656 009c 8023     	 mov r3,#128
 1657 009e DB05     	 lsl r3,r3,#23
 1658 00a0 101C     	 mov r0,r2
 1659 00a2 191C     	 mov r1,r3
 1660 00a4 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_EnableEvent
 1661 00a8 07E0     	 b .L63
 1662              	.L62:
 395:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 396:../Dave/Generated/SPI_MASTER/spi_master.c ****         else
 397:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 398:../Dave/Generated/SPI_MASTER/spi_master.c ****           XMC_USIC_CH_EnableEvent(handle->channel,(uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 1663              	 .loc 3 398 0
 1664 00aa FB68     	 ldr r3,[r7,#12]
 1665 00ac 1A68     	 ldr r2,[r3]
 1666 00ae 8023     	 mov r3,#128
 1667 00b0 9B01     	 lsl r3,r3,#6
 1668 00b2 101C     	 mov r0,r2
 1669 00b4 191C     	 mov r1,r3
 1670 00b6 FFF7FEFF 	 bl XMC_USIC_CH_EnableEvent
 1671              	.L63:
 399:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 400:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_SPI_CH_SetTransmitMode(handle->channel, runtime_handle->spi_master_mode);
 1672              	 .loc 3 400 0
 1673 00ba FB68     	 ldr r3,[r7,#12]
 1674 00bc 1A68     	 ldr r2,[r3]
 1675 00be 7B69     	 ldr r3,[r7,#20]
 1676 00c0 1B7F     	 ldrb r3,[r3,#28]
 1677 00c2 DBB2     	 uxtb r3,r3
 1678 00c4 101C     	 mov r0,r2
 1679 00c6 191C     	 mov r1,r3
 1680 00c8 FFF7FEFF 	 bl XMC_SPI_CH_SetTransmitMode
 401:../Dave/Generated/SPI_MASTER/spi_master.c ****         status = SPI_MASTER_STATUS_SUCCESS;
 1681              	 .loc 3 401 0
 1682 00cc 1F23     	 mov r3,#31
 1683 00ce FB18     	 add r3,r7,r3
 1684 00d0 0022     	 mov r2,#0
 1685 00d2 1A70     	 strb r2,[r3]
 402:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 403:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Trigger the transmit buffer interrupt */
 404:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_TriggerServiceRequest(handle->channel, (uint32_t)handle->config->tx_sr);
 1686              	 .loc 3 404 0
 1687 00d4 FB68     	 ldr r3,[r7,#12]
 1688 00d6 1968     	 ldr r1,[r3]
 1689 00d8 FB68     	 ldr r3,[r7,#12]
 1690 00da 5B68     	 ldr r3,[r3,#4]
 1691 00dc 8922     	 mov r2,#137
 1692 00de 9B5C     	 ldrb r3,[r3,r2]
 1693 00e0 081C     	 mov r0,r1
 1694 00e2 191C     	 mov r1,r3
 1695 00e4 FFF7FEFF 	 bl XMC_USIC_CH_TriggerServiceRequest
 375:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 1696              	 .loc 3 375 0
 1697 00e8 04E0     	 b .L58
 1698              	.L60:
 1699 00ea 03E0     	 b .L58
 1700              	.L59:
 405:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 406:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 407:../Dave/Generated/SPI_MASTER/spi_master.c ****     else
 408:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 409:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_BUFFER_INVALID;
 1701              	 .loc 3 409 0
 1702 00ec 1F23     	 mov r3,#31
 1703 00ee FB18     	 add r3,r7,r3
 1704 00f0 0322     	 mov r2,#3
 1705 00f2 1A70     	 strb r2,[r3]
 1706              	.L58:
 410:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 411:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 412:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 1707              	 .loc 3 412 0
 1708 00f4 1F23     	 mov r3,#31
 1709 00f6 FB18     	 add r3,r7,r3
 1710 00f8 1B78     	 ldrb r3,[r3]
 413:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 1711              	 .loc 3 413 0
 1712 00fa 181C     	 mov r0,r3
 1713 00fc BD46     	 mov sp,r7
 1714 00fe 08B0     	 add sp,sp,#32
 1715              	 
 1716 0100 80BD     	 pop {r7,pc}
 1717              	 .cfi_endproc
 1718              	.LFE206:
 1720 0102 C046     	 .section .text.SPI_MASTER_StartReceiveIRQ,"ax",%progbits
 1721              	 .align 2
 1722              	 .global SPI_MASTER_StartReceiveIRQ
 1723              	 .code 16
 1724              	 .thumb_func
 1726              	SPI_MASTER_StartReceiveIRQ:
 1727              	.LFB207:
 414:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 415:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 416:../Dave/Generated/SPI_MASTER/spi_master.c **** #if(SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 417:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitDMA(const SPI_MASTER_t *const handle, uint8_t *data_ptr
 418:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 419:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 420:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
 421:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t dma_ctll;
 422:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t mode;
 423:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 424:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_ASSERT("SPI_MASTER_StartTransmitDMA:handle NULL" , (handle != NULL));
 425:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 426:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_MODE_MISMATCH;
 427:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
 428:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 429:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->config->transmit_mode == SPI_MASTER_TRANSFER_MODE_DMA)
 430:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 431:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Check whether SPI channel is free or not */
 432:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (false == runtime_handle->tx_busy)
 433:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 434:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Check data pointer is valid or not */
 435:../Dave/Generated/SPI_MASTER/spi_master.c ****       if ((data_ptr != NULL) && (block_size > 0U) && (block_size <= SPI_MASTER_DMA_MAXCOUNT))
 436:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 437:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Obtain the address of data, size of data */
 438:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data_count = block_size;
 439:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Initialize to first index and set the busy flag */
 440:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data_index = 0U;
 441:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_busy = true;
 442:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 443:../Dave/Generated/SPI_MASTER/spi_master.c ****         if (runtime_handle->tx_data_dummy == true)
 444:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 445:../Dave/Generated/SPI_MASTER/spi_master.c ****           dma_ctll = (uint32_t)handle->global_dma->dma->CH[handle->dma_ch_tx_number].CTLL;
 446:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 447:../Dave/Generated/SPI_MASTER/spi_master.c ****           dma_ctll = (uint32_t)(dma_ctll & (uint32_t)(~(GPDMA0_CH_CTLL_SINC_Msk))) |
 448:../Dave/Generated/SPI_MASTER/spi_master.c ****                                ((uint32_t)XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE << GPDMA0_CH_CTLL
 449:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 450:../Dave/Generated/SPI_MASTER/spi_master.c ****           handle->global_dma->dma->CH[handle->dma_ch_tx_number].CTLL = dma_ctll;
 451:../Dave/Generated/SPI_MASTER/spi_master.c ****           mode = (uint32_t)((uint32_t)handle->runtime->spi_master_mode & 0xfffbU);
 452:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 453:../Dave/Generated/SPI_MASTER/spi_master.c ****         else
 454:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 455:../Dave/Generated/SPI_MASTER/spi_master.c ****           runtime_handle->tx_data = data_ptr;
 456:../Dave/Generated/SPI_MASTER/spi_master.c ****           dma_ctll = handle->global_dma->dma->CH[handle->dma_ch_tx_number].CTLL;
 457:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 458:../Dave/Generated/SPI_MASTER/spi_master.c ****           dma_ctll = (uint32_t)(dma_ctll & (~GPDMA0_CH_CTLL_SINC_Msk)) |
 459:../Dave/Generated/SPI_MASTER/spi_master.c ****                                ((uint32_t)XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT << GPDMA0_CH_CTLL
 460:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 461:../Dave/Generated/SPI_MASTER/spi_master.c ****           handle->global_dma->dma->CH[handle->dma_ch_tx_number].CTLL = dma_ctll;
 462:../Dave/Generated/SPI_MASTER/spi_master.c ****           mode = (uint32_t)handle->runtime->spi_master_mode;
 463:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 464:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 465:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Enable transmit event generation */
 466:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_SPI_CH_EnableEvent(handle->channel, (uint32_t)XMC_SPI_CH_EVENT_RECEIVE_START);
 467:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 468:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_DMA_CH_SetBlockSize(handle->global_dma->dma, handle->dma_ch_tx_number, block_size);
 469:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 470:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_DMA_CH_SetSourceAddress(handle->global_dma->dma, handle->dma_ch_tx_number, (uint32_t)ru
 471:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 472:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_SPI_CH_SetTransmitMode(handle->channel, runtime_handle->spi_master_mode);
 473:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 474:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_DMA_CH_SetDestinationAddress(handle->global_dma->dma,
 475:../Dave/Generated/SPI_MASTER/spi_master.c ****                                          handle->dma_ch_tx_number,
 476:../Dave/Generated/SPI_MASTER/spi_master.c ****                                          (uint32_t)&(handle->channel->TBUF[mode]));
 477:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 478:../Dave/Generated/SPI_MASTER/spi_master.c ****         status = SPI_MASTER_STATUS_SUCCESS;
 479:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 480:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_DMA_CH_Enable(handle->global_dma->dma, handle->dma_ch_tx_number);
 481:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 482:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
 483:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 484:../Dave/Generated/SPI_MASTER/spi_master.c ****         status = SPI_MASTER_STATUS_BUFFER_INVALID;
 485:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 486:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 487:../Dave/Generated/SPI_MASTER/spi_master.c ****     else
 488:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 489:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_BUSY;
 490:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 491:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 492:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 493:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 494:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 495:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 496:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 497:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DIRECT_TRANSMIT_MODE == 1U)
 498:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_lStartTransmitPolling(const SPI_MASTER_t *const handle, uint8_t* dat
 499:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 500:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 501:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint16_t data;
 502:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t bytes_per_word = SPI_MASTER_1_BYTE_PER_WORD;; /* This is to support the word length 8 an
 503:../Dave/Generated/SPI_MASTER/spi_master.c ****                                                             Specify the number of bytes for the con
 504:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
 505:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 506:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_BUSY;
 507:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
 508:../Dave/Generated/SPI_MASTER/spi_master.c ****   data = 0U;
 509:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 510:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_ASSERT("SPI_MASTER_lStartTransmitPolling:handle NULL" , (handle != NULL));
 511:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 512:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* Check whether SPI channel is free or not */
 513:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((dataptr != NULL) && (count > 0U))
 514:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 515:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Check data pointer is valid or not */
 516:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (false == runtime_handle->tx_busy)
 517:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 518:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (handle->runtime->word_length > SPI_MASTER_WORD_LENGTH_8_BIT)
 519:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 520:../Dave/Generated/SPI_MASTER/spi_master.c ****         bytes_per_word = SPI_MASTER_2_BYTES_PER_WORD; /* Word length is 16-bits */
 521:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 522:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 523:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_busy = true;
 524:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Obtain the address of data, size of data */
 525:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data = dataptr;
 526:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data_count = (uint32_t)count << (bytes_per_word - 1U);
 527:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Initialize to first index and set the busy flag */
 528:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data_index = 0U;
 529:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 530:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_SPI_CH_SetTransmitMode(handle->channel, runtime_handle->spi_master_mode);
 531:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 532:../Dave/Generated/SPI_MASTER/spi_master.c ****       if ((uint32_t)handle->config->tx_fifo_size > 0U)
 533:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 534:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Flush the Transmit FIFO */
 535:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 536:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 537:../Dave/Generated/SPI_MASTER/spi_master.c ****         while (runtime_handle->tx_data_index < runtime_handle->tx_data_count)
 538:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 539:../Dave/Generated/SPI_MASTER/spi_master.c ****           while (XMC_USIC_CH_TXFIFO_IsFull(handle->channel) == true)
 540:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 541:../Dave/Generated/SPI_MASTER/spi_master.c ****               /* Wait until FIFO is having space for next entry */
 542:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 543:../Dave/Generated/SPI_MASTER/spi_master.c ****           if (runtime_handle->tx_data_dummy == true)
 544:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 545:../Dave/Generated/SPI_MASTER/spi_master.c ****             XMC_USIC_CH_TXFIFO_PutDataHPCMode(handle->channel, 0xFFFFU, (uint32_t)runtime_handle->s
 546:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 547:../Dave/Generated/SPI_MASTER/spi_master.c ****           else
 548:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 549:../Dave/Generated/SPI_MASTER/spi_master.c ****             if(bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
 550:../Dave/Generated/SPI_MASTER/spi_master.c ****             {
 551:../Dave/Generated/SPI_MASTER/spi_master.c ****               data = *((uint16_t*)&runtime_handle->tx_data[runtime_handle->tx_data_index]);
 552:../Dave/Generated/SPI_MASTER/spi_master.c ****             }
 553:../Dave/Generated/SPI_MASTER/spi_master.c ****             else
 554:../Dave/Generated/SPI_MASTER/spi_master.c ****             {
 555:../Dave/Generated/SPI_MASTER/spi_master.c ****               data = runtime_handle->tx_data[runtime_handle->tx_data_index];
 556:../Dave/Generated/SPI_MASTER/spi_master.c ****             }
 557:../Dave/Generated/SPI_MASTER/spi_master.c ****             XMC_USIC_CH_TXFIFO_PutDataHPCMode(handle->channel, data, (uint32_t)runtime_handle->spi_
 558:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 559:../Dave/Generated/SPI_MASTER/spi_master.c ****           (runtime_handle->tx_data_index)+= bytes_per_word;
 560:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 561:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 562:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
 563:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 564:../Dave/Generated/SPI_MASTER/spi_master.c ****         do
 565:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 566:../Dave/Generated/SPI_MASTER/spi_master.c ****           while((uint32_t)XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == (uint32_t)XMC_USI
 567:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 568:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 569:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 570:../Dave/Generated/SPI_MASTER/spi_master.c ****           if (runtime_handle->tx_data_dummy == true)
 571:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 572:../Dave/Generated/SPI_MASTER/spi_master.c ****             XMC_USIC_CH_WriteToTBUFTCI(handle->channel, 0xFFFFU, runtime_handle->spi_master_mode);
 573:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 574:../Dave/Generated/SPI_MASTER/spi_master.c ****           else
 575:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 576:../Dave/Generated/SPI_MASTER/spi_master.c ****             if(bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
 577:../Dave/Generated/SPI_MASTER/spi_master.c ****             {
 578:../Dave/Generated/SPI_MASTER/spi_master.c ****               data = *((uint16_t*)&runtime_handle->tx_data[runtime_handle->tx_data_index]);
 579:../Dave/Generated/SPI_MASTER/spi_master.c ****             }
 580:../Dave/Generated/SPI_MASTER/spi_master.c ****             else
 581:../Dave/Generated/SPI_MASTER/spi_master.c ****             {
 582:../Dave/Generated/SPI_MASTER/spi_master.c ****               data = runtime_handle->tx_data[runtime_handle->tx_data_index];
 583:../Dave/Generated/SPI_MASTER/spi_master.c ****             }
 584:../Dave/Generated/SPI_MASTER/spi_master.c ****             XMC_USIC_CH_WriteToTBUFTCI(handle->channel, data, runtime_handle->spi_master_mode);
 585:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 586:../Dave/Generated/SPI_MASTER/spi_master.c ****           (runtime_handle->tx_data_index)+=bytes_per_word;
 587:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 588:../Dave/Generated/SPI_MASTER/spi_master.c ****           while ((XMC_SPI_CH_GetStatusFlag(handle->channel) & (uint32_t)XMC_SPI_CH_STATUS_FLAG_RECE
 589:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 590:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 591:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 592:../Dave/Generated/SPI_MASTER/spi_master.c ****           XMC_SPI_CH_ClearStatusFlag(handle->channel, (uint32_t)XMC_SPI_CH_STATUS_FLAG_RECEIVER_STA
 593:../Dave/Generated/SPI_MASTER/spi_master.c ****         } while(runtime_handle->tx_data_index < runtime_handle->tx_data_count);
 594:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 595:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 596:../Dave/Generated/SPI_MASTER/spi_master.c ****       while((uint32_t)XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == (uint32_t)XMC_USIC_CH
 597:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 598:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 599:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 600:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_busy = false;
 601:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data_count = 0U;
 602:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data_index = 0U;
 603:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_SUCCESS;
 604:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 605:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 606:../Dave/Generated/SPI_MASTER/spi_master.c ****   else
 607:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 608:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_STATUS_BUFFER_INVALID;
 609:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 610:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->rx_data_dummy = true;
 611:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 612:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 613:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 614:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 615:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DIRECT_RECEIVE_MODE == 1U)
 616:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 617:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_lStartReceivePolling(const SPI_MASTER_t *const handle, uint8_t* data
 618:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 619:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 620:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 621:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
 622:../Dave/Generated/SPI_MASTER/spi_master.c ****   static uint8_t dummy_data[2] = {0xFFU, 0xFFU};
 623:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 624:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_ASSERT("SPI_MASTER_lStartReceivePolling:handle NULL" , (handle != NULL));
 625:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 626:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_BUSY;
 627:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
 628:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 629:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((dataptr != NULL) && (count > 0U))
 630:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 631:../Dave/Generated/SPI_MASTER/spi_master.c ****     /*Check data pointer is valid or not*/
 632:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((false == runtime_handle->rx_busy) && (false == runtime_handle->tx_busy))
 633:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 634:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_busy = true;
 635:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_data = dataptr;
 636:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data = &dummy_data[0];
 637:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data_dummy = true;
 638:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_data_dummy = false;
 639:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 640:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_lReceivePolling(handle, count);
 641:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 642:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data_dummy = false;
 643:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_busy = false;
 644:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 645:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 646:../Dave/Generated/SPI_MASTER/spi_master.c ****   else
 647:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 648:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_STATUS_BUFFER_INVALID;
 649:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 650:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 651:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 652:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 653:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 654:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 655:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 656:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
 657:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
 658:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Receive the specified the number of data words.
 659:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 660:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveIRQ(const SPI_MASTER_t *const handle, uint8_t* dataptr, 
 661:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 1728              	 .loc 3 661 0
 1729              	 .cfi_startproc
 1730 0000 90B5     	 push {r4,r7,lr}
 1731              	.LCFI93:
 1732              	 .cfi_def_cfa_offset 12
 1733              	 .cfi_offset 4,-12
 1734              	 .cfi_offset 7,-8
 1735              	 .cfi_offset 14,-4
 1736 0002 87B0     	 sub sp,sp,#28
 1737              	.LCFI94:
 1738              	 .cfi_def_cfa_offset 40
 1739 0004 00AF     	 add r7,sp,#0
 1740              	.LCFI95:
 1741              	 .cfi_def_cfa_register 7
 1742 0006 F860     	 str r0,[r7,#12]
 1743 0008 B960     	 str r1,[r7,#8]
 1744 000a 7A60     	 str r2,[r7,#4]
 662:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 663:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
 664:../Dave/Generated/SPI_MASTER/spi_master.c ****   static uint8_t dummy_data[2] = {0xFFU, 0xFFU};
 665:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 666:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_ASSERT("SPI_MASTER_StartReceiveIRQ:handle NULL" , (handle != NULL));
 667:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 668:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_MODE_MISMATCH;
 1745              	 .loc 3 668 0
 1746 000c 1723     	 mov r3,#23
 1747 000e FB18     	 add r3,r7,r3
 1748 0010 0422     	 mov r2,#4
 1749 0012 1A70     	 strb r2,[r3]
 669:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
 1750              	 .loc 3 669 0
 1751 0014 FB68     	 ldr r3,[r7,#12]
 1752 0016 9B68     	 ldr r3,[r3,#8]
 1753 0018 3B61     	 str r3,[r7,#16]
 670:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 671:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->config->receive_mode == SPI_MASTER_TRANSFER_MODE_INTERRUPT)
 1754              	 .loc 3 671 0
 1755 001a FB68     	 ldr r3,[r7,#12]
 1756 001c 5B68     	 ldr r3,[r3,#4]
 1757 001e 8522     	 mov r2,#133
 1758 0020 9B5C     	 ldrb r3,[r3,r2]
 1759 0022 002B     	 cmp r3,#0
 1760 0024 3ED1     	 bne .L66
 672:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 673:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_STATUS_BUSY;
 1761              	 .loc 3 673 0
 1762 0026 1723     	 mov r3,#23
 1763 0028 FB18     	 add r3,r7,r3
 1764 002a 0222     	 mov r2,#2
 1765 002c 1A70     	 strb r2,[r3]
 674:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Check whether SPI channel is free or not */
 675:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((dataptr != NULL) && (count > 0U))
 1766              	 .loc 3 675 0
 1767 002e BB68     	 ldr r3,[r7,#8]
 1768 0030 002B     	 cmp r3,#0
 1769 0032 33D0     	 beq .L67
 1770              	 .loc 3 675 0 is_stmt 0 discriminator 1
 1771 0034 7B68     	 ldr r3,[r7,#4]
 1772 0036 002B     	 cmp r3,#0
 1773 0038 30D0     	 beq .L67
 676:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 677:../Dave/Generated/SPI_MASTER/spi_master.c ****       /*Check data pointer is valid or not*/
 678:../Dave/Generated/SPI_MASTER/spi_master.c ****       if ((false == runtime_handle->rx_busy) && (false == runtime_handle->tx_busy))
 1774              	 .loc 3 678 0 is_stmt 1
 1775 003a 3B69     	 ldr r3,[r7,#16]
 1776 003c DB7F     	 ldrb r3,[r3,#31]
 1777 003e DBB2     	 uxtb r3,r3
 1778 0040 0122     	 mov r2,#1
 1779 0042 5340     	 eor r3,r2
 1780 0044 DBB2     	 uxtb r3,r3
 1781 0046 002B     	 cmp r3,#0
 1782 0048 27D0     	 beq .L68
 1783              	 .loc 3 678 0 is_stmt 0 discriminator 1
 1784 004a 3B69     	 ldr r3,[r7,#16]
 1785 004c 2022     	 mov r2,#32
 1786 004e 9B5C     	 ldrb r3,[r3,r2]
 1787 0050 DBB2     	 uxtb r3,r3
 1788 0052 0122     	 mov r2,#1
 1789 0054 5340     	 eor r3,r2
 1790 0056 DBB2     	 uxtb r3,r3
 1791 0058 002B     	 cmp r3,#0
 1792 005a 1ED0     	 beq .L68
 679:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 680:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_busy = true;
 1793              	 .loc 3 680 0 is_stmt 1
 1794 005c 3B69     	 ldr r3,[r7,#16]
 1795 005e 0122     	 mov r2,#1
 1796 0060 DA77     	 strb r2,[r3,#31]
 681:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data = dataptr;
 1797              	 .loc 3 681 0
 1798 0062 3B69     	 ldr r3,[r7,#16]
 1799 0064 BA68     	 ldr r2,[r7,#8]
 1800 0066 5A61     	 str r2,[r3,#20]
 682:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data = &dummy_data[0];
 1801              	 .loc 3 682 0
 1802 0068 3B69     	 ldr r3,[r7,#16]
 1803 006a 124A     	 ldr r2,.L70
 1804 006c 9A61     	 str r2,[r3,#24]
 683:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data_count = count;
 1805              	 .loc 3 683 0
 1806 006e 3B69     	 ldr r3,[r7,#16]
 1807 0070 7A68     	 ldr r2,[r7,#4]
 1808 0072 5A60     	 str r2,[r3,#4]
 684:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data_dummy = true;
 1809              	 .loc 3 684 0
 1810 0074 3B69     	 ldr r3,[r7,#16]
 1811 0076 2122     	 mov r2,#33
 1812 0078 0121     	 mov r1,#1
 1813 007a 9954     	 strb r1,[r3,r2]
 685:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data_dummy = false;
 1814              	 .loc 3 685 0
 1815 007c 3B69     	 ldr r3,[r7,#16]
 1816 007e 2222     	 mov r2,#34
 1817 0080 0021     	 mov r1,#0
 1818 0082 9954     	 strb r1,[r3,r2]
 686:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 687:../Dave/Generated/SPI_MASTER/spi_master.c ****         status = SPI_MASTER_lReceiveIRQ(handle, count);
 1819              	 .loc 3 687 0
 1820 0084 1723     	 mov r3,#23
 1821 0086 FC18     	 add r4,r7,r3
 1822 0088 FA68     	 ldr r2,[r7,#12]
 1823 008a 7B68     	 ldr r3,[r7,#4]
 1824 008c 101C     	 mov r0,r2
 1825 008e 191C     	 mov r1,r3
 1826 0090 FFF7FEFF 	 bl SPI_MASTER_lReceiveIRQ
 1827 0094 031C     	 mov r3,r0
 1828 0096 2370     	 strb r3,[r4]
 678:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 1829              	 .loc 3 678 0
 1830 0098 04E0     	 b .L66
 1831              	.L68:
 1832 009a 03E0     	 b .L66
 1833              	.L67:
 688:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 689:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 690:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 691:../Dave/Generated/SPI_MASTER/spi_master.c ****     else
 692:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 693:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_BUFFER_INVALID;
 1834              	 .loc 3 693 0
 1835 009c 1723     	 mov r3,#23
 1836 009e FB18     	 add r3,r7,r3
 1837 00a0 0322     	 mov r2,#3
 1838 00a2 1A70     	 strb r2,[r3]
 1839              	.L66:
 694:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 695:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 696:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 1840              	 .loc 3 696 0
 1841 00a4 1723     	 mov r3,#23
 1842 00a6 FB18     	 add r3,r7,r3
 1843 00a8 1B78     	 ldrb r3,[r3]
 697:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 1844              	 .loc 3 697 0
 1845 00aa 181C     	 mov r0,r3
 1846 00ac BD46     	 mov sp,r7
 1847 00ae 07B0     	 add sp,sp,#28
 1848              	 
 1849 00b0 90BD     	 pop {r4,r7,pc}
 1850              	.L71:
 1851 00b2 C046     	 .align 2
 1852              	.L70:
 1853 00b4 00000000 	 .word dummy_data.7074
 1854              	 .cfi_endproc
 1855              	.LFE207:
 1857              	 .section .text.SPI_MASTER_Transfer,"ax",%progbits
 1858              	 .align 2
 1859              	 .global SPI_MASTER_Transfer
 1860              	 .code 16
 1861              	 .thumb_func
 1863              	SPI_MASTER_Transfer:
 1864              	.LFB208:
 698:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 699:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 700:../Dave/Generated/SPI_MASTER/spi_master.c **** #if(SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 701:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveDMA(const SPI_MASTER_t  *const handle, uint8_t *dataptr,
 702:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 703:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 704:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
 705:../Dave/Generated/SPI_MASTER/spi_master.c ****   static uint8_t dummy_data[2] = {0xFFU, 0xFFU};
 706:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 707:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_ASSERT("SPI_MASTER_StartReceiveDMA:handle NULL" , (handle != NULL));
 708:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 709:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_MODE_MISMATCH;
 710:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
 711:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 712:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->config->receive_mode == SPI_MASTER_TRANSFER_MODE_DMA)
 713:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 714:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_STATUS_BUSY;
 715:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Check whether SPI channel is free or not */
 716:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((false == runtime_handle->rx_busy) && (false == runtime_handle->tx_busy))
 717:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 718:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Check data pointer is valid or not */
 719:../Dave/Generated/SPI_MASTER/spi_master.c ****       if ((dataptr != NULL) && (block_size > 0U) && (block_size <= SPI_MASTER_DMA_MAXCOUNT))
 720:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 721:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_busy = true;
 722:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data = dataptr;
 723:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data = &dummy_data[0];
 724:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data_count = block_size;
 725:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data_dummy = true;
 726:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data_dummy = false;
 727:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 728:../Dave/Generated/SPI_MASTER/spi_master.c ****         status = SPI_MASTER_lReceiveDMA(handle, block_size);
 729:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 730:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
 731:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 732:../Dave/Generated/SPI_MASTER/spi_master.c ****         status = SPI_MASTER_STATUS_BUFFER_INVALID;
 733:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 734:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 735:../Dave/Generated/SPI_MASTER/spi_master.c ****     else
 736:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 737:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_BUSY;
 738:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 739:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 740:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 741:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 742:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 743:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 744:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
 745:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Transmit and receive the data at the same time. This is supported for full duplex mode only.
 746:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 747:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_Transfer(const SPI_MASTER_t *const handle,
 748:../Dave/Generated/SPI_MASTER/spi_master.c ****                                         uint8_t* tx_dataptr,
 749:../Dave/Generated/SPI_MASTER/spi_master.c ****                                         uint8_t* rx_dataptr,
 750:../Dave/Generated/SPI_MASTER/spi_master.c ****                                         uint32_t count)
 751:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 1865              	 .loc 3 751 0
 1866              	 .cfi_startproc
 1867 0000 90B5     	 push {r4,r7,lr}
 1868              	.LCFI96:
 1869              	 .cfi_def_cfa_offset 12
 1870              	 .cfi_offset 4,-12
 1871              	 .cfi_offset 7,-8
 1872              	 .cfi_offset 14,-4
 1873 0002 87B0     	 sub sp,sp,#28
 1874              	.LCFI97:
 1875              	 .cfi_def_cfa_offset 40
 1876 0004 00AF     	 add r7,sp,#0
 1877              	.LCFI98:
 1878              	 .cfi_def_cfa_register 7
 1879 0006 F860     	 str r0,[r7,#12]
 1880 0008 B960     	 str r1,[r7,#8]
 1881 000a 7A60     	 str r2,[r7,#4]
 1882 000c 3B60     	 str r3,[r7]
 752:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 753:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
 754:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 755:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_ASSERT("SPI_MASTER_Transfer:handle NULL" , (handle != NULL));
 756:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 757:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_BUSY;
 1883              	 .loc 3 757 0
 1884 000e 1723     	 mov r3,#23
 1885 0010 FB18     	 add r3,r7,r3
 1886 0012 0222     	 mov r2,#2
 1887 0014 1A70     	 strb r2,[r3]
 758:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
 1888              	 .loc 3 758 0
 1889 0016 FB68     	 ldr r3,[r7,#12]
 1890 0018 9B68     	 ldr r3,[r3,#8]
 1891 001a 3B61     	 str r3,[r7,#16]
 759:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 760:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (XMC_SPI_CH_MODE_STANDARD == runtime_handle->spi_master_mode)
 1892              	 .loc 3 760 0
 1893 001c 3B69     	 ldr r3,[r7,#16]
 1894 001e 1B7F     	 ldrb r3,[r3,#28]
 1895 0020 DBB2     	 uxtb r3,r3
 1896 0022 002B     	 cmp r3,#0
 1897 0024 45D1     	 bne .L73
 761:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 762:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Check whether SPI channel is free or not */
 763:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((tx_dataptr != NULL) && (rx_dataptr != NULL) && (count > 0U))
 1898              	 .loc 3 763 0
 1899 0026 BB68     	 ldr r3,[r7,#8]
 1900 0028 002B     	 cmp r3,#0
 1901 002a 3CD0     	 beq .L74
 1902              	 .loc 3 763 0 is_stmt 0 discriminator 1
 1903 002c 7B68     	 ldr r3,[r7,#4]
 1904 002e 002B     	 cmp r3,#0
 1905 0030 39D0     	 beq .L74
 1906              	 .loc 3 763 0 discriminator 2
 1907 0032 3B68     	 ldr r3,[r7]
 1908 0034 002B     	 cmp r3,#0
 1909 0036 36D0     	 beq .L74
 764:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 765:../Dave/Generated/SPI_MASTER/spi_master.c ****       /*Check data pointer is valid or not*/
 766:../Dave/Generated/SPI_MASTER/spi_master.c ****       if ((false == runtime_handle->rx_busy) && (false == runtime_handle->tx_busy))
 1910              	 .loc 3 766 0 is_stmt 1
 1911 0038 3B69     	 ldr r3,[r7,#16]
 1912 003a DB7F     	 ldrb r3,[r3,#31]
 1913 003c DBB2     	 uxtb r3,r3
 1914 003e 0122     	 mov r2,#1
 1915 0040 5340     	 eor r3,r2
 1916 0042 DBB2     	 uxtb r3,r3
 1917 0044 002B     	 cmp r3,#0
 1918 0046 2DD0     	 beq .L75
 1919              	 .loc 3 766 0 is_stmt 0 discriminator 1
 1920 0048 3B69     	 ldr r3,[r7,#16]
 1921 004a 2022     	 mov r2,#32
 1922 004c 9B5C     	 ldrb r3,[r3,r2]
 1923 004e DBB2     	 uxtb r3,r3
 1924 0050 0122     	 mov r2,#1
 1925 0052 5340     	 eor r3,r2
 1926 0054 DBB2     	 uxtb r3,r3
 1927 0056 002B     	 cmp r3,#0
 1928 0058 24D0     	 beq .L75
 767:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 768:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_busy = true;
 1929              	 .loc 3 768 0 is_stmt 1
 1930 005a 3B69     	 ldr r3,[r7,#16]
 1931 005c 0122     	 mov r2,#1
 1932 005e DA77     	 strb r2,[r3,#31]
 769:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data = rx_dataptr;
 1933              	 .loc 3 769 0
 1934 0060 3B69     	 ldr r3,[r7,#16]
 1935 0062 7A68     	 ldr r2,[r7,#4]
 1936 0064 5A61     	 str r2,[r3,#20]
 770:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data = tx_dataptr;
 1937              	 .loc 3 770 0
 1938 0066 3B69     	 ldr r3,[r7,#16]
 1939 0068 BA68     	 ldr r2,[r7,#8]
 1940 006a 9A61     	 str r2,[r3,#24]
 771:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data_count = count;
 1941              	 .loc 3 771 0
 1942 006c 3B69     	 ldr r3,[r7,#16]
 1943 006e 3A68     	 ldr r2,[r7]
 1944 0070 5A60     	 str r2,[r3,#4]
 772:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->tx_data_dummy = false;
 1945              	 .loc 3 772 0
 1946 0072 3B69     	 ldr r3,[r7,#16]
 1947 0074 2122     	 mov r2,#33
 1948 0076 0021     	 mov r1,#0
 1949 0078 9954     	 strb r1,[r3,r2]
 773:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data_dummy = false;
 1950              	 .loc 3 773 0
 1951 007a 3B69     	 ldr r3,[r7,#16]
 1952 007c 2222     	 mov r2,#34
 1953 007e 0021     	 mov r1,#0
 1954 0080 9954     	 strb r1,[r3,r2]
 774:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 775:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
 776:../Dave/Generated/SPI_MASTER/spi_master.c ****         if (handle->config->receive_mode == SPI_MASTER_TRANSFER_MODE_INTERRUPT)
 1955              	 .loc 3 776 0
 1956 0082 FB68     	 ldr r3,[r7,#12]
 1957 0084 5B68     	 ldr r3,[r3,#4]
 1958 0086 8522     	 mov r2,#133
 1959 0088 9B5C     	 ldrb r3,[r3,r2]
 1960 008a 002B     	 cmp r3,#0
 1961 008c 0AD1     	 bne .L75
 777:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 778:../Dave/Generated/SPI_MASTER/spi_master.c ****           status = SPI_MASTER_lReceiveIRQ(handle, count);
 1962              	 .loc 3 778 0
 1963 008e 1723     	 mov r3,#23
 1964 0090 FC18     	 add r4,r7,r3
 1965 0092 FA68     	 ldr r2,[r7,#12]
 1966 0094 3B68     	 ldr r3,[r7]
 1967 0096 101C     	 mov r0,r2
 1968 0098 191C     	 mov r1,r3
 1969 009a FFF7FEFF 	 bl SPI_MASTER_lReceiveIRQ
 1970 009e 031C     	 mov r3,r0
 1971 00a0 2370     	 strb r3,[r4]
 766:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 1972              	 .loc 3 766 0
 1973 00a2 05E0     	 b .L76
 1974              	.L75:
 1975 00a4 04E0     	 b .L76
 1976              	.L74:
 779:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 780:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 781:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 782:../Dave/Generated/SPI_MASTER/spi_master.c ****         if (handle->config->receive_mode == SPI_MASTER_TRANSFER_MODE_DMA)
 783:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 784:../Dave/Generated/SPI_MASTER/spi_master.c ****           status = SPI_MASTER_lReceiveDMA(handle, count);
 785:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 786:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 787:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DIRECT_RECEIVE_MODE == 1U)
 788:../Dave/Generated/SPI_MASTER/spi_master.c ****         if (handle->config->receive_mode == SPI_MASTER_TRANSFER_MODE_DIRECT)
 789:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 790:../Dave/Generated/SPI_MASTER/spi_master.c ****           status = SPI_MASTER_lReceivePolling(handle, count);
 791:../Dave/Generated/SPI_MASTER/spi_master.c ****           runtime_handle->rx_busy = false;
 792:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 793:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 794:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 795:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 796:../Dave/Generated/SPI_MASTER/spi_master.c ****     else
 797:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 798:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_BUFFER_INVALID;
 1977              	 .loc 3 798 0
 1978 00a6 1723     	 mov r3,#23
 1979 00a8 FB18     	 add r3,r7,r3
 1980 00aa 0322     	 mov r2,#3
 1981 00ac 1A70     	 strb r2,[r3]
 1982 00ae 04E0     	 b .L77
 1983              	.L76:
 1984 00b0 03E0     	 b .L77
 1985              	.L73:
 799:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 800:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 801:../Dave/Generated/SPI_MASTER/spi_master.c ****   else
 802:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 803:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_STATUS_FAILURE;
 1986              	 .loc 3 803 0
 1987 00b2 1723     	 mov r3,#23
 1988 00b4 FB18     	 add r3,r7,r3
 1989 00b6 0122     	 mov r2,#1
 1990 00b8 1A70     	 strb r2,[r3]
 1991              	.L77:
 804:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 805:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 806:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 1992              	 .loc 3 806 0
 1993 00ba 1723     	 mov r3,#23
 1994 00bc FB18     	 add r3,r7,r3
 1995 00be 1B78     	 ldrb r3,[r3]
 807:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 1996              	 .loc 3 807 0
 1997 00c0 181C     	 mov r0,r3
 1998 00c2 BD46     	 mov sp,r7
 1999 00c4 07B0     	 add sp,sp,#28
 2000              	 
 2001 00c6 90BD     	 pop {r4,r7,pc}
 2002              	 .cfi_endproc
 2003              	.LFE208:
 2005              	 .section .text.SPI_MASTER_AbortReceive,"ax",%progbits
 2006              	 .align 2
 2007              	 .global SPI_MASTER_AbortReceive
 2008              	 .code 16
 2009              	 .thumb_func
 2011              	SPI_MASTER_AbortReceive:
 2012              	.LFB209:
 808:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 809:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 810:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
 811:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Aborts the ongoing data reception.
 812:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 813:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_AbortReceive(const SPI_MASTER_t *const handle)
 814:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 2013              	 .loc 3 814 0
 2014              	 .cfi_startproc
 2015 0000 90B5     	 push {r4,r7,lr}
 2016              	.LCFI99:
 2017              	 .cfi_def_cfa_offset 12
 2018              	 .cfi_offset 4,-12
 2019              	 .cfi_offset 7,-8
 2020              	 .cfi_offset 14,-4
 2021 0002 85B0     	 sub sp,sp,#20
 2022              	.LCFI100:
 2023              	 .cfi_def_cfa_offset 32
 2024 0004 00AF     	 add r7,sp,#0
 2025              	.LCFI101:
 2026              	 .cfi_def_cfa_register 7
 2027 0006 7860     	 str r0,[r7,#4]
 815:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 816:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 817:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_FAILURE;
 2028              	 .loc 3 817 0
 2029 0008 0F23     	 mov r3,#15
 2030 000a FB18     	 add r3,r7,r3
 2031 000c 0122     	 mov r2,#1
 2032 000e 1A70     	 strb r2,[r3]
 818:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 819:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((handle->config->receive_mode != SPI_MASTER_TRANSFER_MODE_DIRECT) && (handle->runtime->rx_bus
 2033              	 .loc 3 819 0
 2034 0010 7B68     	 ldr r3,[r7,#4]
 2035 0012 5B68     	 ldr r3,[r3,#4]
 2036 0014 8522     	 mov r2,#133
 2037 0016 9B5C     	 ldrb r3,[r3,r2]
 2038 0018 022B     	 cmp r3,#2
 2039 001a 3FD0     	 beq .L80
 2040              	 .loc 3 819 0 is_stmt 0 discriminator 1
 2041 001c 7B68     	 ldr r3,[r7,#4]
 2042 001e 9B68     	 ldr r3,[r3,#8]
 2043 0020 DB7F     	 ldrb r3,[r3,#31]
 2044 0022 DBB2     	 uxtb r3,r3
 2045 0024 002B     	 cmp r3,#0
 2046 0026 39D0     	 beq .L80
 820:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 821:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Abort if any ongoing transmission w.r.t reception. */
 822:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_AbortTransmit(handle);
 2047              	 .loc 3 822 0 is_stmt 1
 2048 0028 0F23     	 mov r3,#15
 2049 002a FC18     	 add r4,r7,r3
 2050 002c 7B68     	 ldr r3,[r7,#4]
 2051 002e 181C     	 mov r0,r3
 2052 0030 FFF7FEFF 	 bl SPI_MASTER_AbortTransmit
 2053 0034 031C     	 mov r3,r0
 2054 0036 2370     	 strb r3,[r4]
 823:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 824:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (status == SPI_MASTER_STATUS_SUCCESS)
 2055              	 .loc 3 824 0
 2056 0038 0F23     	 mov r3,#15
 2057 003a FB18     	 add r3,r7,r3
 2058 003c 1B78     	 ldrb r3,[r3]
 2059 003e 002B     	 cmp r3,#0
 2060 0040 28D1     	 bne .L81
 825:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 826:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Reset the user buffer pointer to null */
 827:../Dave/Generated/SPI_MASTER/spi_master.c ****       handle->runtime->rx_busy = false;
 2061              	 .loc 3 827 0
 2062 0042 7B68     	 ldr r3,[r7,#4]
 2063 0044 9B68     	 ldr r3,[r3,#8]
 2064 0046 0022     	 mov r2,#0
 2065 0048 DA77     	 strb r2,[r3,#31]
 828:../Dave/Generated/SPI_MASTER/spi_master.c ****       handle->runtime->rx_data = NULL;
 2066              	 .loc 3 828 0
 2067 004a 7B68     	 ldr r3,[r7,#4]
 2068 004c 9B68     	 ldr r3,[r3,#8]
 2069 004e 0022     	 mov r2,#0
 2070 0050 5A61     	 str r2,[r3,#20]
 829:../Dave/Generated/SPI_MASTER/spi_master.c ****       handle->runtime->tx_data_dummy = false;
 2071              	 .loc 3 829 0
 2072 0052 7B68     	 ldr r3,[r7,#4]
 2073 0054 9B68     	 ldr r3,[r3,#8]
 2074 0056 2122     	 mov r2,#33
 2075 0058 0021     	 mov r1,#0
 2076 005a 9954     	 strb r1,[r3,r2]
 830:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Disable the receive interrupts */
 831:../Dave/Generated/SPI_MASTER/spi_master.c ****       if ((uint32_t)handle->config->rx_fifo_size > 0U)
 2077              	 .loc 3 831 0
 2078 005c 7B68     	 ldr r3,[r7,#4]
 2079 005e 5B68     	 ldr r3,[r3,#4]
 2080 0060 7D22     	 mov r2,#125
 2081 0062 9B5C     	 ldrb r3,[r3,r2]
 2082 0064 002B     	 cmp r3,#0
 2083 0066 08D0     	 beq .L82
 832:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 833:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel,(uint32_t)SPI_MASTER_FIFO_RECEIVE_EVENT);
 2084              	 .loc 3 833 0
 2085 0068 7B68     	 ldr r3,[r7,#4]
 2086 006a 1A68     	 ldr r2,[r3]
 2087 006c C023     	 mov r3,#192
 2088 006e DB05     	 lsl r3,r3,#23
 2089 0070 101C     	 mov r0,r2
 2090 0072 191C     	 mov r1,r3
 2091 0074 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_DisableEvent
 2092 0078 07E0     	 b .L83
 2093              	.L82:
 834:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 835:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
 836:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 837:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 838:../Dave/Generated/SPI_MASTER/spi_master.c ****         if (handle->config->receive_mode == SPI_MASTER_TRANSFER_MODE_DMA)
 839:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 840:../Dave/Generated/SPI_MASTER/spi_master.c ****           /* Disable the receive event */
 841:../Dave/Generated/SPI_MASTER/spi_master.c ****           if(XMC_DMA_CH_IsEnabled(handle->global_dma->dma, handle->dma_ch_rx_number))
 842:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 843:../Dave/Generated/SPI_MASTER/spi_master.c ****             XMC_DMA_CH_Disable(handle->global_dma->dma, handle->dma_ch_rx_number);
 844:../Dave/Generated/SPI_MASTER/spi_master.c ****             while(XMC_DMA_CH_IsEnabled(handle->global_dma->dma, handle->dma_ch_rx_number)==true)
 845:../Dave/Generated/SPI_MASTER/spi_master.c ****             {
 846:../Dave/Generated/SPI_MASTER/spi_master.c ****             }
 847:../Dave/Generated/SPI_MASTER/spi_master.c ****             XMC_SPI_CH_DisableEvent(handle->channel,
 848:../Dave/Generated/SPI_MASTER/spi_master.c ****             (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE | (uint32_t)XMC_USIC_CH_EVENT_A
 849:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 850:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 851:../Dave/Generated/SPI_MASTER/spi_master.c ****         else
 852:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 853:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 854:../Dave/Generated/SPI_MASTER/spi_master.c ****           XMC_SPI_CH_DisableEvent(handle->channel,
 2094              	 .loc 3 854 0
 2095 007a 7B68     	 ldr r3,[r7,#4]
 2096 007c 1A68     	 ldr r2,[r3]
 2097 007e C023     	 mov r3,#192
 2098 0080 1B02     	 lsl r3,r3,#8
 2099 0082 101C     	 mov r0,r2
 2100 0084 191C     	 mov r1,r3
 2101 0086 FFF7FEFF 	 bl XMC_SPI_CH_DisableEvent
 2102              	.L83:
 855:../Dave/Generated/SPI_MASTER/spi_master.c ****             (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE | (uint32_t)XMC_USIC_CH_EVENT_A
 856:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 857:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 858:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_SUCCESS;
 2103              	 .loc 3 858 0
 2104 008a 0F23     	 mov r3,#15
 2105 008c FB18     	 add r3,r7,r3
 2106 008e 0022     	 mov r2,#0
 2107 0090 1A70     	 strb r2,[r3]
 2108 0092 03E0     	 b .L80
 2109              	.L81:
 859:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 860:../Dave/Generated/SPI_MASTER/spi_master.c ****     else
 861:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 862:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_FAILURE;
 2110              	 .loc 3 862 0
 2111 0094 0F23     	 mov r3,#15
 2112 0096 FB18     	 add r3,r7,r3
 2113 0098 0122     	 mov r2,#1
 2114 009a 1A70     	 strb r2,[r3]
 2115              	.L80:
 863:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 864:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 865:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 2116              	 .loc 3 865 0
 2117 009c 0F23     	 mov r3,#15
 2118 009e FB18     	 add r3,r7,r3
 2119 00a0 1B78     	 ldrb r3,[r3]
 866:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 2120              	 .loc 3 866 0
 2121 00a2 181C     	 mov r0,r3
 2122 00a4 BD46     	 mov sp,r7
 2123 00a6 05B0     	 add sp,sp,#20
 2124              	 
 2125 00a8 90BD     	 pop {r4,r7,pc}
 2126              	 .cfi_endproc
 2127              	.LFE209:
 2129 00aa C046     	 .section .text.SPI_MASTER_AbortTransmit,"ax",%progbits
 2130              	 .align 2
 2131              	 .global SPI_MASTER_AbortTransmit
 2132              	 .code 16
 2133              	 .thumb_func
 2135              	SPI_MASTER_AbortTransmit:
 2136              	.LFB210:
 867:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 868:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
 869:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Aborts the ongoing data transmission.
 870:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 871:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_AbortTransmit(const SPI_MASTER_t *const handle)
 872:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 2137              	 .loc 3 872 0
 2138              	 .cfi_startproc
 2139 0000 80B5     	 push {r7,lr}
 2140              	.LCFI102:
 2141              	 .cfi_def_cfa_offset 8
 2142              	 .cfi_offset 7,-8
 2143              	 .cfi_offset 14,-4
 2144 0002 84B0     	 sub sp,sp,#16
 2145              	.LCFI103:
 2146              	 .cfi_def_cfa_offset 24
 2147 0004 00AF     	 add r7,sp,#0
 2148              	.LCFI104:
 2149              	 .cfi_def_cfa_register 7
 2150 0006 7860     	 str r0,[r7,#4]
 873:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
 874:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 875:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_FAILURE;
 2151              	 .loc 3 875 0
 2152 0008 0F23     	 mov r3,#15
 2153 000a FB18     	 add r3,r7,r3
 2154 000c 0122     	 mov r2,#1
 2155 000e 1A70     	 strb r2,[r3]
 876:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 877:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((handle->config->transmit_mode != SPI_MASTER_TRANSFER_MODE_DIRECT) && (handle->runtime->tx_bu
 2156              	 .loc 3 877 0
 2157 0010 7B68     	 ldr r3,[r7,#4]
 2158 0012 5B68     	 ldr r3,[r3,#4]
 2159 0014 8422     	 mov r2,#132
 2160 0016 9B5C     	 ldrb r3,[r3,r2]
 2161 0018 022B     	 cmp r3,#2
 2162 001a 34D0     	 beq .L86
 2163              	 .loc 3 877 0 is_stmt 0 discriminator 1
 2164 001c 7B68     	 ldr r3,[r7,#4]
 2165 001e 9B68     	 ldr r3,[r3,#8]
 2166 0020 2022     	 mov r2,#32
 2167 0022 9B5C     	 ldrb r3,[r3,r2]
 2168 0024 DBB2     	 uxtb r3,r3
 2169 0026 002B     	 cmp r3,#0
 2170 0028 2DD0     	 beq .L86
 878:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 879:../Dave/Generated/SPI_MASTER/spi_master.c ****     /*Reset the user buffer pointer to null*/
 880:../Dave/Generated/SPI_MASTER/spi_master.c ****     handle->runtime->tx_busy = false;
 2171              	 .loc 3 880 0 is_stmt 1
 2172 002a 7B68     	 ldr r3,[r7,#4]
 2173 002c 9B68     	 ldr r3,[r3,#8]
 2174 002e 2022     	 mov r2,#32
 2175 0030 0021     	 mov r1,#0
 2176 0032 9954     	 strb r1,[r3,r2]
 881:../Dave/Generated/SPI_MASTER/spi_master.c ****     handle->runtime->tx_data = NULL;
 2177              	 .loc 3 881 0
 2178 0034 7B68     	 ldr r3,[r7,#4]
 2179 0036 9B68     	 ldr r3,[r3,#8]
 2180 0038 0022     	 mov r2,#0
 2181 003a 9A61     	 str r2,[r3,#24]
 882:../Dave/Generated/SPI_MASTER/spi_master.c ****     handle->runtime->tx_data_dummy = false;
 2182              	 .loc 3 882 0
 2183 003c 7B68     	 ldr r3,[r7,#4]
 2184 003e 9B68     	 ldr r3,[r3,#8]
 2185 0040 2122     	 mov r2,#33
 2186 0042 0021     	 mov r1,#0
 2187 0044 9954     	 strb r1,[r3,r2]
 883:../Dave/Generated/SPI_MASTER/spi_master.c ****     /*Disable the transmit interrupts*/
 884:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((uint32_t)handle->config->tx_fifo_size > 0U)
 2188              	 .loc 3 884 0
 2189 0046 7B68     	 ldr r3,[r7,#4]
 2190 0048 5B68     	 ldr r3,[r3,#4]
 2191 004a 7C22     	 mov r2,#124
 2192 004c 9B5C     	 ldrb r3,[r3,r2]
 2193 004e 002B     	 cmp r3,#0
 2194 0050 0DD0     	 beq .L87
 885:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 886:../Dave/Generated/SPI_MASTER/spi_master.c ****       /*Disable the transmit FIFO event*/
 887:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAND
 2195              	 .loc 3 887 0
 2196 0052 7B68     	 ldr r3,[r7,#4]
 2197 0054 1A68     	 ldr r2,[r3]
 2198 0056 8023     	 mov r3,#128
 2199 0058 DB05     	 lsl r3,r3,#23
 2200 005a 101C     	 mov r0,r2
 2201 005c 191C     	 mov r1,r3
 2202 005e FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 888:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 2203              	 .loc 3 888 0
 2204 0062 7B68     	 ldr r3,[r7,#4]
 2205 0064 1B68     	 ldr r3,[r3]
 2206 0066 181C     	 mov r0,r3
 2207 0068 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_Flush
 2208 006c 07E0     	 b .L88
 2209              	.L87:
 889:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 890:../Dave/Generated/SPI_MASTER/spi_master.c ****     else
 891:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 892:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 893:../Dave/Generated/SPI_MASTER/spi_master.c ****       if(handle->config->transmit_mode == SPI_MASTER_TRANSFER_MODE_DMA)
 894:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 895:../Dave/Generated/SPI_MASTER/spi_master.c ****         /*Disable the standard transmit event*/
 896:../Dave/Generated/SPI_MASTER/spi_master.c ****         if(XMC_DMA_CH_IsEnabled(handle->global_dma->dma, handle->dma_ch_tx_number))
 897:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 898:../Dave/Generated/SPI_MASTER/spi_master.c ****           XMC_DMA_CH_Disable(handle->global_dma->dma, handle->dma_ch_tx_number);
 899:../Dave/Generated/SPI_MASTER/spi_master.c ****           while(XMC_DMA_CH_IsEnabled(handle->global_dma->dma, handle->dma_ch_tx_number)==true)
 900:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 901:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 902:../Dave/Generated/SPI_MASTER/spi_master.c ****           XMC_SPI_CH_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 903:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 904:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 905:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
 906:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
 907:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 908:../Dave/Generated/SPI_MASTER/spi_master.c ****         /*Disable the standard transmit event*/
 909:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_SPI_CH_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 2210              	 .loc 3 909 0
 2211 006e 7B68     	 ldr r3,[r7,#4]
 2212 0070 1A68     	 ldr r2,[r3]
 2213 0072 8023     	 mov r3,#128
 2214 0074 9B01     	 lsl r3,r3,#6
 2215 0076 101C     	 mov r0,r2
 2216 0078 191C     	 mov r1,r3
 2217 007a FFF7FEFF 	 bl XMC_SPI_CH_DisableEvent
 2218              	.L88:
 910:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 911:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 912:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_STATUS_SUCCESS;
 2219              	 .loc 3 912 0
 2220 007e 0F23     	 mov r3,#15
 2221 0080 FB18     	 add r3,r7,r3
 2222 0082 0022     	 mov r2,#0
 2223 0084 1A70     	 strb r2,[r3]
 2224              	.L86:
 913:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 914:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 2225              	 .loc 3 914 0
 2226 0086 0F23     	 mov r3,#15
 2227 0088 FB18     	 add r3,r7,r3
 2228 008a 1B78     	 ldrb r3,[r3]
 915:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 2229              	 .loc 3 915 0
 2230 008c 181C     	 mov r0,r3
 2231 008e BD46     	 mov sp,r7
 2232 0090 04B0     	 add sp,sp,#16
 2233              	 
 2234 0092 80BD     	 pop {r7,pc}
 2235              	 .cfi_endproc
 2236              	.LFE210:
 2238              	 .section .text.SPI_MASTER_lTransmitHandler,"ax",%progbits
 2239              	 .align 2
 2240              	 .global SPI_MASTER_lTransmitHandler
 2241              	 .code 16
 2242              	 .thumb_func
 2244              	SPI_MASTER_lTransmitHandler:
 2245              	.LFB211:
 916:../Dave/Generated/SPI_MASTER/spi_master.c **** /**************************************************************************************************
 917:../Dave/Generated/SPI_MASTER/spi_master.c **** **                                                Private API definitions                          
 918:../Dave/Generated/SPI_MASTER/spi_master.c **** ***************************************************************************************************
 919:../Dave/Generated/SPI_MASTER/spi_master.c **** #if(SPI_MASTER_INTERRUPT_TRANSMIT_MODE == 1U)
 920:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
 921:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Transmit interrupt handler for the APP.
 922:../Dave/Generated/SPI_MASTER/spi_master.c ****  * This is a common interrupt handling function called for different instances of the APP.
 923:../Dave/Generated/SPI_MASTER/spi_master.c ****  *
 924:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
 925:../Dave/Generated/SPI_MASTER/spi_master.c **** void SPI_MASTER_lTransmitHandler(const SPI_MASTER_t * const handle)
 926:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 2246              	 .loc 3 926 0
 2247              	 .cfi_startproc
 2248 0000 90B5     	 push {r4,r7,lr}
 2249              	.LCFI105:
 2250              	 .cfi_def_cfa_offset 12
 2251              	 .cfi_offset 4,-12
 2252              	 .cfi_offset 7,-8
 2253              	 .cfi_offset 14,-4
 2254 0002 87B0     	 sub sp,sp,#28
 2255              	.LCFI106:
 2256              	 .cfi_def_cfa_offset 40
 2257 0004 00AF     	 add r7,sp,#0
 2258              	.LCFI107:
 2259              	 .cfi_def_cfa_register 7
 2260 0006 7860     	 str r0,[r7,#4]
 927:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint16_t data; /* Data to be loaded into the TBUF */
 928:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t bytes_per_word = SPI_MASTER_1_BYTE_PER_WORD; /* This is to support the word length 8 and
 2261              	 .loc 3 928 0
 2262 0008 0123     	 mov r3,#1
 2263 000a 3B61     	 str r3,[r7,#16]
 929:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle = handle->runtime;
 2264              	 .loc 3 929 0
 2265 000c 7B68     	 ldr r3,[r7,#4]
 2266 000e 9B68     	 ldr r3,[r3,#8]
 2267 0010 FB60     	 str r3,[r7,#12]
 930:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 931:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->runtime->word_length > SPI_MASTER_WORD_LENGTH_8_BIT)
 2268              	 .loc 3 931 0
 2269 0012 7B68     	 ldr r3,[r7,#4]
 2270 0014 9B68     	 ldr r3,[r3,#8]
 2271 0016 1B68     	 ldr r3,[r3]
 2272 0018 082B     	 cmp r3,#8
 2273 001a 01D9     	 bls .L91
 932:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 933:../Dave/Generated/SPI_MASTER/spi_master.c ****     bytes_per_word = SPI_MASTER_2_BYTES_PER_WORD; /* Word length is 16-bits */
 2274              	 .loc 3 933 0
 2275 001c 0223     	 mov r3,#2
 2276 001e 3B61     	 str r3,[r7,#16]
 2277              	.L91:
 934:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 935:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 936:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (runtime_handle->tx_data_index < runtime_handle->tx_data_count)
 2278              	 .loc 3 936 0
 2279 0020 FB68     	 ldr r3,[r7,#12]
 2280 0022 9A68     	 ldr r2,[r3,#8]
 2281 0024 FB68     	 ldr r3,[r7,#12]
 2282 0026 5B68     	 ldr r3,[r3,#4]
 2283 0028 9A42     	 cmp r2,r3
 2284 002a 00D3     	 bcc .LCB2035
 2285 002c 9BE0     	 b .L92
 2286              	.LCB2035:
 937:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 938:../Dave/Generated/SPI_MASTER/spi_master.c ****     data = 0U;
 2287              	 .loc 3 938 0
 2288 002e 1623     	 mov r3,#22
 2289 0030 FB18     	 add r3,r7,r3
 2290 0032 0022     	 mov r2,#0
 2291 0034 1A80     	 strh r2,[r3]
 939:../Dave/Generated/SPI_MASTER/spi_master.c ****     /*When Transmit FIFO is enabled*/
 940:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((uint32_t)handle->config->tx_fifo_size > 0U)
 2292              	 .loc 3 940 0
 2293 0036 7B68     	 ldr r3,[r7,#4]
 2294 0038 5B68     	 ldr r3,[r3,#4]
 2295 003a 7C22     	 mov r2,#124
 2296 003c 9B5C     	 ldrb r3,[r3,r2]
 2297 003e 002B     	 cmp r3,#0
 2298 0040 53D0     	 beq .L93
 941:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 942:../Dave/Generated/SPI_MASTER/spi_master.c ****       /*Fill the transmit FIFO */
 943:../Dave/Generated/SPI_MASTER/spi_master.c ****       while (XMC_USIC_CH_TXFIFO_IsFull(handle->channel) == false)
 2299              	 .loc 3 943 0
 2300 0042 45E0     	 b .L94
 2301              	.L101:
 944:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 945:../Dave/Generated/SPI_MASTER/spi_master.c ****         if (runtime_handle->tx_data_index < runtime_handle->tx_data_count)
 2302              	 .loc 3 945 0
 2303 0044 FB68     	 ldr r3,[r7,#12]
 2304 0046 9A68     	 ldr r2,[r3,#8]
 2305 0048 FB68     	 ldr r3,[r7,#12]
 2306 004a 5B68     	 ldr r3,[r3,#4]
 2307 004c 9A42     	 cmp r2,r3
 2308 004e 3DD2     	 bcs .L95
 946:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 947:../Dave/Generated/SPI_MASTER/spi_master.c ****           /*Load the FIFO byte by byte till either FIFO is full or all data is loaded*/
 948:../Dave/Generated/SPI_MASTER/spi_master.c ****           if (runtime_handle->tx_data_dummy == true)
 2309              	 .loc 3 948 0
 2310 0050 FB68     	 ldr r3,[r7,#12]
 2311 0052 2122     	 mov r2,#33
 2312 0054 9B5C     	 ldrb r3,[r3,r2]
 2313 0056 DBB2     	 uxtb r3,r3
 2314 0058 002B     	 cmp r3,#0
 2315 005a 0CD0     	 beq .L96
 949:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 950:../Dave/Generated/SPI_MASTER/spi_master.c ****             XMC_USIC_CH_TXFIFO_PutDataHPCMode(handle->channel, 0xFFFFU, (uint32_t)runtime_handle->s
 2316              	 .loc 3 950 0
 2317 005c 7B68     	 ldr r3,[r7,#4]
 2318 005e 1A68     	 ldr r2,[r3]
 2319 0060 FB68     	 ldr r3,[r7,#12]
 2320 0062 1B7F     	 ldrb r3,[r3,#28]
 2321 0064 DBB2     	 uxtb r3,r3
 2322 0066 1C1C     	 mov r4,r3
 2323 0068 604B     	 ldr r3,.L111
 2324 006a 101C     	 mov r0,r2
 2325 006c 191C     	 mov r1,r3
 2326 006e 221C     	 mov r2,r4
 2327 0070 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_PutDataHPCMode
 2328 0074 23E0     	 b .L97
 2329              	.L96:
 951:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 952:../Dave/Generated/SPI_MASTER/spi_master.c ****           else
 953:../Dave/Generated/SPI_MASTER/spi_master.c ****           {
 954:../Dave/Generated/SPI_MASTER/spi_master.c ****             if(bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
 2330              	 .loc 3 954 0
 2331 0076 3B69     	 ldr r3,[r7,#16]
 2332 0078 022B     	 cmp r3,#2
 2333 007a 09D1     	 bne .L98
 955:../Dave/Generated/SPI_MASTER/spi_master.c ****             {
 956:../Dave/Generated/SPI_MASTER/spi_master.c ****               data = *((uint16_t*)&runtime_handle->tx_data[runtime_handle->tx_data_index]);
 2334              	 .loc 3 956 0
 2335 007c FB68     	 ldr r3,[r7,#12]
 2336 007e 9A69     	 ldr r2,[r3,#24]
 2337 0080 FB68     	 ldr r3,[r7,#12]
 2338 0082 9B68     	 ldr r3,[r3,#8]
 2339 0084 D218     	 add r2,r2,r3
 2340 0086 1623     	 mov r3,#22
 2341 0088 FB18     	 add r3,r7,r3
 2342 008a 1288     	 ldrh r2,[r2]
 2343 008c 1A80     	 strh r2,[r3]
 2344 008e 08E0     	 b .L99
 2345              	.L98:
 957:../Dave/Generated/SPI_MASTER/spi_master.c ****             }
 958:../Dave/Generated/SPI_MASTER/spi_master.c ****             else
 959:../Dave/Generated/SPI_MASTER/spi_master.c ****             {
 960:../Dave/Generated/SPI_MASTER/spi_master.c ****               data = runtime_handle->tx_data[runtime_handle->tx_data_index];
 2346              	 .loc 3 960 0
 2347 0090 FB68     	 ldr r3,[r7,#12]
 2348 0092 9A69     	 ldr r2,[r3,#24]
 2349 0094 FB68     	 ldr r3,[r7,#12]
 2350 0096 9B68     	 ldr r3,[r3,#8]
 2351 0098 D318     	 add r3,r2,r3
 2352 009a 1A78     	 ldrb r2,[r3]
 2353 009c 1623     	 mov r3,#22
 2354 009e FB18     	 add r3,r7,r3
 2355 00a0 1A80     	 strh r2,[r3]
 2356              	.L99:
 961:../Dave/Generated/SPI_MASTER/spi_master.c ****             }
 962:../Dave/Generated/SPI_MASTER/spi_master.c ****             XMC_USIC_CH_TXFIFO_PutDataHPCMode(handle->channel, data, (uint32_t)runtime_handle->spi_
 2357              	 .loc 3 962 0
 2358 00a2 7B68     	 ldr r3,[r7,#4]
 2359 00a4 1A68     	 ldr r2,[r3]
 2360 00a6 FB68     	 ldr r3,[r7,#12]
 2361 00a8 1B7F     	 ldrb r3,[r3,#28]
 2362 00aa DBB2     	 uxtb r3,r3
 2363 00ac 1C1C     	 mov r4,r3
 2364 00ae 1623     	 mov r3,#22
 2365 00b0 FB18     	 add r3,r7,r3
 2366 00b2 1B88     	 ldrh r3,[r3]
 2367 00b4 101C     	 mov r0,r2
 2368 00b6 191C     	 mov r1,r3
 2369 00b8 221C     	 mov r2,r4
 2370 00ba FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_PutDataHPCMode
 2371              	.L97:
 963:../Dave/Generated/SPI_MASTER/spi_master.c ****           }
 964:../Dave/Generated/SPI_MASTER/spi_master.c ****           (runtime_handle->tx_data_index)+= bytes_per_word;
 2372              	 .loc 3 964 0
 2373 00be FB68     	 ldr r3,[r7,#12]
 2374 00c0 9A68     	 ldr r2,[r3,#8]
 2375 00c2 3B69     	 ldr r3,[r7,#16]
 2376 00c4 D218     	 add r2,r2,r3
 2377 00c6 FB68     	 ldr r3,[r7,#12]
 2378 00c8 9A60     	 str r2,[r3,#8]
 2379 00ca 01E0     	 b .L94
 2380              	.L95:
 965:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 966:../Dave/Generated/SPI_MASTER/spi_master.c ****         else
 967:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 968:../Dave/Generated/SPI_MASTER/spi_master.c ****           break;
 2381              	 .loc 3 968 0
 2382 00cc C046     	 mov r8,r8
 2383 00ce 89E0     	 b .L90
 2384              	.L94:
 943:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 2385              	 .loc 3 943 0
 2386 00d0 7B68     	 ldr r3,[r7,#4]
 2387 00d2 1B68     	 ldr r3,[r3]
 2388 00d4 181C     	 mov r0,r3
 2389 00d6 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsFull
 2390 00da 031C     	 mov r3,r0
 2391 00dc 1A1C     	 mov r2,r3
 2392 00de 0123     	 mov r3,#1
 2393 00e0 5340     	 eor r3,r2
 2394 00e2 DBB2     	 uxtb r3,r3
 2395 00e4 002B     	 cmp r3,#0
 2396 00e6 ADD1     	 bne .L101
 2397 00e8 7CE0     	 b .L90
 2398              	.L93:
 969:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 970:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 971:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 972:../Dave/Generated/SPI_MASTER/spi_master.c ****     else/*When Transmit FIFO is disabled*/
 973:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 974:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (runtime_handle->tx_data_dummy == true)
 2399              	 .loc 3 974 0
 2400 00ea FB68     	 ldr r3,[r7,#12]
 2401 00ec 2122     	 mov r2,#33
 2402 00ee 9B5C     	 ldrb r3,[r3,r2]
 2403 00f0 DBB2     	 uxtb r3,r3
 2404 00f2 002B     	 cmp r3,#0
 2405 00f4 0CD0     	 beq .L103
 975:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 976:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_WriteToTBUFTCI(handle->channel, 0xFFFFU, (uint32_t)runtime_handle->spi_master_m
 2406              	 .loc 3 976 0
 2407 00f6 7B68     	 ldr r3,[r7,#4]
 2408 00f8 1A68     	 ldr r2,[r3]
 2409 00fa FB68     	 ldr r3,[r7,#12]
 2410 00fc 1B7F     	 ldrb r3,[r3,#28]
 2411 00fe DBB2     	 uxtb r3,r3
 2412 0100 1C1C     	 mov r4,r3
 2413 0102 3A4B     	 ldr r3,.L111
 2414 0104 101C     	 mov r0,r2
 2415 0106 191C     	 mov r1,r3
 2416 0108 221C     	 mov r2,r4
 2417 010a FFF7FEFF 	 bl XMC_USIC_CH_WriteToTBUFTCI
 2418 010e 23E0     	 b .L104
 2419              	.L103:
 977:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 978:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
 979:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
 980:../Dave/Generated/SPI_MASTER/spi_master.c ****         if(bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
 2420              	 .loc 3 980 0
 2421 0110 3B69     	 ldr r3,[r7,#16]
 2422 0112 022B     	 cmp r3,#2
 2423 0114 09D1     	 bne .L105
 981:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 982:../Dave/Generated/SPI_MASTER/spi_master.c ****           data = *((uint16_t*)&runtime_handle->tx_data[runtime_handle->tx_data_index]);
 2424              	 .loc 3 982 0
 2425 0116 FB68     	 ldr r3,[r7,#12]
 2426 0118 9A69     	 ldr r2,[r3,#24]
 2427 011a FB68     	 ldr r3,[r7,#12]
 2428 011c 9B68     	 ldr r3,[r3,#8]
 2429 011e D218     	 add r2,r2,r3
 2430 0120 1623     	 mov r3,#22
 2431 0122 FB18     	 add r3,r7,r3
 2432 0124 1288     	 ldrh r2,[r2]
 2433 0126 1A80     	 strh r2,[r3]
 2434 0128 08E0     	 b .L106
 2435              	.L105:
 983:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 984:../Dave/Generated/SPI_MASTER/spi_master.c ****         else
 985:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
 986:../Dave/Generated/SPI_MASTER/spi_master.c ****           data = runtime_handle->tx_data[runtime_handle->tx_data_index];
 2436              	 .loc 3 986 0
 2437 012a FB68     	 ldr r3,[r7,#12]
 2438 012c 9A69     	 ldr r2,[r3,#24]
 2439 012e FB68     	 ldr r3,[r7,#12]
 2440 0130 9B68     	 ldr r3,[r3,#8]
 2441 0132 D318     	 add r3,r2,r3
 2442 0134 1A78     	 ldrb r2,[r3]
 2443 0136 1623     	 mov r3,#22
 2444 0138 FB18     	 add r3,r7,r3
 2445 013a 1A80     	 strh r2,[r3]
 2446              	.L106:
 987:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
 988:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_WriteToTBUFTCI(handle->channel, data, (uint32_t)runtime_handle->spi_master_mode
 2447              	 .loc 3 988 0
 2448 013c 7B68     	 ldr r3,[r7,#4]
 2449 013e 1A68     	 ldr r2,[r3]
 2450 0140 FB68     	 ldr r3,[r7,#12]
 2451 0142 1B7F     	 ldrb r3,[r3,#28]
 2452 0144 DBB2     	 uxtb r3,r3
 2453 0146 1C1C     	 mov r4,r3
 2454 0148 1623     	 mov r3,#22
 2455 014a FB18     	 add r3,r7,r3
 2456 014c 1B88     	 ldrh r3,[r3]
 2457 014e 101C     	 mov r0,r2
 2458 0150 191C     	 mov r1,r3
 2459 0152 221C     	 mov r2,r4
 2460 0154 FFF7FEFF 	 bl XMC_USIC_CH_WriteToTBUFTCI
 2461              	.L104:
 989:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
 990:../Dave/Generated/SPI_MASTER/spi_master.c ****       (runtime_handle->tx_data_index)+= bytes_per_word;
 2462              	 .loc 3 990 0
 2463 0158 FB68     	 ldr r3,[r7,#12]
 2464 015a 9A68     	 ldr r2,[r3,#8]
 2465 015c 3B69     	 ldr r3,[r7,#16]
 2466 015e D218     	 add r2,r2,r3
 2467 0160 FB68     	 ldr r3,[r7,#12]
 2468 0162 9A60     	 str r2,[r3,#8]
 2469 0164 3EE0     	 b .L90
 2470              	.L92:
 991:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
 992:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
 993:../Dave/Generated/SPI_MASTER/spi_master.c ****   else
 994:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 995:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (XMC_USIC_CH_TXFIFO_IsEmpty(handle->channel) == true)
 2471              	 .loc 3 995 0
 2472 0166 7B68     	 ldr r3,[r7,#4]
 2473 0168 1B68     	 ldr r3,[r3]
 2474 016a 181C     	 mov r0,r3
 2475 016c FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsEmpty
 2476 0170 031E     	 sub r3,r0,#0
 2477 0172 37D0     	 beq .L90
 996:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
 997:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Clear the flag */
 998:../Dave/Generated/SPI_MASTER/spi_master.c ****       if ((uint32_t)handle->config->tx_fifo_size > 0U)
 2478              	 .loc 3 998 0
 2479 0174 7B68     	 ldr r3,[r7,#4]
 2480 0176 5B68     	 ldr r3,[r3,#4]
 2481 0178 7C22     	 mov r2,#124
 2482 017a 9B5C     	 ldrb r3,[r3,r2]
 2483 017c 002B     	 cmp r3,#0
 2484 017e 08D0     	 beq .L108
 999:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1000:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Clear the transmit FIFO event */
1001:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STA
 2485              	 .loc 3 1001 0
 2486 0180 7B68     	 ldr r3,[r7,#4]
 2487 0182 1A68     	 ldr r2,[r3]
 2488 0184 8023     	 mov r3,#128
 2489 0186 DB05     	 lsl r3,r3,#23
 2490 0188 101C     	 mov r0,r2
 2491 018a 191C     	 mov r1,r3
 2492 018c FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 2493 0190 07E0     	 b .L109
 2494              	.L108:
1002:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1003:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
1004:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1005:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Clear the standard transmit event */
1006:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 2495              	 .loc 3 1006 0
 2496 0192 7B68     	 ldr r3,[r7,#4]
 2497 0194 1A68     	 ldr r2,[r3]
 2498 0196 8023     	 mov r3,#128
 2499 0198 9B01     	 lsl r3,r3,#6
 2500 019a 101C     	 mov r0,r2
 2501 019c 191C     	 mov r1,r3
 2502 019e FFF7FEFF 	 bl XMC_USIC_CH_DisableEvent
 2503              	.L109:
1007:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1008:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1009:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Wait for the transmit buffer to be free to ensure that all data is transmitted */
1010:../Dave/Generated/SPI_MASTER/spi_master.c ****       while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 2504              	 .loc 3 1010 0
 2505 01a2 C046     	 mov r8,r8
 2506              	.L110:
 2507              	 .loc 3 1010 0 is_stmt 0 discriminator 1
 2508 01a4 7B68     	 ldr r3,[r7,#4]
 2509 01a6 1B68     	 ldr r3,[r3]
 2510 01a8 181C     	 mov r0,r3
 2511 01aa FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 2512 01ae 031E     	 sub r3,r0,#0
 2513 01b0 802B     	 cmp r3,#128
 2514 01b2 F7D0     	 beq .L110
1011:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1012:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1013:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1014:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1015:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* All data is transmitted */
1016:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_busy = false;
 2515              	 .loc 3 1016 0 is_stmt 1
 2516 01b4 FB68     	 ldr r3,[r7,#12]
 2517 01b6 2022     	 mov r2,#32
 2518 01b8 0021     	 mov r1,#0
 2519 01ba 9954     	 strb r1,[r3,r2]
1017:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data = NULL;
 2520              	 .loc 3 1017 0
 2521 01bc FB68     	 ldr r3,[r7,#12]
 2522 01be 0022     	 mov r2,#0
 2523 01c0 9A61     	 str r2,[r3,#24]
1018:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1019:../Dave/Generated/SPI_MASTER/spi_master.c ****       if ((handle->config->tx_cbhandler != NULL) && (runtime_handle->rx_busy == false))
 2524              	 .loc 3 1019 0
 2525 01c2 7B68     	 ldr r3,[r7,#4]
 2526 01c4 5B68     	 ldr r3,[r3,#4]
 2527 01c6 1B6F     	 ldr r3,[r3,#112]
 2528 01c8 002B     	 cmp r3,#0
 2529 01ca 0BD0     	 beq .L90
 2530              	 .loc 3 1019 0 is_stmt 0 discriminator 1
 2531 01cc FB68     	 ldr r3,[r7,#12]
 2532 01ce DB7F     	 ldrb r3,[r3,#31]
 2533 01d0 DBB2     	 uxtb r3,r3
 2534 01d2 0122     	 mov r2,#1
 2535 01d4 5340     	 eor r3,r2
 2536 01d6 DBB2     	 uxtb r3,r3
 2537 01d8 002B     	 cmp r3,#0
 2538 01da 03D0     	 beq .L90
1020:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1021:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Execute the callback function provided in the SPI_MASTER APP UI */
1022:../Dave/Generated/SPI_MASTER/spi_master.c ****         handle->config->tx_cbhandler();
 2539              	 .loc 3 1022 0 is_stmt 1
 2540 01dc 7B68     	 ldr r3,[r7,#4]
 2541 01de 5B68     	 ldr r3,[r3,#4]
 2542 01e0 1B6F     	 ldr r3,[r3,#112]
 2543 01e2 9847     	 blx r3
 2544              	.L90:
1023:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1024:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1025:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1026:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 2545              	 .loc 3 1026 0
 2546 01e4 BD46     	 mov sp,r7
 2547 01e6 07B0     	 add sp,sp,#28
 2548              	 
 2549 01e8 90BD     	 pop {r4,r7,pc}
 2550              	.L112:
 2551 01ea C046     	 .align 2
 2552              	.L111:
 2553 01ec FFFF0000 	 .word 65535
 2554              	 .cfi_endproc
 2555              	.LFE211:
 2557              	 .section .text.SPI_MASTER_lReceiveIRQ,"ax",%progbits
 2558              	 .align 2
 2559              	 .code 16
 2560              	 .thumb_func
 2562              	SPI_MASTER_lReceiveIRQ:
 2563              	.LFB212:
1027:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
1028:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1029:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
1030:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1031:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_lReceiveIRQ(const SPI_MASTER_t *const handle, uint32_t count)
1032:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 2564              	 .loc 3 1032 0
 2565              	 .cfi_startproc
 2566 0000 90B5     	 push {r4,r7,lr}
 2567              	.LCFI108:
 2568              	 .cfi_def_cfa_offset 12
 2569              	 .cfi_offset 4,-12
 2570              	 .cfi_offset 7,-8
 2571              	 .cfi_offset 14,-4
 2572 0002 87B0     	 sub sp,sp,#28
 2573              	.LCFI109:
 2574              	 .cfi_def_cfa_offset 40
 2575 0004 00AF     	 add r7,sp,#0
 2576              	.LCFI110:
 2577              	 .cfi_def_cfa_register 7
 2578 0006 7860     	 str r0,[r7,#4]
 2579 0008 3960     	 str r1,[r7]
1033:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1034:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
1035:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
1036:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t bytes_per_word = SPI_MASTER_1_BYTE_PER_WORD;; /* This is to support the word length 8 an
 2580              	 .loc 3 1036 0
 2581 000a 0123     	 mov r3,#1
 2582 000c 7B61     	 str r3,[r7,#20]
1037:../Dave/Generated/SPI_MASTER/spi_master.c ****                                                             Specify the number of bytes for the con
1038:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1039:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
 2583              	 .loc 3 1039 0
 2584 000e 7B68     	 ldr r3,[r7,#4]
 2585 0010 9B68     	 ldr r3,[r3,#8]
 2586 0012 3B61     	 str r3,[r7,#16]
1040:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->rx_data_index = 0U;
 2587              	 .loc 3 1040 0
 2588 0014 3B69     	 ldr r3,[r7,#16]
 2589 0016 0022     	 mov r2,#0
 2590 0018 1A61     	 str r2,[r3,#16]
1041:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1042:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->runtime->word_length > SPI_MASTER_WORD_LENGTH_8_BIT)
 2591              	 .loc 3 1042 0
 2592 001a 7B68     	 ldr r3,[r7,#4]
 2593 001c 9B68     	 ldr r3,[r3,#8]
 2594 001e 1B68     	 ldr r3,[r3]
 2595 0020 082B     	 cmp r3,#8
 2596 0022 01D9     	 bls .L114
1043:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1044:../Dave/Generated/SPI_MASTER/spi_master.c ****     bytes_per_word = SPI_MASTER_2_BYTES_PER_WORD; /* Word length is 16-bits */
 2597              	 .loc 3 1044 0
 2598 0024 0223     	 mov r3,#2
 2599 0026 7B61     	 str r3,[r7,#20]
 2600              	.L114:
1045:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1046:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1047:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* If no active reception in progress, obtain the address of data buffer and number of data bytes
1048:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->rx_data_count = (uint32_t)count << (bytes_per_word - 1U);
 2601              	 .loc 3 1048 0
 2602 0028 7B69     	 ldr r3,[r7,#20]
 2603 002a 013B     	 sub r3,r3,#1
 2604 002c 1A1C     	 mov r2,r3
 2605 002e 3B68     	 ldr r3,[r7]
 2606 0030 9340     	 lsl r3,r3,r2
 2607 0032 1A1C     	 mov r2,r3
 2608 0034 3B69     	 ldr r3,[r7,#16]
 2609 0036 DA60     	 str r2,[r3,#12]
1049:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1050:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* Check if FIFO is enabled */
1051:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((uint32_t)handle->config->rx_fifo_size > 0U)
 2610              	 .loc 3 1051 0
 2611 0038 7B68     	 ldr r3,[r7,#4]
 2612 003a 5B68     	 ldr r3,[r3,#4]
 2613 003c 7D22     	 mov r2,#125
 2614 003e 9B5C     	 ldrb r3,[r3,r2]
 2615 0040 002B     	 cmp r3,#0
 2616 0042 19D0     	 beq .L115
1052:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1053:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Clear the receive FIFO */
1054:../Dave/Generated/SPI_MASTER/spi_master.c ****     XMC_USIC_CH_RXFIFO_Flush(handle->channel);
 2617              	 .loc 3 1054 0
 2618 0044 7B68     	 ldr r3,[r7,#4]
 2619 0046 1B68     	 ldr r3,[r3]
 2620 0048 181C     	 mov r0,r3
 2621 004a FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_Flush
1055:../Dave/Generated/SPI_MASTER/spi_master.c ****     SPI_MASTER_lStdRBUFFlush(handle->channel);
 2622              	 .loc 3 1055 0
 2623 004e 7B68     	 ldr r3,[r7,#4]
 2624 0050 1B68     	 ldr r3,[r3]
 2625 0052 181C     	 mov r0,r3
 2626 0054 FFF7FEFF 	 bl SPI_MASTER_lStdRBUFFlush
1056:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1057:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Configure the FIFO trigger limit based on the required data size */
1058:../Dave/Generated/SPI_MASTER/spi_master.c ****     SPI_MASTER_lReconfigureRxFIFO(handle, runtime_handle->rx_data_count);
 2627              	 .loc 3 1058 0
 2628 0058 3B69     	 ldr r3,[r7,#16]
 2629 005a DB68     	 ldr r3,[r3,#12]
 2630 005c 7A68     	 ldr r2,[r7,#4]
 2631 005e 101C     	 mov r0,r2
 2632 0060 191C     	 mov r1,r3
 2633 0062 FFF7FEFF 	 bl SPI_MASTER_lReconfigureRxFIFO
1059:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1060:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Enable the receive FIFO events */
1061:../Dave/Generated/SPI_MASTER/spi_master.c ****     XMC_USIC_CH_RXFIFO_EnableEvent(handle->channel,(uint32_t)SPI_MASTER_FIFO_RECEIVE_EVENT);
 2634              	 .loc 3 1061 0
 2635 0066 7B68     	 ldr r3,[r7,#4]
 2636 0068 1A68     	 ldr r2,[r3]
 2637 006a C023     	 mov r3,#192
 2638 006c DB05     	 lsl r3,r3,#23
 2639 006e 101C     	 mov r0,r2
 2640 0070 191C     	 mov r1,r3
 2641 0072 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_EnableEvent
 2642 0076 0CE0     	 b .L116
 2643              	.L115:
1062:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1063:../Dave/Generated/SPI_MASTER/spi_master.c ****   else
1064:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1065:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Flush the RBUF0 and RBUF1 */
1066:../Dave/Generated/SPI_MASTER/spi_master.c ****     SPI_MASTER_lStdRBUFFlush(handle->channel);
 2644              	 .loc 3 1066 0
 2645 0078 7B68     	 ldr r3,[r7,#4]
 2646 007a 1B68     	 ldr r3,[r3]
 2647 007c 181C     	 mov r0,r3
 2648 007e FFF7FEFF 	 bl SPI_MASTER_lStdRBUFFlush
1067:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1068:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Enable the standard receive events */
1069:../Dave/Generated/SPI_MASTER/spi_master.c ****     XMC_USIC_CH_EnableEvent(handle->channel, (uint32_t)SPI_MASTER_RECEIVE_EVENT);
 2649              	 .loc 3 1069 0
 2650 0082 7B68     	 ldr r3,[r7,#4]
 2651 0084 1A68     	 ldr r2,[r3]
 2652 0086 C023     	 mov r3,#192
 2653 0088 1B02     	 lsl r3,r3,#8
 2654 008a 101C     	 mov r0,r2
 2655 008c 191C     	 mov r1,r3
 2656 008e FFF7FEFF 	 bl XMC_USIC_CH_EnableEvent
 2657              	.L116:
1070:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1071:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* Call the transmit, to receive the data synchronously */
1072:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_Transmit(handle, runtime_handle->tx_data, runtime_handle->tx_data_count);
 2658              	 .loc 3 1072 0
 2659 0092 3B69     	 ldr r3,[r7,#16]
 2660 0094 9A69     	 ldr r2,[r3,#24]
 2661 0096 3B69     	 ldr r3,[r7,#16]
 2662 0098 5B68     	 ldr r3,[r3,#4]
 2663 009a 0F21     	 mov r1,#15
 2664 009c 7C18     	 add r4,r7,r1
 2665 009e 7968     	 ldr r1,[r7,#4]
 2666 00a0 081C     	 mov r0,r1
 2667 00a2 111C     	 mov r1,r2
 2668 00a4 1A1C     	 mov r2,r3
 2669 00a6 FFF7FEFF 	 bl SPI_MASTER_Transmit
 2670 00aa 031C     	 mov r3,r0
 2671 00ac 2370     	 strb r3,[r4]
1073:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1074:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 2672              	 .loc 3 1074 0
 2673 00ae 0F23     	 mov r3,#15
 2674 00b0 FB18     	 add r3,r7,r3
 2675 00b2 1B78     	 ldrb r3,[r3]
1075:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 2676              	 .loc 3 1075 0
 2677 00b4 181C     	 mov r0,r3
 2678 00b6 BD46     	 mov sp,r7
 2679 00b8 07B0     	 add sp,sp,#28
 2680              	 
 2681 00ba 90BD     	 pop {r4,r7,pc}
 2682              	 .cfi_endproc
 2683              	.LFE212:
 2685              	 .section .text.SPI_MASTER_lReceiveHandler,"ax",%progbits
 2686              	 .align 2
 2687              	 .global SPI_MASTER_lReceiveHandler
 2688              	 .code 16
 2689              	 .thumb_func
 2691              	SPI_MASTER_lReceiveHandler:
 2692              	.LFB213:
1076:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1077:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
1078:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Receive interrupt handler for the APP.
1079:../Dave/Generated/SPI_MASTER/spi_master.c ****  * This is a common interrupt handling function for different instances of the SPI_MASTER APP.
1080:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
1081:../Dave/Generated/SPI_MASTER/spi_master.c **** void SPI_MASTER_lReceiveHandler(const SPI_MASTER_t * const handle)
1082:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 2693              	 .loc 3 1082 0
 2694              	 .cfi_startproc
 2695 0000 90B5     	 push {r4,r7,lr}
 2696              	.LCFI111:
 2697              	 .cfi_def_cfa_offset 12
 2698              	 .cfi_offset 4,-12
 2699              	 .cfi_offset 7,-8
 2700              	 .cfi_offset 14,-4
 2701 0002 87B0     	 sub sp,sp,#28
 2702              	.LCFI112:
 2703              	 .cfi_def_cfa_offset 40
 2704 0004 00AF     	 add r7,sp,#0
 2705              	.LCFI113:
 2706              	 .cfi_def_cfa_register 7
 2707 0006 7860     	 str r0,[r7,#4]
1083:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint16_t data; /* Data to be loaded into the TBUF */
1084:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t bytes_per_word = SPI_MASTER_1_BYTE_PER_WORD; /* This is to support the word length 8 and
 2708              	 .loc 3 1084 0
 2709 0008 0123     	 mov r3,#1
 2710 000a 7B61     	 str r3,[r7,#20]
1085:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle = handle->runtime;
 2711              	 .loc 3 1085 0
 2712 000c 7B68     	 ldr r3,[r7,#4]
 2713 000e 9B68     	 ldr r3,[r3,#8]
 2714 0010 3B61     	 str r3,[r7,#16]
1086:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1087:../Dave/Generated/SPI_MASTER/spi_master.c ****   data = 0U;
 2715              	 .loc 3 1087 0
 2716 0012 0E23     	 mov r3,#14
 2717 0014 FB18     	 add r3,r7,r3
 2718 0016 0022     	 mov r2,#0
 2719 0018 1A80     	 strh r2,[r3]
1088:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1089:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->runtime->word_length > SPI_MASTER_WORD_LENGTH_8_BIT)
 2720              	 .loc 3 1089 0
 2721 001a 7B68     	 ldr r3,[r7,#4]
 2722 001c 9B68     	 ldr r3,[r3,#8]
 2723 001e 1B68     	 ldr r3,[r3]
 2724 0020 082B     	 cmp r3,#8
 2725 0022 01D9     	 bls .L119
1090:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1091:../Dave/Generated/SPI_MASTER/spi_master.c ****     bytes_per_word = SPI_MASTER_2_BYTES_PER_WORD; /* Word length is 16-bits */
 2726              	 .loc 3 1091 0
 2727 0024 0223     	 mov r3,#2
 2728 0026 7B61     	 str r3,[r7,#20]
 2729              	.L119:
1092:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1093:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1094:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((uint32_t)handle->config->rx_fifo_size > 0U)
 2730              	 .loc 3 1094 0
 2731 0028 7B68     	 ldr r3,[r7,#4]
 2732 002a 5B68     	 ldr r3,[r3,#4]
 2733 002c 7D22     	 mov r2,#125
 2734 002e 9B5C     	 ldrb r3,[r3,r2]
 2735 0030 002B     	 cmp r3,#0
 2736 0032 20D0     	 beq .L120
1095:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1096:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* read the FIFO */
1097:../Dave/Generated/SPI_MASTER/spi_master.c ****     SPI_MASTER_lFIFORead(handle, bytes_per_word);
 2737              	 .loc 3 1097 0
 2738 0034 7A68     	 ldr r2,[r7,#4]
 2739 0036 7B69     	 ldr r3,[r7,#20]
 2740 0038 101C     	 mov r0,r2
 2741 003a 191C     	 mov r1,r3
 2742 003c FFF7FEFF 	 bl SPI_MASTER_lFIFORead
1098:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Reconfigure the RXFIFO trigger limit based on pending receive bytes */
1099:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((runtime_handle->rx_data_count - runtime_handle->rx_data_index) <= (1UL << (handle->config-
 2743              	 .loc 3 1099 0
 2744 0040 3B69     	 ldr r3,[r7,#16]
 2745 0042 DA68     	 ldr r2,[r3,#12]
 2746 0044 3B69     	 ldr r3,[r7,#16]
 2747 0046 1B69     	 ldr r3,[r3,#16]
 2748 0048 D21A     	 sub r2,r2,r3
 2749 004a 7B68     	 ldr r3,[r7,#4]
 2750 004c 5B68     	 ldr r3,[r3,#4]
 2751 004e 7D21     	 mov r1,#125
 2752 0050 5B5C     	 ldrb r3,[r3,r1]
 2753 0052 013B     	 sub r3,r3,#1
 2754 0054 0121     	 mov r1,#1
 2755 0056 9940     	 lsl r1,r1,r3
 2756 0058 0B1C     	 mov r3,r1
 2757 005a 9A42     	 cmp r2,r3
 2758 005c 00D9     	 bls .LCB2482
 2759 005e B0E0     	 b .L118
 2760              	.LCB2482:
1100:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1101:../Dave/Generated/SPI_MASTER/spi_master.c ****       SPI_MASTER_lReconfigureRxFIFO(handle, (uint32_t)(runtime_handle->rx_data_count - runtime_hand
 2761              	 .loc 3 1101 0
 2762 0060 3B69     	 ldr r3,[r7,#16]
 2763 0062 DA68     	 ldr r2,[r3,#12]
 2764 0064 3B69     	 ldr r3,[r7,#16]
 2765 0066 1B69     	 ldr r3,[r3,#16]
 2766 0068 D31A     	 sub r3,r2,r3
 2767 006a 7A68     	 ldr r2,[r7,#4]
 2768 006c 101C     	 mov r0,r2
 2769 006e 191C     	 mov r1,r3
 2770 0070 FFF7FEFF 	 bl SPI_MASTER_lReconfigureRxFIFO
 2771 0074 A5E0     	 b .L118
 2772              	.L120:
1102:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1103:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1104:../Dave/Generated/SPI_MASTER/spi_master.c ****   else
1105:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1106:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* When RxFIFO is disabled */
1107:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((XMC_USIC_CH_GetReceiveBufferStatus(handle->channel) & (uint32_t)XMC_USIC_CH_RBUF_STATUS_DA
 2773              	 .loc 3 1107 0
 2774 0076 7B68     	 ldr r3,[r7,#4]
 2775 0078 1B68     	 ldr r3,[r3]
 2776 007a 181C     	 mov r0,r3
 2777 007c FFF7FEFF 	 bl XMC_USIC_CH_GetReceiveBufferStatus
 2778 0080 021C     	 mov r2,r0
 2779 0082 8023     	 mov r3,#128
 2780 0084 9B01     	 lsl r3,r3,#6
 2781 0086 1340     	 and r3,r2
 2782 0088 2ED0     	 beq .L123
1108:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1109:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (runtime_handle->rx_data_index < runtime_handle->rx_data_count)
 2783              	 .loc 3 1109 0
 2784 008a 3B69     	 ldr r3,[r7,#16]
 2785 008c 1A69     	 ldr r2,[r3,#16]
 2786 008e 3B69     	 ldr r3,[r7,#16]
 2787 0090 DB68     	 ldr r3,[r3,#12]
 2788 0092 9A42     	 cmp r2,r3
 2789 0094 28D2     	 bcs .L123
1110:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1111:../Dave/Generated/SPI_MASTER/spi_master.c ****         data = XMC_SPI_CH_GetReceivedData(handle->channel);
 2790              	 .loc 3 1111 0
 2791 0096 7B68     	 ldr r3,[r7,#4]
 2792 0098 1B68     	 ldr r3,[r3]
 2793 009a 0E22     	 mov r2,#14
 2794 009c BC18     	 add r4,r7,r2
 2795 009e 181C     	 mov r0,r3
 2796 00a0 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 2797 00a4 031C     	 mov r3,r0
 2798 00a6 2380     	 strh r3,[r4]
1112:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1113:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data[runtime_handle->rx_data_index] = (uint8_t)data;
 2799              	 .loc 3 1113 0
 2800 00a8 3B69     	 ldr r3,[r7,#16]
 2801 00aa 5A69     	 ldr r2,[r3,#20]
 2802 00ac 3B69     	 ldr r3,[r7,#16]
 2803 00ae 1B69     	 ldr r3,[r3,#16]
 2804 00b0 D318     	 add r3,r2,r3
 2805 00b2 0E22     	 mov r2,#14
 2806 00b4 BA18     	 add r2,r7,r2
 2807 00b6 1288     	 ldrh r2,[r2]
 2808 00b8 D2B2     	 uxtb r2,r2
 2809 00ba 1A70     	 strb r2,[r3]
1114:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1115:../Dave/Generated/SPI_MASTER/spi_master.c ****         if (bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
 2810              	 .loc 3 1115 0
 2811 00bc 7B69     	 ldr r3,[r7,#20]
 2812 00be 022B     	 cmp r3,#2
 2813 00c0 0CD1     	 bne .L124
1116:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
1117:../Dave/Generated/SPI_MASTER/spi_master.c ****           runtime_handle->rx_data[runtime_handle->rx_data_index + 1U] = (uint8_t)((uint16_t)data >>
 2814              	 .loc 3 1117 0
 2815 00c2 3B69     	 ldr r3,[r7,#16]
 2816 00c4 5A69     	 ldr r2,[r3,#20]
 2817 00c6 3B69     	 ldr r3,[r7,#16]
 2818 00c8 1B69     	 ldr r3,[r3,#16]
 2819 00ca 0133     	 add r3,r3,#1
 2820 00cc D318     	 add r3,r2,r3
 2821 00ce 0E22     	 mov r2,#14
 2822 00d0 BA18     	 add r2,r7,r2
 2823 00d2 1288     	 ldrh r2,[r2]
 2824 00d4 120A     	 lsr r2,r2,#8
 2825 00d6 92B2     	 uxth r2,r2
 2826 00d8 D2B2     	 uxtb r2,r2
 2827 00da 1A70     	 strb r2,[r3]
 2828              	.L124:
1118:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
1119:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1120:../Dave/Generated/SPI_MASTER/spi_master.c ****         (runtime_handle->rx_data_index)+= bytes_per_word;
 2829              	 .loc 3 1120 0
 2830 00dc 3B69     	 ldr r3,[r7,#16]
 2831 00de 1A69     	 ldr r2,[r3,#16]
 2832 00e0 7B69     	 ldr r3,[r7,#20]
 2833 00e2 D218     	 add r2,r2,r3
 2834 00e4 3B69     	 ldr r3,[r7,#16]
 2835 00e6 1A61     	 str r2,[r3,#16]
 2836              	.L123:
1121:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1122:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1123:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((XMC_USIC_CH_GetReceiveBufferStatus(handle->channel) & (uint32_t)XMC_USIC_CH_RBUF_STATUS_DA
 2837              	 .loc 3 1123 0
 2838 00e8 7B68     	 ldr r3,[r7,#4]
 2839 00ea 1B68     	 ldr r3,[r3]
 2840 00ec 181C     	 mov r0,r3
 2841 00ee FFF7FEFF 	 bl XMC_USIC_CH_GetReceiveBufferStatus
 2842 00f2 021C     	 mov r2,r0
 2843 00f4 8023     	 mov r3,#128
 2844 00f6 DB01     	 lsl r3,r3,#7
 2845 00f8 1340     	 and r3,r2
 2846 00fa 2ED0     	 beq .L125
1124:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1125:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (runtime_handle->rx_data_index < runtime_handle->rx_data_count)
 2847              	 .loc 3 1125 0
 2848 00fc 3B69     	 ldr r3,[r7,#16]
 2849 00fe 1A69     	 ldr r2,[r3,#16]
 2850 0100 3B69     	 ldr r3,[r7,#16]
 2851 0102 DB68     	 ldr r3,[r3,#12]
 2852 0104 9A42     	 cmp r2,r3
 2853 0106 28D2     	 bcs .L125
1126:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1127:../Dave/Generated/SPI_MASTER/spi_master.c ****         data = XMC_SPI_CH_GetReceivedData(handle->channel);
 2854              	 .loc 3 1127 0
 2855 0108 7B68     	 ldr r3,[r7,#4]
 2856 010a 1B68     	 ldr r3,[r3]
 2857 010c 0E22     	 mov r2,#14
 2858 010e BC18     	 add r4,r7,r2
 2859 0110 181C     	 mov r0,r3
 2860 0112 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 2861 0116 031C     	 mov r3,r0
 2862 0118 2380     	 strh r3,[r4]
1128:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1129:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data[runtime_handle->rx_data_index] = (uint8_t)data;
 2863              	 .loc 3 1129 0
 2864 011a 3B69     	 ldr r3,[r7,#16]
 2865 011c 5A69     	 ldr r2,[r3,#20]
 2866 011e 3B69     	 ldr r3,[r7,#16]
 2867 0120 1B69     	 ldr r3,[r3,#16]
 2868 0122 D318     	 add r3,r2,r3
 2869 0124 0E22     	 mov r2,#14
 2870 0126 BA18     	 add r2,r7,r2
 2871 0128 1288     	 ldrh r2,[r2]
 2872 012a D2B2     	 uxtb r2,r2
 2873 012c 1A70     	 strb r2,[r3]
1130:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1131:../Dave/Generated/SPI_MASTER/spi_master.c ****         if (bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
 2874              	 .loc 3 1131 0
 2875 012e 7B69     	 ldr r3,[r7,#20]
 2876 0130 022B     	 cmp r3,#2
 2877 0132 0CD1     	 bne .L126
1132:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
1133:../Dave/Generated/SPI_MASTER/spi_master.c ****           runtime_handle->rx_data[runtime_handle->rx_data_index + 1U] = (uint8_t)((uint16_t)data >>
 2878              	 .loc 3 1133 0
 2879 0134 3B69     	 ldr r3,[r7,#16]
 2880 0136 5A69     	 ldr r2,[r3,#20]
 2881 0138 3B69     	 ldr r3,[r7,#16]
 2882 013a 1B69     	 ldr r3,[r3,#16]
 2883 013c 0133     	 add r3,r3,#1
 2884 013e D318     	 add r3,r2,r3
 2885 0140 0E22     	 mov r2,#14
 2886 0142 BA18     	 add r2,r7,r2
 2887 0144 1288     	 ldrh r2,[r2]
 2888 0146 120A     	 lsr r2,r2,#8
 2889 0148 92B2     	 uxth r2,r2
 2890 014a D2B2     	 uxtb r2,r2
 2891 014c 1A70     	 strb r2,[r3]
 2892              	.L126:
1134:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
1135:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1136:../Dave/Generated/SPI_MASTER/spi_master.c ****         (runtime_handle->rx_data_index)+= bytes_per_word;
 2893              	 .loc 3 1136 0
 2894 014e 3B69     	 ldr r3,[r7,#16]
 2895 0150 1A69     	 ldr r2,[r3,#16]
 2896 0152 7B69     	 ldr r3,[r7,#20]
 2897 0154 D218     	 add r2,r2,r3
 2898 0156 3B69     	 ldr r3,[r7,#16]
 2899 0158 1A61     	 str r2,[r3,#16]
 2900              	.L125:
1137:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1138:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1139:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1140:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (runtime_handle->rx_data_index == runtime_handle->rx_data_count)
 2901              	 .loc 3 1140 0
 2902 015a 3B69     	 ldr r3,[r7,#16]
 2903 015c 1A69     	 ldr r2,[r3,#16]
 2904 015e 3B69     	 ldr r3,[r7,#16]
 2905 0160 DB68     	 ldr r3,[r3,#12]
 2906 0162 9A42     	 cmp r2,r3
 2907 0164 2DD1     	 bne .L118
1141:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1142:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Disable both standard receive and alternative receive FIFO events */
1143:../Dave/Generated/SPI_MASTER/spi_master.c ****       if ((uint32_t)handle->config->rx_fifo_size > 0U)
 2908              	 .loc 3 1143 0
 2909 0166 7B68     	 ldr r3,[r7,#4]
 2910 0168 5B68     	 ldr r3,[r3,#4]
 2911 016a 7D22     	 mov r2,#125
 2912 016c 9B5C     	 ldrb r3,[r3,r2]
 2913 016e 002B     	 cmp r3,#0
 2914 0170 08D0     	 beq .L127
1144:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1145:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Enable the receive FIFO events */
1146:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel,(uint32_t)SPI_MASTER_FIFO_RECEIVE_EVENT);
 2915              	 .loc 3 1146 0
 2916 0172 7B68     	 ldr r3,[r7,#4]
 2917 0174 1A68     	 ldr r2,[r3]
 2918 0176 C023     	 mov r3,#192
 2919 0178 DB05     	 lsl r3,r3,#23
 2920 017a 101C     	 mov r0,r2
 2921 017c 191C     	 mov r1,r3
 2922 017e FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_DisableEvent
 2923 0182 07E0     	 b .L128
 2924              	.L127:
1147:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1148:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
1149:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1150:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_SPI_CH_DisableEvent(handle->channel, (uint32_t)SPI_MASTER_RECEIVE_EVENT);
 2925              	 .loc 3 1150 0
 2926 0184 7B68     	 ldr r3,[r7,#4]
 2927 0186 1A68     	 ldr r2,[r3]
 2928 0188 C023     	 mov r3,#192
 2929 018a 1B02     	 lsl r3,r3,#8
 2930 018c 101C     	 mov r0,r2
 2931 018e 191C     	 mov r1,r3
 2932 0190 FFF7FEFF 	 bl XMC_SPI_CH_DisableEvent
 2933              	.L128:
1151:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1152:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Reception complete */
1153:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_busy = false;
 2934              	 .loc 3 1153 0
 2935 0194 3B69     	 ldr r3,[r7,#16]
 2936 0196 0022     	 mov r2,#0
 2937 0198 DA77     	 strb r2,[r3,#31]
1154:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data_dummy = false;
 2938              	 .loc 3 1154 0
 2939 019a 3B69     	 ldr r3,[r7,#16]
 2940 019c 2122     	 mov r2,#33
 2941 019e 0021     	 mov r1,#0
 2942 01a0 9954     	 strb r1,[r3,r2]
1155:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_data_dummy = true;
 2943              	 .loc 3 1155 0
 2944 01a2 3B69     	 ldr r3,[r7,#16]
 2945 01a4 2222     	 mov r2,#34
 2946 01a6 0121     	 mov r1,#1
 2947 01a8 9954     	 strb r1,[r3,r2]
1156:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_data = NULL;
 2948              	 .loc 3 1156 0
 2949 01aa 3B69     	 ldr r3,[r7,#16]
 2950 01ac 0022     	 mov r2,#0
 2951 01ae 5A61     	 str r2,[r3,#20]
1157:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1158:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (handle->config->rx_cbhandler != NULL)
 2952              	 .loc 3 1158 0
 2953 01b0 7B68     	 ldr r3,[r7,#4]
 2954 01b2 5B68     	 ldr r3,[r3,#4]
 2955 01b4 5B6F     	 ldr r3,[r3,#116]
 2956 01b6 002B     	 cmp r3,#0
 2957 01b8 03D0     	 beq .L118
1159:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1160:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Execute the 'End of reception' callback function */
1161:../Dave/Generated/SPI_MASTER/spi_master.c ****         handle->config->rx_cbhandler();
 2958              	 .loc 3 1161 0
 2959 01ba 7B68     	 ldr r3,[r7,#4]
 2960 01bc 5B68     	 ldr r3,[r3,#4]
 2961 01be 5B6F     	 ldr r3,[r3,#116]
 2962 01c0 9847     	 blx r3
 2963              	.L118:
1162:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1163:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1164:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1165:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 2964              	 .loc 3 1165 0
 2965 01c2 BD46     	 mov sp,r7
 2966 01c4 07B0     	 add sp,sp,#28
 2967              	 
 2968 01c6 90BD     	 pop {r4,r7,pc}
 2969              	 .cfi_endproc
 2970              	.LFE213:
 2972              	 .section .text.SPI_MASTER_lFIFORead,"ax",%progbits
 2973              	 .align 2
 2974              	 .code 16
 2975              	 .thumb_func
 2977              	SPI_MASTER_lFIFORead:
 2978              	.LFB214:
1166:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1167:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
1168:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Read the data from FIFO until it becomes empty.
1169:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
1170:../Dave/Generated/SPI_MASTER/spi_master.c **** void SPI_MASTER_lFIFORead(const SPI_MASTER_t * const handle, const uint32_t bytes_per_word)
1171:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 2979              	 .loc 3 1171 0
 2980              	 .cfi_startproc
 2981 0000 90B5     	 push {r4,r7,lr}
 2982              	.LCFI114:
 2983              	 .cfi_def_cfa_offset 12
 2984              	 .cfi_offset 4,-12
 2985              	 .cfi_offset 7,-8
 2986              	 .cfi_offset 14,-4
 2987 0002 85B0     	 sub sp,sp,#20
 2988              	.LCFI115:
 2989              	 .cfi_def_cfa_offset 32
 2990 0004 00AF     	 add r7,sp,#0
 2991              	.LCFI116:
 2992              	 .cfi_def_cfa_register 7
 2993 0006 7860     	 str r0,[r7,#4]
 2994 0008 3960     	 str r1,[r7]
1172:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
1173:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint16_t data;
1174:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1175:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
 2995              	 .loc 3 1175 0
 2996 000a 7B68     	 ldr r3,[r7,#4]
 2997 000c 9B68     	 ldr r3,[r3,#8]
 2998 000e FB60     	 str r3,[r7,#12]
1176:../Dave/Generated/SPI_MASTER/spi_master.c ****   data = 0U;
 2999              	 .loc 3 1176 0
 3000 0010 0A23     	 mov r3,#10
 3001 0012 FB18     	 add r3,r7,r3
 3002 0014 0022     	 mov r2,#0
 3003 0016 1A80     	 strh r2,[r3]
1177:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1178:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* When Receive FIFO is enabled*/
1179:../Dave/Generated/SPI_MASTER/spi_master.c ****   while (XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel) == false)
 3004              	 .loc 3 1179 0
 3005 0018 4EE0     	 b .L130
 3006              	.L135:
1180:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1181:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (runtime_handle->rx_data_index < runtime_handle->rx_data_count)
 3007              	 .loc 3 1181 0
 3008 001a FB68     	 ldr r3,[r7,#12]
 3009 001c 1A69     	 ldr r2,[r3,#16]
 3010 001e FB68     	 ldr r3,[r7,#12]
 3011 0020 DB68     	 ldr r3,[r3,#12]
 3012 0022 9A42     	 cmp r2,r3
 3013 0024 28D2     	 bcs .L131
1182:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1183:../Dave/Generated/SPI_MASTER/spi_master.c ****       data = XMC_SPI_CH_GetReceivedData(handle->channel);
 3014              	 .loc 3 1183 0
 3015 0026 7B68     	 ldr r3,[r7,#4]
 3016 0028 1B68     	 ldr r3,[r3]
 3017 002a 0A22     	 mov r2,#10
 3018 002c BC18     	 add r4,r7,r2
 3019 002e 181C     	 mov r0,r3
 3020 0030 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 3021 0034 031C     	 mov r3,r0
 3022 0036 2380     	 strh r3,[r4]
1184:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_data[runtime_handle->rx_data_index] = (uint8_t)data;
 3023              	 .loc 3 1184 0
 3024 0038 FB68     	 ldr r3,[r7,#12]
 3025 003a 5A69     	 ldr r2,[r3,#20]
 3026 003c FB68     	 ldr r3,[r7,#12]
 3027 003e 1B69     	 ldr r3,[r3,#16]
 3028 0040 D318     	 add r3,r2,r3
 3029 0042 0A22     	 mov r2,#10
 3030 0044 BA18     	 add r2,r7,r2
 3031 0046 1288     	 ldrh r2,[r2]
 3032 0048 D2B2     	 uxtb r2,r2
 3033 004a 1A70     	 strb r2,[r3]
1185:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1186:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
 3034              	 .loc 3 1186 0
 3035 004c 3B68     	 ldr r3,[r7]
 3036 004e 022B     	 cmp r3,#2
 3037 0050 0CD1     	 bne .L132
1187:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1188:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data[runtime_handle->rx_data_index + 1U] = (uint8_t)((uint16_t)data >> 8
 3038              	 .loc 3 1188 0
 3039 0052 FB68     	 ldr r3,[r7,#12]
 3040 0054 5A69     	 ldr r2,[r3,#20]
 3041 0056 FB68     	 ldr r3,[r7,#12]
 3042 0058 1B69     	 ldr r3,[r3,#16]
 3043 005a 0133     	 add r3,r3,#1
 3044 005c D318     	 add r3,r2,r3
 3045 005e 0A22     	 mov r2,#10
 3046 0060 BA18     	 add r2,r7,r2
 3047 0062 1288     	 ldrh r2,[r2]
 3048 0064 120A     	 lsr r2,r2,#8
 3049 0066 92B2     	 uxth r2,r2
 3050 0068 D2B2     	 uxtb r2,r2
 3051 006a 1A70     	 strb r2,[r3]
 3052              	.L132:
1189:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1190:../Dave/Generated/SPI_MASTER/spi_master.c ****       (runtime_handle->rx_data_index)+= bytes_per_word;
 3053              	 .loc 3 1190 0
 3054 006c FB68     	 ldr r3,[r7,#12]
 3055 006e 1A69     	 ldr r2,[r3,#16]
 3056 0070 3B68     	 ldr r3,[r7]
 3057 0072 D218     	 add r2,r2,r3
 3058 0074 FB68     	 ldr r3,[r7,#12]
 3059 0076 1A61     	 str r2,[r3,#16]
 3060              	.L131:
1191:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1192:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1193:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (runtime_handle->rx_data_index == runtime_handle->rx_data_count)
 3061              	 .loc 3 1193 0
 3062 0078 FB68     	 ldr r3,[r7,#12]
 3063 007a 1A69     	 ldr r2,[r3,#16]
 3064 007c FB68     	 ldr r3,[r7,#12]
 3065 007e DB68     	 ldr r3,[r3,#12]
 3066 0080 9A42     	 cmp r2,r3
 3067 0082 19D1     	 bne .L130
1194:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1195:../Dave/Generated/SPI_MASTER/spi_master.c ****       /*Reception complete*/
1196:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_busy = false;
 3068              	 .loc 3 1196 0
 3069 0084 FB68     	 ldr r3,[r7,#12]
 3070 0086 0022     	 mov r2,#0
 3071 0088 DA77     	 strb r2,[r3,#31]
1197:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->tx_data_dummy = false;
 3072              	 .loc 3 1197 0
 3073 008a FB68     	 ldr r3,[r7,#12]
 3074 008c 2122     	 mov r2,#33
 3075 008e 0021     	 mov r1,#0
 3076 0090 9954     	 strb r1,[r3,r2]
1198:../Dave/Generated/SPI_MASTER/spi_master.c ****       /*Disable both standard receive and alternative receive FIFO events*/
1199:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel,(uint32_t)SPI_MASTER_FIFO_RECEIVE_EVENT);
 3077              	 .loc 3 1199 0
 3078 0092 7B68     	 ldr r3,[r7,#4]
 3079 0094 1A68     	 ldr r2,[r3]
 3080 0096 C023     	 mov r3,#192
 3081 0098 DB05     	 lsl r3,r3,#23
 3082 009a 101C     	 mov r0,r2
 3083 009c 191C     	 mov r1,r3
 3084 009e FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_DisableEvent
1200:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (handle->config->rx_cbhandler != NULL)
 3085              	 .loc 3 1200 0
 3086 00a2 7B68     	 ldr r3,[r7,#4]
 3087 00a4 5B68     	 ldr r3,[r3,#4]
 3088 00a6 5B6F     	 ldr r3,[r3,#116]
 3089 00a8 002B     	 cmp r3,#0
 3090 00aa 04D0     	 beq .L133
1201:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1202:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* Execute the 'End of reception' callback function */
1203:../Dave/Generated/SPI_MASTER/spi_master.c ****         handle->config->rx_cbhandler();
 3091              	 .loc 3 1203 0
 3092 00ac 7B68     	 ldr r3,[r7,#4]
 3093 00ae 5B68     	 ldr r3,[r3,#4]
 3094 00b0 5B6F     	 ldr r3,[r3,#116]
 3095 00b2 9847     	 blx r3
1204:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1205:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3096              	 .loc 3 1205 0
 3097 00b4 0CE0     	 b .L129
 3098              	.L133:
 3099 00b6 0BE0     	 b .L129
 3100              	.L130:
1179:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 3101              	 .loc 3 1179 0
 3102 00b8 7B68     	 ldr r3,[r7,#4]
 3103 00ba 1B68     	 ldr r3,[r3]
 3104 00bc 181C     	 mov r0,r3
 3105 00be FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_IsEmpty
 3106 00c2 031C     	 mov r3,r0
 3107 00c4 1A1C     	 mov r2,r3
 3108 00c6 0123     	 mov r3,#1
 3109 00c8 5340     	 eor r3,r2
 3110 00ca DBB2     	 uxtb r3,r3
 3111 00cc 002B     	 cmp r3,#0
 3112 00ce A4D1     	 bne .L135
 3113              	.L129:
1206:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1207:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1208:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 3114              	 .loc 3 1208 0
 3115 00d0 BD46     	 mov sp,r7
 3116 00d2 05B0     	 add sp,sp,#20
 3117              	 
 3118 00d4 90BD     	 pop {r4,r7,pc}
 3119              	 .cfi_endproc
 3120              	.LFE214:
 3122 00d6 C046     	 .section .text.SPI_MASTER_lReconfigureRxFIFO,"ax",%progbits
 3123              	 .align 2
 3124              	 .code 16
 3125              	 .thumb_func
 3127              	SPI_MASTER_lReconfigureRxFIFO:
 3128              	.LFB215:
1209:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1210:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
1211:../Dave/Generated/SPI_MASTER/spi_master.c ****  * This function configures the FIFO settings
1212:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
1213:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lReconfigureRxFIFO(const SPI_MASTER_t * const handle, uint32_t data_size)
1214:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 3129              	 .loc 3 1214 0
 3130              	 .cfi_startproc
 3131 0000 80B5     	 push {r7,lr}
 3132              	.LCFI117:
 3133              	 .cfi_def_cfa_offset 8
 3134              	 .cfi_offset 7,-8
 3135              	 .cfi_offset 14,-4
 3136 0002 84B0     	 sub sp,sp,#16
 3137              	.LCFI118:
 3138              	 .cfi_def_cfa_offset 24
 3139 0004 00AF     	 add r7,sp,#0
 3140              	.LCFI119:
 3141              	 .cfi_def_cfa_register 7
 3142 0006 7860     	 str r0,[r7,#4]
 3143 0008 3960     	 str r1,[r7]
1215:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t fifo_size;
1216:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t ret_limit_val;
1217:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1218:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (((uint32_t)handle->config->rx_fifo_size > 0U) && (data_size > 0U))
 3144              	 .loc 3 1218 0
 3145 000a 7B68     	 ldr r3,[r7,#4]
 3146 000c 5B68     	 ldr r3,[r3,#4]
 3147 000e 7D22     	 mov r2,#125
 3148 0010 9B5C     	 ldrb r3,[r3,r2]
 3149 0012 002B     	 cmp r3,#0
 3150 0014 29D0     	 beq .L136
 3151              	 .loc 3 1218 0 is_stmt 0 discriminator 1
 3152 0016 3B68     	 ldr r3,[r7]
 3153 0018 002B     	 cmp r3,#0
 3154 001a 26D0     	 beq .L136
1219:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1220:../Dave/Generated/SPI_MASTER/spi_master.c **** 	fifo_size = 1UL << (handle->config->rx_fifo_size - 1);
 3155              	 .loc 3 1220 0 is_stmt 1
 3156 001c 7B68     	 ldr r3,[r7,#4]
 3157 001e 5B68     	 ldr r3,[r3,#4]
 3158 0020 7D22     	 mov r2,#125
 3159 0022 9B5C     	 ldrb r3,[r3,r2]
 3160 0024 013B     	 sub r3,r3,#1
 3161 0026 0122     	 mov r2,#1
 3162 0028 9A40     	 lsl r2,r2,r3
 3163 002a 131C     	 mov r3,r2
 3164 002c BB60     	 str r3,[r7,#8]
1221:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1222:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (handle->runtime->word_length > SPI_MASTER_WORD_LENGTH_8_BIT)
 3165              	 .loc 3 1222 0
 3166 002e 7B68     	 ldr r3,[r7,#4]
 3167 0030 9B68     	 ldr r3,[r3,#8]
 3168 0032 1B68     	 ldr r3,[r3]
 3169 0034 082B     	 cmp r3,#8
 3170 0036 02D9     	 bls .L138
1223:../Dave/Generated/SPI_MASTER/spi_master.c **** 	{
1224:../Dave/Generated/SPI_MASTER/spi_master.c **** 	  /* Data size is divided by 2, to change the trigger limit according the word length */
1225:../Dave/Generated/SPI_MASTER/spi_master.c **** 	  data_size = (uint32_t)data_size >> 1U;
 3171              	 .loc 3 1225 0
 3172 0038 3B68     	 ldr r3,[r7]
 3173 003a 5B08     	 lsr r3,r3,#1
 3174 003c 3B60     	 str r3,[r7]
 3175              	.L138:
1226:../Dave/Generated/SPI_MASTER/spi_master.c **** 	}
1227:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1228:../Dave/Generated/SPI_MASTER/spi_master.c **** 	/*If data size is more than FIFO size, configure the limit to the FIFO size*/
1229:../Dave/Generated/SPI_MASTER/spi_master.c **** 	if (data_size <= fifo_size)
 3176              	 .loc 3 1229 0
 3177 003e 3A68     	 ldr r2,[r7]
 3178 0040 BB68     	 ldr r3,[r7,#8]
 3179 0042 9A42     	 cmp r2,r3
 3180 0044 03D8     	 bhi .L139
1230:../Dave/Generated/SPI_MASTER/spi_master.c **** 	{
1231:../Dave/Generated/SPI_MASTER/spi_master.c **** 	  ret_limit_val = data_size - 1U;
 3181              	 .loc 3 1231 0
 3182 0046 3B68     	 ldr r3,[r7]
 3183 0048 013B     	 sub r3,r3,#1
 3184 004a FB60     	 str r3,[r7,#12]
 3185 004c 01E0     	 b .L140
 3186              	.L139:
1232:../Dave/Generated/SPI_MASTER/spi_master.c **** 	}
1233:../Dave/Generated/SPI_MASTER/spi_master.c **** 	else
1234:../Dave/Generated/SPI_MASTER/spi_master.c **** 	{
1235:../Dave/Generated/SPI_MASTER/spi_master.c **** 	  ret_limit_val = fifo_size;
 3187              	 .loc 3 1235 0
 3188 004e BB68     	 ldr r3,[r7,#8]
 3189 0050 FB60     	 str r3,[r7,#12]
 3190              	.L140:
1236:../Dave/Generated/SPI_MASTER/spi_master.c **** 	}
1237:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1238:../Dave/Generated/SPI_MASTER/spi_master.c **** 	/*Set the limit value*/
1239:../Dave/Generated/SPI_MASTER/spi_master.c **** 	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, handle->config->rx_fifo_size, ret_limit_va
 3191              	 .loc 3 1239 0
 3192 0052 7B68     	 ldr r3,[r7,#4]
 3193 0054 1968     	 ldr r1,[r3]
 3194 0056 7B68     	 ldr r3,[r7,#4]
 3195 0058 5B68     	 ldr r3,[r3,#4]
 3196 005a 7D22     	 mov r2,#125
 3197 005c 9A5C     	 ldrb r2,[r3,r2]
 3198 005e FB68     	 ldr r3,[r7,#12]
 3199 0060 081C     	 mov r0,r1
 3200 0062 111C     	 mov r1,r2
 3201 0064 1A1C     	 mov r2,r3
 3202 0066 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 3203              	.L136:
1240:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1241:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 3204              	 .loc 3 1241 0
 3205 006a BD46     	 mov sp,r7
 3206 006c 04B0     	 add sp,sp,#16
 3207              	 
 3208 006e 80BD     	 pop {r7,pc}
 3209              	 .cfi_endproc
 3210              	.LFE215:
 3212              	 .section .text.SPI_MASTER_lStdRBUFFlush,"ax",%progbits
 3213              	 .align 2
 3214              	 .code 16
 3215              	 .thumb_func
 3217              	SPI_MASTER_lStdRBUFFlush:
 3218              	.LFB216:
1242:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
1243:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1244:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DIRECT_RECEIVE_MODE == 1U)
1245:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_lReceivePolling(const SPI_MASTER_t *const handle, uint32_t count)
1246:../Dave/Generated/SPI_MASTER/spi_master.c **** {
1247:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
1248:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t bytes_per_word = SPI_MASTER_1_BYTE_PER_WORD; /* This is to support the word length 8 and
1249:../Dave/Generated/SPI_MASTER/spi_master.c ****                                                            Specify the number of bytes for the conf
1250:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint16_t data;
1251:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1252:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
1253:../Dave/Generated/SPI_MASTER/spi_master.c ****   data = 0U;
1254:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->rx_data_index = 0U;
1255:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->tx_data_index = 0U;
1256:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1257:../Dave/Generated/SPI_MASTER/spi_master.c ****   if (handle->runtime->word_length > SPI_MASTER_WORD_LENGTH_8_BIT)
1258:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1259:../Dave/Generated/SPI_MASTER/spi_master.c ****     bytes_per_word = SPI_MASTER_2_BYTES_PER_WORD; /* Word length is 16-bits */
1260:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1261:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1262:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->rx_data_count = (uint32_t)count << (bytes_per_word - 1U);
1263:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1264:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_SPI_CH_SetTransmitMode(handle->channel, runtime_handle->spi_master_mode);
1265:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1266:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Check if FIFO is enabled */
1267:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((uint32_t)handle->config->rx_fifo_size > 0U)
1268:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1269:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Clear the receive FIFO */
1270:../Dave/Generated/SPI_MASTER/spi_master.c ****     XMC_USIC_CH_RXFIFO_Flush(handle->channel);
1271:../Dave/Generated/SPI_MASTER/spi_master.c ****     SPI_MASTER_lStdRBUFFlush(handle->channel);
1272:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1273:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (runtime_handle->tx_data_dummy == true)
1274:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1275:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_USIC_CH_TXFIFO_PutDataHPCMode(handle->channel, 0xFFFFU, (uint32_t)runtime_handle->spi_mas
1276:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1277:../Dave/Generated/SPI_MASTER/spi_master.c ****     else
1278:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1279:../Dave/Generated/SPI_MASTER/spi_master.c ****       if(bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
1280:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1281:../Dave/Generated/SPI_MASTER/spi_master.c ****         data = *((uint16_t*)&runtime_handle->tx_data[runtime_handle->tx_data_index]);
1282:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1283:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
1284:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1285:../Dave/Generated/SPI_MASTER/spi_master.c ****         data = runtime_handle->tx_data[runtime_handle->tx_data_index];
1286:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1287:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_USIC_CH_TXFIFO_PutDataHPCMode(handle->channel, data, (uint32_t)runtime_handle->spi_master
1288:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1289:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1290:../Dave/Generated/SPI_MASTER/spi_master.c ****     (runtime_handle->tx_data_index)+= bytes_per_word;
1291:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1292:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1293:../Dave/Generated/SPI_MASTER/spi_master.c ****     while (runtime_handle->tx_data_index < runtime_handle->rx_data_count)
1294:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1295:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (runtime_handle->tx_data_dummy == true)
1296:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1297:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_TXFIFO_PutDataHPCMode(handle->channel, 0xFFFFU, (uint32_t)runtime_handle->spi_m
1298:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1299:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
1300:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1301:../Dave/Generated/SPI_MASTER/spi_master.c ****         if(bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
1302:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
1303:../Dave/Generated/SPI_MASTER/spi_master.c ****           data = *((uint16_t*)&runtime_handle->tx_data[runtime_handle->tx_data_index]);
1304:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
1305:../Dave/Generated/SPI_MASTER/spi_master.c ****         else
1306:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
1307:../Dave/Generated/SPI_MASTER/spi_master.c ****           data = runtime_handle->tx_data[runtime_handle->tx_data_index];
1308:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
1309:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_TXFIFO_PutDataHPCMode(handle->channel, data, (uint32_t)runtime_handle->spi_mast
1310:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1311:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1312:../Dave/Generated/SPI_MASTER/spi_master.c ****       while(XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel) == true)
1313:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1314:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1315:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1316:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1317:../Dave/Generated/SPI_MASTER/spi_master.c ****       data = XMC_SPI_CH_GetReceivedData(handle->channel);
1318:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1319:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_data[runtime_handle->rx_data_index] = (uint8_t)data;
1320:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1321:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
1322:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1323:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data[runtime_handle->rx_data_index + 1U] = (uint8_t)((uint16_t)data >> 8
1324:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1325:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1326:../Dave/Generated/SPI_MASTER/spi_master.c ****       (runtime_handle->rx_data_index)+= bytes_per_word;
1327:../Dave/Generated/SPI_MASTER/spi_master.c ****       (runtime_handle->tx_data_index)+= bytes_per_word;
1328:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1329:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1330:../Dave/Generated/SPI_MASTER/spi_master.c ****     while(XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel) == true)
1331:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1332:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1333:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1334:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1335:../Dave/Generated/SPI_MASTER/spi_master.c ****     data = XMC_SPI_CH_GetReceivedData(handle->channel);
1336:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1337:../Dave/Generated/SPI_MASTER/spi_master.c ****     runtime_handle->rx_data[runtime_handle->rx_data_index] = (uint8_t)data;
1338:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1339:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
1340:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1341:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_data[runtime_handle->rx_data_index + 1U] = (uint8_t)((uint16_t)data >> 8);
1342:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1343:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1344:../Dave/Generated/SPI_MASTER/spi_master.c ****     XMC_USIC_CH_RXFIFO_ClearEvent(handle->channel, SPI_MASTER_FIFO_RECEIVE_INDICATION_FLAG);
1345:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1346:../Dave/Generated/SPI_MASTER/spi_master.c ****   else
1347:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1348:../Dave/Generated/SPI_MASTER/spi_master.c ****     /* Flush the RBUF0 and RBUF1 */
1349:../Dave/Generated/SPI_MASTER/spi_master.c ****     SPI_MASTER_lStdRBUFFlush(handle->channel);
1350:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1351:../Dave/Generated/SPI_MASTER/spi_master.c ****     while((uint32_t)XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == (uint32_t)XMC_USIC_CH_T
1352:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1353:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1354:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1355:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (runtime_handle->tx_data_dummy == true)
1356:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1357:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_USIC_CH_WriteToTBUFTCI(handle->channel, 0xFFFFU, (uint32_t)runtime_handle->spi_master_mod
1358:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1359:../Dave/Generated/SPI_MASTER/spi_master.c ****     else
1360:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1361:../Dave/Generated/SPI_MASTER/spi_master.c ****       if(bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
1362:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1363:../Dave/Generated/SPI_MASTER/spi_master.c ****         data = *((uint16_t*)&runtime_handle->tx_data[runtime_handle->tx_data_index]);
1364:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1365:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
1366:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1367:../Dave/Generated/SPI_MASTER/spi_master.c ****         data = runtime_handle->tx_data[runtime_handle->tx_data_index];
1368:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1369:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_USIC_CH_WriteToTBUFTCI(handle->channel, data, (uint32_t)runtime_handle->spi_master_mode);
1370:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1371:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1372:../Dave/Generated/SPI_MASTER/spi_master.c ****     (runtime_handle->tx_data_index)+= bytes_per_word;
1373:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1374:../Dave/Generated/SPI_MASTER/spi_master.c ****     while (runtime_handle->tx_data_index < runtime_handle->rx_data_count)
1375:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1376:../Dave/Generated/SPI_MASTER/spi_master.c ****       while((uint32_t)XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == (uint32_t)XMC_USIC_CH
1377:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1378:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1379:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1380:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1381:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (runtime_handle->tx_data_dummy == true)
1382:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1383:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_WriteToTBUFTCI(handle->channel, 0xFFFFU, (uint32_t)runtime_handle->spi_master_m
1384:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1385:../Dave/Generated/SPI_MASTER/spi_master.c ****       else
1386:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1387:../Dave/Generated/SPI_MASTER/spi_master.c ****         if(bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
1388:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
1389:../Dave/Generated/SPI_MASTER/spi_master.c ****           data = *((uint16_t*)&runtime_handle->tx_data[runtime_handle->tx_data_index]);
1390:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
1391:../Dave/Generated/SPI_MASTER/spi_master.c ****         else
1392:../Dave/Generated/SPI_MASTER/spi_master.c ****         {
1393:../Dave/Generated/SPI_MASTER/spi_master.c ****           data = runtime_handle->tx_data[runtime_handle->tx_data_index];
1394:../Dave/Generated/SPI_MASTER/spi_master.c ****         }
1395:../Dave/Generated/SPI_MASTER/spi_master.c ****         XMC_USIC_CH_WriteToTBUFTCI(handle->channel, data, (uint32_t)runtime_handle->spi_master_mode
1396:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1397:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1398:../Dave/Generated/SPI_MASTER/spi_master.c ****       while (XMC_USIC_CH_GetReceiveBufferStatus(handle->channel) == 0U)
1399:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1400:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1401:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1402:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1403:../Dave/Generated/SPI_MASTER/spi_master.c ****       data = XMC_SPI_CH_GetReceivedData(handle->channel);
1404:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1405:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_data[runtime_handle->rx_data_index] = (uint8_t)data;
1406:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1407:../Dave/Generated/SPI_MASTER/spi_master.c ****       if (bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
1408:../Dave/Generated/SPI_MASTER/spi_master.c ****       {
1409:../Dave/Generated/SPI_MASTER/spi_master.c ****         runtime_handle->rx_data[runtime_handle->rx_data_index + 1U] = (uint8_t)((uint16_t)data >> 8
1410:../Dave/Generated/SPI_MASTER/spi_master.c ****       }
1411:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1412:../Dave/Generated/SPI_MASTER/spi_master.c ****       (runtime_handle->rx_data_index)+= bytes_per_word;
1413:../Dave/Generated/SPI_MASTER/spi_master.c ****       (runtime_handle->tx_data_index)+= bytes_per_word;
1414:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1415:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_SPI_CH_ClearStatusFlag(handle->channel, SPI_MASTER_RECEIVE_INDICATION_FLAG);
1416:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1417:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1418:../Dave/Generated/SPI_MASTER/spi_master.c ****     while (XMC_USIC_CH_GetReceiveBufferStatus(handle->channel) == 0U)
1419:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1420:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1421:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1422:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1423:../Dave/Generated/SPI_MASTER/spi_master.c ****     data = XMC_SPI_CH_GetReceivedData(handle->channel);
1424:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1425:../Dave/Generated/SPI_MASTER/spi_master.c ****     runtime_handle->rx_data[runtime_handle->rx_data_index] = (uint8_t)data;
1426:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1427:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (bytes_per_word == SPI_MASTER_2_BYTES_PER_WORD)
1428:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1429:../Dave/Generated/SPI_MASTER/spi_master.c ****       runtime_handle->rx_data[runtime_handle->rx_data_index + 1U] = (uint8_t)((uint16_t)data >> 8);
1430:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1431:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1432:../Dave/Generated/SPI_MASTER/spi_master.c ****     XMC_SPI_CH_ClearStatusFlag(handle->channel, SPI_MASTER_RECEIVE_INDICATION_FLAG);
1433:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1434:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->rx_data_count = 0U;
1435:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->rx_data_index = 0U;
1436:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->tx_data_index = 0U;
1437:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1438:../Dave/Generated/SPI_MASTER/spi_master.c ****   return SPI_MASTER_STATUS_SUCCESS;
1439:../Dave/Generated/SPI_MASTER/spi_master.c **** }
1440:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
1441:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1442:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_DMA_RECEIVE_MODE == 1U)
1443:../Dave/Generated/SPI_MASTER/spi_master.c **** SPI_MASTER_STATUS_t SPI_MASTER_lReceiveDMA(const SPI_MASTER_t *const handle, uint32_t block_size)
1444:../Dave/Generated/SPI_MASTER/spi_master.c **** {
1445:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
1446:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_RUNTIME_t * runtime_handle;
1447:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1448:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle = handle->runtime;
1449:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->rx_data_index = 0U;
1450:../Dave/Generated/SPI_MASTER/spi_master.c ****   runtime_handle->rx_data_count = (uint32_t)block_size;
1451:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1452:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_lStdRBUFFlush(handle->channel);
1453:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1454:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_SPI_CH_EnableEvent(handle->channel, (uint32_t)SPI_MASTER_RECEIVE_EVENT);
1455:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1456:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_DMA_CH_SetBlockSize(handle->global_dma->dma, handle->dma_ch_rx_number, runtime_handle->rx_dat
1457:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1458:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_DMA_CH_SetSourceAddress(handle->global_dma->dma,
1459:../Dave/Generated/SPI_MASTER/spi_master.c ****                               handle->dma_ch_rx_number,
1460:../Dave/Generated/SPI_MASTER/spi_master.c ****                               (uint32_t)&(handle->channel->RBUF));
1461:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1462:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_DMA_CH_SetDestinationAddress(handle->global_dma->dma, handle->dma_ch_rx_number, (uint32_t)run
1463:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1464:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_SUCCESS;
1465:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1466:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_DMA_CH_Enable(handle->global_dma->dma, handle->dma_ch_rx_number);
1467:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1468:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* Call the transmit, to receive the data synchronously */
1469:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_Transmit(handle, runtime_handle->tx_data, runtime_handle->tx_data_count);
1470:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1471:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
1472:../Dave/Generated/SPI_MASTER/spi_master.c **** }
1473:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
1474:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1475:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
1476:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Clears the receive buffers
1477:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
1478:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lStdRBUFFlush(XMC_USIC_CH_t *const channel)
1479:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 3219              	 .loc 3 1479 0
 3220              	 .cfi_startproc
 3221 0000 80B5     	 push {r7,lr}
 3222              	.LCFI120:
 3223              	 .cfi_def_cfa_offset 8
 3224              	 .cfi_offset 7,-8
 3225              	 .cfi_offset 14,-4
 3226 0002 82B0     	 sub sp,sp,#8
 3227              	.LCFI121:
 3228              	 .cfi_def_cfa_offset 16
 3229 0004 00AF     	 add r7,sp,#0
 3230              	.LCFI122:
 3231              	 .cfi_def_cfa_register 7
 3232 0006 7860     	 str r0,[r7,#4]
1480:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* Clear RBF0 */
1481:../Dave/Generated/SPI_MASTER/spi_master.c ****   (void)XMC_SPI_CH_GetReceivedData(channel);
 3233              	 .loc 3 1481 0
 3234 0008 7B68     	 ldr r3,[r7,#4]
 3235 000a 181C     	 mov r0,r3
 3236 000c FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
1482:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* Clear RBF1 */
1483:../Dave/Generated/SPI_MASTER/spi_master.c ****   (void)XMC_SPI_CH_GetReceivedData(channel);
 3237              	 .loc 3 1483 0
 3238 0010 7B68     	 ldr r3,[r7,#4]
 3239 0012 181C     	 mov r0,r3
 3240 0014 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
1484:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 3241              	 .loc 3 1484 0
 3242 0018 BD46     	 mov sp,r7
 3243 001a 02B0     	 add sp,sp,#8
 3244              	 
 3245 001c 80BD     	 pop {r7,pc}
 3246              	 .cfi_endproc
 3247              	.LFE216:
 3249 001e C046     	 .section .text.SPI_MASTER_lPortConfig,"ax",%progbits
 3250              	 .align 2
 3251              	 .code 16
 3252              	 .thumb_func
 3254              	SPI_MASTER_lPortConfig:
 3255              	.LFB217:
1485:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1486:../Dave/Generated/SPI_MASTER/spi_master.c **** #if (SPI_MASTER_PARITY_ERROR == 1U)
1487:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
1488:../Dave/Generated/SPI_MASTER/spi_master.c ****  * Protocol interrupt handling function.
1489:../Dave/Generated/SPI_MASTER/spi_master.c ****  * The function is common for different instances of the SPI_MASTER APP.
1490:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
1491:../Dave/Generated/SPI_MASTER/spi_master.c **** void SPI_MASTER_lProtocolHandler(const SPI_MASTER_t * const handle)
1492:../Dave/Generated/SPI_MASTER/spi_master.c **** {
1493:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t psr_status;
1494:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1495:../Dave/Generated/SPI_MASTER/spi_master.c ****   psr_status = XMC_SPI_CH_GetStatusFlag(handle->channel);
1496:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1497:../Dave/Generated/SPI_MASTER/spi_master.c ****   /*Check for Parity detection error */
1498:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((handle->config->parity_cbhandler != NULL) && \
1499:../Dave/Generated/SPI_MASTER/spi_master.c ****                                            (psr_status & (uint32_t)XMC_SPI_CH_STATUS_FLAG_PARITY_ER
1500:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1501:../Dave/Generated/SPI_MASTER/spi_master.c ****     handle->config->parity_cbhandler();
1502:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1503:../Dave/Generated/SPI_MASTER/spi_master.c **** }
1504:../Dave/Generated/SPI_MASTER/spi_master.c **** #endif
1505:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1506:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
1507:../Dave/Generated/SPI_MASTER/spi_master.c ****  * This is used to reconfigure the registers while changing the SPI mode dynamically
1508:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
1509:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lPortConfig(const SPI_MASTER_t* handle)
1510:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 3256              	 .loc 3 1510 0
 3257              	 .cfi_startproc
 3258 0000 80B5     	 push {r7,lr}
 3259              	.LCFI123:
 3260              	 .cfi_def_cfa_offset 8
 3261              	 .cfi_offset 7,-8
 3262              	 .cfi_offset 14,-4
 3263 0002 82B0     	 sub sp,sp,#8
 3264              	.LCFI124:
 3265              	 .cfi_def_cfa_offset 16
 3266 0004 00AF     	 add r7,sp,#0
 3267              	.LCFI125:
 3268              	 .cfi_def_cfa_register 7
 3269 0006 7860     	 str r0,[r7,#4]
1511:../Dave/Generated/SPI_MASTER/spi_master.c ****   switch (handle->runtime->spi_master_mode)
 3270              	 .loc 3 1511 0
 3271 0008 7B68     	 ldr r3,[r7,#4]
 3272 000a 9B68     	 ldr r3,[r3,#8]
 3273 000c 1B7F     	 ldrb r3,[r3,#28]
 3274 000e DBB2     	 uxtb r3,r3
 3275 0010 052B     	 cmp r3,#5
 3276 0012 39D0     	 beq .L144
 3277 0014 02DC     	 bgt .L145
 3278 0016 002B     	 cmp r3,#0
 3279 0018 04D0     	 beq .L146
1512:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1513:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_STANDARD:
1514:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Configure the data input line selected */
1515:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_SPI_CH_SetInputSource(handle->channel, XMC_SPI_CH_INPUT_DIN0, (uint8_t)(handle->runtime->
1516:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Configure the pin as input */
1517:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_1_pin->port, handle->config->mosi_1_pin->pin, XMC_GPIO_
1518:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Disable the HW control of the PINs */
1519:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetHardwareControl(handle->config->mosi_0_pin->port,
1520:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin->pin,
1521:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   XMC_GPIO_HWCTRL_DISABLED);
1522:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetHardwareControl(handle->config->mosi_1_pin->port,
1523:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_1_pin->pin,
1524:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   XMC_GPIO_HWCTRL_DISABLED);
1525:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1526:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
1527:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1528:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX:
1529:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Configure the data input line selected */
1530:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_SPI_CH_SetInputSource(handle->channel, XMC_SPI_CH_INPUT_DIN0, (uint8_t)(handle->runtime->
1531:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Disable the HW control of the PINs */
1532:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetHardwareControl(handle->config->mosi_0_pin->port,
1533:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin->pin,
1534:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   XMC_GPIO_HWCTRL_DISABLED);
1535:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
1536:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1537:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_DUAL:
1538:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_QUAD:
1539:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Configure the data input line for loopback mode */
1540:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_SPI_CH_SetInputSource(handle->channel, XMC_SPI_CH_INPUT_DIN0, (uint8_t)SPI_MASTER_INPUT_G
1541:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Configure the pin as input */
1542:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_1_pin->port,
1543:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
1544:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin_config->port_config.mode);
1545:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1546:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Configure the Hardware control mode selected for the pin */
1547:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetHardwareControl(handle->config->mosi_0_pin->port,
1548:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin->pin,
1549:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin_config->hw_control);
1550:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetHardwareControl(handle->config->mosi_1_pin->port,
1551:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_1_pin->pin,
1552:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_1_pin_config->hw_control);
1553:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
1554:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1555:../Dave/Generated/SPI_MASTER/spi_master.c ****     default:
1556:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3280              	 .loc 3 1556 0
 3281 001a 88E0     	 b .L150
 3282              	.L145:
1511:../Dave/Generated/SPI_MASTER/spi_master.c ****   switch (handle->runtime->spi_master_mode)
 3283              	 .loc 3 1511 0
 3284 001c 072B     	 cmp r3,#7
 3285 001e 00DD     	 ble .LCB2965
 3286 0020 85E0     	 b .L150
 3287              	.LCB2965:
 3288 0022 49E0     	 b .L149
 3289              	.L146:
1515:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Configure the pin as input */
 3290              	 .loc 3 1515 0
 3291 0024 7B68     	 ldr r3,[r7,#4]
 3292 0026 1A68     	 ldr r2,[r3]
 3293 0028 7B68     	 ldr r3,[r7,#4]
 3294 002a 9B68     	 ldr r3,[r3,#8]
 3295 002c 5B7F     	 ldrb r3,[r3,#29]
 3296 002e 101C     	 mov r0,r2
 3297 0030 0021     	 mov r1,#0
 3298 0032 1A1C     	 mov r2,r3
 3299 0034 FFF7FEFF 	 bl XMC_SPI_CH_SetInputSource
1517:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Disable the HW control of the PINs */
 3300              	 .loc 3 1517 0
 3301 0038 7B68     	 ldr r3,[r7,#4]
 3302 003a 5B68     	 ldr r3,[r3,#4]
 3303 003c 1B69     	 ldr r3,[r3,#16]
 3304 003e 1A68     	 ldr r2,[r3]
 3305 0040 7B68     	 ldr r3,[r7,#4]
 3306 0042 5B68     	 ldr r3,[r3,#4]
 3307 0044 1B69     	 ldr r3,[r3,#16]
 3308 0046 1B79     	 ldrb r3,[r3,#4]
 3309 0048 101C     	 mov r0,r2
 3310 004a 191C     	 mov r1,r3
 3311 004c 0022     	 mov r2,#0
 3312 004e FFF7FEFF 	 bl XMC_GPIO_SetMode
1519:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin->pin,
 3313              	 .loc 3 1519 0
 3314 0052 7B68     	 ldr r3,[r7,#4]
 3315 0054 5B68     	 ldr r3,[r3,#4]
 3316 0056 9B68     	 ldr r3,[r3,#8]
 3317 0058 1A68     	 ldr r2,[r3]
1520:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   XMC_GPIO_HWCTRL_DISABLED);
 3318              	 .loc 3 1520 0
 3319 005a 7B68     	 ldr r3,[r7,#4]
 3320 005c 5B68     	 ldr r3,[r3,#4]
 3321 005e 9B68     	 ldr r3,[r3,#8]
1519:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin->pin,
 3322              	 .loc 3 1519 0
 3323 0060 1B79     	 ldrb r3,[r3,#4]
 3324 0062 101C     	 mov r0,r2
 3325 0064 191C     	 mov r1,r3
 3326 0066 0022     	 mov r2,#0
 3327 0068 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
1522:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_1_pin->pin,
 3328              	 .loc 3 1522 0
 3329 006c 7B68     	 ldr r3,[r7,#4]
 3330 006e 5B68     	 ldr r3,[r3,#4]
 3331 0070 1B69     	 ldr r3,[r3,#16]
 3332 0072 1A68     	 ldr r2,[r3]
1523:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   XMC_GPIO_HWCTRL_DISABLED);
 3333              	 .loc 3 1523 0
 3334 0074 7B68     	 ldr r3,[r7,#4]
 3335 0076 5B68     	 ldr r3,[r3,#4]
 3336 0078 1B69     	 ldr r3,[r3,#16]
1522:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_1_pin->pin,
 3337              	 .loc 3 1522 0
 3338 007a 1B79     	 ldrb r3,[r3,#4]
 3339 007c 101C     	 mov r0,r2
 3340 007e 191C     	 mov r1,r3
 3341 0080 0022     	 mov r2,#0
 3342 0082 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
1526:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 3343              	 .loc 3 1526 0
 3344 0086 53E0     	 b .L142
 3345              	.L144:
1530:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Disable the HW control of the PINs */
 3346              	 .loc 3 1530 0
 3347 0088 7B68     	 ldr r3,[r7,#4]
 3348 008a 1A68     	 ldr r2,[r3]
 3349 008c 7B68     	 ldr r3,[r7,#4]
 3350 008e 9B68     	 ldr r3,[r3,#8]
 3351 0090 9B7F     	 ldrb r3,[r3,#30]
 3352 0092 101C     	 mov r0,r2
 3353 0094 0021     	 mov r1,#0
 3354 0096 1A1C     	 mov r2,r3
 3355 0098 FFF7FEFF 	 bl XMC_SPI_CH_SetInputSource
1532:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin->pin,
 3356              	 .loc 3 1532 0
 3357 009c 7B68     	 ldr r3,[r7,#4]
 3358 009e 5B68     	 ldr r3,[r3,#4]
 3359 00a0 9B68     	 ldr r3,[r3,#8]
 3360 00a2 1A68     	 ldr r2,[r3]
1533:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   XMC_GPIO_HWCTRL_DISABLED);
 3361              	 .loc 3 1533 0
 3362 00a4 7B68     	 ldr r3,[r7,#4]
 3363 00a6 5B68     	 ldr r3,[r3,#4]
 3364 00a8 9B68     	 ldr r3,[r3,#8]
1532:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin->pin,
 3365              	 .loc 3 1532 0
 3366 00aa 1B79     	 ldrb r3,[r3,#4]
 3367 00ac 101C     	 mov r0,r2
 3368 00ae 191C     	 mov r1,r3
 3369 00b0 0022     	 mov r2,#0
 3370 00b2 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
1535:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 3371              	 .loc 3 1535 0
 3372 00b6 3BE0     	 b .L142
 3373              	.L149:
1540:../Dave/Generated/SPI_MASTER/spi_master.c ****       /* Configure the pin as input */
 3374              	 .loc 3 1540 0
 3375 00b8 7B68     	 ldr r3,[r7,#4]
 3376 00ba 1B68     	 ldr r3,[r3]
 3377 00bc 181C     	 mov r0,r3
 3378 00be 0021     	 mov r1,#0
 3379 00c0 0622     	 mov r2,#6
 3380 00c2 FFF7FEFF 	 bl XMC_SPI_CH_SetInputSource
1542:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
 3381              	 .loc 3 1542 0
 3382 00c6 7B68     	 ldr r3,[r7,#4]
 3383 00c8 5B68     	 ldr r3,[r3,#4]
 3384 00ca 1B69     	 ldr r3,[r3,#16]
 3385 00cc 1968     	 ldr r1,[r3]
1543:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin_config->port_config.mode);
 3386              	 .loc 3 1543 0
 3387 00ce 7B68     	 ldr r3,[r7,#4]
 3388 00d0 5B68     	 ldr r3,[r3,#4]
 3389 00d2 1B69     	 ldr r3,[r3,#16]
1542:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
 3390              	 .loc 3 1542 0
 3391 00d4 1A79     	 ldrb r2,[r3,#4]
1544:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 3392              	 .loc 3 1544 0
 3393 00d6 7B68     	 ldr r3,[r7,#4]
 3394 00d8 5B68     	 ldr r3,[r3,#4]
 3395 00da 5B69     	 ldr r3,[r3,#20]
1542:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
 3396              	 .loc 3 1542 0
 3397 00dc 1B78     	 ldrb r3,[r3]
 3398 00de 081C     	 mov r0,r1
 3399 00e0 111C     	 mov r1,r2
 3400 00e2 1A1C     	 mov r2,r3
 3401 00e4 FFF7FEFF 	 bl XMC_GPIO_SetMode
1547:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin->pin,
 3402              	 .loc 3 1547 0
 3403 00e8 7B68     	 ldr r3,[r7,#4]
 3404 00ea 5B68     	 ldr r3,[r3,#4]
 3405 00ec 9B68     	 ldr r3,[r3,#8]
 3406 00ee 1968     	 ldr r1,[r3]
1548:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin_config->hw_control);
 3407              	 .loc 3 1548 0
 3408 00f0 7B68     	 ldr r3,[r7,#4]
 3409 00f2 5B68     	 ldr r3,[r3,#4]
 3410 00f4 9B68     	 ldr r3,[r3,#8]
1547:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin->pin,
 3411              	 .loc 3 1547 0
 3412 00f6 1A79     	 ldrb r2,[r3,#4]
1549:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetHardwareControl(handle->config->mosi_1_pin->port,
 3413              	 .loc 3 1549 0
 3414 00f8 7B68     	 ldr r3,[r7,#4]
 3415 00fa 5B68     	 ldr r3,[r3,#4]
 3416 00fc DB68     	 ldr r3,[r3,#12]
1547:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_0_pin->pin,
 3417              	 .loc 3 1547 0
 3418 00fe 1B7A     	 ldrb r3,[r3,#8]
 3419 0100 081C     	 mov r0,r1
 3420 0102 111C     	 mov r1,r2
 3421 0104 1A1C     	 mov r2,r3
 3422 0106 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
1550:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_1_pin->pin,
 3423              	 .loc 3 1550 0
 3424 010a 7B68     	 ldr r3,[r7,#4]
 3425 010c 5B68     	 ldr r3,[r3,#4]
 3426 010e 1B69     	 ldr r3,[r3,#16]
 3427 0110 1968     	 ldr r1,[r3]
1551:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_1_pin_config->hw_control);
 3428              	 .loc 3 1551 0
 3429 0112 7B68     	 ldr r3,[r7,#4]
 3430 0114 5B68     	 ldr r3,[r3,#4]
 3431 0116 1B69     	 ldr r3,[r3,#16]
1550:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_1_pin->pin,
 3432              	 .loc 3 1550 0
 3433 0118 1A79     	 ldrb r2,[r3,#4]
1552:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3434              	 .loc 3 1552 0
 3435 011a 7B68     	 ldr r3,[r7,#4]
 3436 011c 5B68     	 ldr r3,[r3,#4]
 3437 011e 5B69     	 ldr r3,[r3,#20]
1550:../Dave/Generated/SPI_MASTER/spi_master.c ****                                   handle->config->mosi_1_pin->pin,
 3438              	 .loc 3 1550 0
 3439 0120 1B7A     	 ldrb r3,[r3,#8]
 3440 0122 081C     	 mov r0,r1
 3441 0124 111C     	 mov r1,r2
 3442 0126 1A1C     	 mov r2,r3
 3443 0128 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
1553:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 3444              	 .loc 3 1553 0
 3445 012c 00E0     	 b .L142
 3446              	.L150:
 3447              	 .loc 3 1556 0
 3448 012e C046     	 mov r8,r8
 3449              	.L142:
1557:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1558:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 3450              	 .loc 3 1558 0
 3451 0130 BD46     	 mov sp,r7
 3452 0132 02B0     	 add sp,sp,#8
 3453              	 
 3454 0134 80BD     	 pop {r7,pc}
 3455              	 .cfi_endproc
 3456              	.LFE217:
 3458 0136 C046     	 .section .text.SPI_MASTER_lPortModeSet,"ax",%progbits
 3459              	 .align 2
 3460              	 .code 16
 3461              	 .thumb_func
 3463              	SPI_MASTER_lPortModeSet:
 3464              	.LFB218:
1559:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1560:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
1561:../Dave/Generated/SPI_MASTER/spi_master.c ****  * This is used to reassign the mode for ports after updating the baud rate
1562:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
1563:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lPortModeSet(const SPI_MASTER_t* handle)
1564:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 3465              	 .loc 3 1564 0
 3466              	 .cfi_startproc
 3467 0000 80B5     	 push {r7,lr}
 3468              	.LCFI126:
 3469              	 .cfi_def_cfa_offset 8
 3470              	 .cfi_offset 7,-8
 3471              	 .cfi_offset 14,-4
 3472 0002 84B0     	 sub sp,sp,#16
 3473              	.LCFI127:
 3474              	 .cfi_def_cfa_offset 24
 3475 0004 00AF     	 add r7,sp,#0
 3476              	.LCFI128:
 3477              	 .cfi_def_cfa_register 7
 3478 0006 7860     	 str r0,[r7,#4]
1565:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t ss_line;
1566:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1567:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* Configure the ports with actual mode */
1568:../Dave/Generated/SPI_MASTER/spi_master.c ****   for (ss_line = 0U; ss_line < handle->config->slave_select_lines; ss_line++)
 3479              	 .loc 3 1568 0
 3480 0008 0023     	 mov r3,#0
 3481 000a FB60     	 str r3,[r7,#12]
 3482 000c 1AE0     	 b .L152
 3483              	.L153:
1569:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1570:../Dave/Generated/SPI_MASTER/spi_master.c ****     XMC_GPIO_SetMode(handle->config->slave_select_pin[ss_line]->port,
 3484              	 .loc 3 1570 0 discriminator 3
 3485 000e 7B68     	 ldr r3,[r7,#4]
 3486 0010 5B68     	 ldr r3,[r3,#4]
 3487 0012 FA68     	 ldr r2,[r7,#12]
 3488 0014 0C32     	 add r2,r2,#12
 3489 0016 9200     	 lsl r2,r2,#2
 3490 0018 D358     	 ldr r3,[r2,r3]
 3491 001a 1868     	 ldr r0,[r3]
1571:../Dave/Generated/SPI_MASTER/spi_master.c ****                      handle->config->slave_select_pin[ss_line]->pin,
 3492              	 .loc 3 1571 0 discriminator 3
 3493 001c 7B68     	 ldr r3,[r7,#4]
 3494 001e 5B68     	 ldr r3,[r3,#4]
 3495 0020 FA68     	 ldr r2,[r7,#12]
 3496 0022 0C32     	 add r2,r2,#12
 3497 0024 9200     	 lsl r2,r2,#2
 3498 0026 D358     	 ldr r3,[r2,r3]
1570:../Dave/Generated/SPI_MASTER/spi_master.c ****                      handle->config->slave_select_pin[ss_line]->pin,
 3499              	 .loc 3 1570 0 discriminator 3
 3500 0028 1979     	 ldrb r1,[r3,#4]
1572:../Dave/Generated/SPI_MASTER/spi_master.c ****                      handle->config->slave_select_pin_config[ss_line]->port_config.mode);
 3501              	 .loc 3 1572 0 discriminator 3
 3502 002a 7B68     	 ldr r3,[r7,#4]
 3503 002c 5B68     	 ldr r3,[r3,#4]
 3504 002e FA68     	 ldr r2,[r7,#12]
 3505 0030 1432     	 add r2,r2,#20
 3506 0032 9200     	 lsl r2,r2,#2
 3507 0034 D358     	 ldr r3,[r2,r3]
1570:../Dave/Generated/SPI_MASTER/spi_master.c ****                      handle->config->slave_select_pin[ss_line]->pin,
 3508              	 .loc 3 1570 0 discriminator 3
 3509 0036 1B78     	 ldrb r3,[r3]
 3510 0038 1A1C     	 mov r2,r3
 3511 003a FFF7FEFF 	 bl XMC_GPIO_SetMode
1568:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 3512              	 .loc 3 1568 0 discriminator 3
 3513 003e FB68     	 ldr r3,[r7,#12]
 3514 0040 0133     	 add r3,r3,#1
 3515 0042 FB60     	 str r3,[r7,#12]
 3516              	.L152:
1568:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 3517              	 .loc 3 1568 0 is_stmt 0 discriminator 1
 3518 0044 7B68     	 ldr r3,[r7,#4]
 3519 0046 5B68     	 ldr r3,[r3,#4]
 3520 0048 8722     	 mov r2,#135
 3521 004a 9B5C     	 ldrb r3,[r3,r2]
 3522 004c 1A1E     	 sub r2,r3,#0
 3523 004e FB68     	 ldr r3,[r7,#12]
 3524 0050 9A42     	 cmp r2,r3
 3525 0052 DCD8     	 bhi .L153
1573:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1574:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1575:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_GPIO_SetMode(handle->config->sclk_out_pin->port,
 3526              	 .loc 3 1575 0 is_stmt 1
 3527 0054 7B68     	 ldr r3,[r7,#4]
 3528 0056 5B68     	 ldr r3,[r3,#4]
 3529 0058 9B6A     	 ldr r3,[r3,#40]
 3530 005a 1968     	 ldr r1,[r3]
1576:../Dave/Generated/SPI_MASTER/spi_master.c ****                    handle->config->sclk_out_pin->pin,
 3531              	 .loc 3 1576 0
 3532 005c 7B68     	 ldr r3,[r7,#4]
 3533 005e 5B68     	 ldr r3,[r3,#4]
 3534 0060 9B6A     	 ldr r3,[r3,#40]
1575:../Dave/Generated/SPI_MASTER/spi_master.c ****                    handle->config->sclk_out_pin->pin,
 3535              	 .loc 3 1575 0
 3536 0062 1A79     	 ldrb r2,[r3,#4]
1577:../Dave/Generated/SPI_MASTER/spi_master.c ****                    handle->config->sclk_out_pin_config->port_config.mode);
 3537              	 .loc 3 1577 0
 3538 0064 7B68     	 ldr r3,[r7,#4]
 3539 0066 5B68     	 ldr r3,[r3,#4]
 3540 0068 DB6A     	 ldr r3,[r3,#44]
1575:../Dave/Generated/SPI_MASTER/spi_master.c ****                    handle->config->sclk_out_pin->pin,
 3541              	 .loc 3 1575 0
 3542 006a 1B78     	 ldrb r3,[r3]
 3543 006c 081C     	 mov r0,r1
 3544 006e 111C     	 mov r1,r2
 3545 0070 1A1C     	 mov r2,r3
 3546 0072 FFF7FEFF 	 bl XMC_GPIO_SetMode
1578:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1579:../Dave/Generated/SPI_MASTER/spi_master.c ****   switch (handle->runtime->spi_master_mode)
 3547              	 .loc 3 1579 0
 3548 0076 7B68     	 ldr r3,[r7,#4]
 3549 0078 9B68     	 ldr r3,[r3,#8]
 3550 007a 1B7F     	 ldrb r3,[r3,#28]
 3551 007c DBB2     	 uxtb r3,r3
 3552 007e 052B     	 cmp r3,#5
 3553 0080 08D0     	 beq .L155
 3554 0082 02DC     	 bgt .L156
 3555 0084 002B     	 cmp r3,#0
 3556 0086 05D0     	 beq .L155
1580:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1581:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_STANDARD:
1582:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX:
1583:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_0_pin->port,
1584:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
1585:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin_config->port_config.mode);
1586:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
1587:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1588:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_DUAL:
1589:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_0_pin->port,
1590:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
1591:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin_config->port_config.mode);
1592:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_1_pin->port,
1593:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
1594:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin_config->port_config.mode);
1595:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
1596:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1597:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_QUAD:
1598:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_0_pin->port,
1599:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
1600:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin_config->port_config.mode);
1601:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_1_pin->port,
1602:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
1603:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin_config->port_config.mode);
1604:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_2_pin->port,
1605:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_2_pin->pin,
1606:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_2_pin_config->port_config.mode);
1607:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_3_pin->port,
1608:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_3_pin->pin,
1609:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_3_pin_config->port_config.mode);
1610:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
1611:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1612:../Dave/Generated/SPI_MASTER/spi_master.c ****     default:
1613:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3557              	 .loc 3 1613 0
 3558 0088 7EE0     	 b .L151
 3559              	.L156:
1579:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 3560              	 .loc 3 1579 0
 3561 008a 062B     	 cmp r3,#6
 3562 008c 14D0     	 beq .L157
 3563 008e 072B     	 cmp r3,#7
 3564 0090 35D0     	 beq .L158
 3565              	 .loc 3 1613 0
 3566 0092 79E0     	 b .L151
 3567              	.L155:
1583:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
 3568              	 .loc 3 1583 0
 3569 0094 7B68     	 ldr r3,[r7,#4]
 3570 0096 5B68     	 ldr r3,[r3,#4]
 3571 0098 9B68     	 ldr r3,[r3,#8]
 3572 009a 1968     	 ldr r1,[r3]
1584:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin_config->port_config.mode);
 3573              	 .loc 3 1584 0
 3574 009c 7B68     	 ldr r3,[r7,#4]
 3575 009e 5B68     	 ldr r3,[r3,#4]
 3576 00a0 9B68     	 ldr r3,[r3,#8]
1583:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
 3577              	 .loc 3 1583 0
 3578 00a2 1A79     	 ldrb r2,[r3,#4]
1585:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3579              	 .loc 3 1585 0
 3580 00a4 7B68     	 ldr r3,[r7,#4]
 3581 00a6 5B68     	 ldr r3,[r3,#4]
 3582 00a8 DB68     	 ldr r3,[r3,#12]
1583:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
 3583              	 .loc 3 1583 0
 3584 00aa 1B78     	 ldrb r3,[r3]
 3585 00ac 081C     	 mov r0,r1
 3586 00ae 111C     	 mov r1,r2
 3587 00b0 1A1C     	 mov r2,r3
 3588 00b2 FFF7FEFF 	 bl XMC_GPIO_SetMode
1586:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 3589              	 .loc 3 1586 0
 3590 00b6 67E0     	 b .L151
 3591              	.L157:
1589:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
 3592              	 .loc 3 1589 0
 3593 00b8 7B68     	 ldr r3,[r7,#4]
 3594 00ba 5B68     	 ldr r3,[r3,#4]
 3595 00bc 9B68     	 ldr r3,[r3,#8]
 3596 00be 1968     	 ldr r1,[r3]
1590:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin_config->port_config.mode);
 3597              	 .loc 3 1590 0
 3598 00c0 7B68     	 ldr r3,[r7,#4]
 3599 00c2 5B68     	 ldr r3,[r3,#4]
 3600 00c4 9B68     	 ldr r3,[r3,#8]
1589:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
 3601              	 .loc 3 1589 0
 3602 00c6 1A79     	 ldrb r2,[r3,#4]
1591:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_1_pin->port,
 3603              	 .loc 3 1591 0
 3604 00c8 7B68     	 ldr r3,[r7,#4]
 3605 00ca 5B68     	 ldr r3,[r3,#4]
 3606 00cc DB68     	 ldr r3,[r3,#12]
1589:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
 3607              	 .loc 3 1589 0
 3608 00ce 1B78     	 ldrb r3,[r3]
 3609 00d0 081C     	 mov r0,r1
 3610 00d2 111C     	 mov r1,r2
 3611 00d4 1A1C     	 mov r2,r3
 3612 00d6 FFF7FEFF 	 bl XMC_GPIO_SetMode
1592:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
 3613              	 .loc 3 1592 0
 3614 00da 7B68     	 ldr r3,[r7,#4]
 3615 00dc 5B68     	 ldr r3,[r3,#4]
 3616 00de 1B69     	 ldr r3,[r3,#16]
 3617 00e0 1968     	 ldr r1,[r3]
1593:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin_config->port_config.mode);
 3618              	 .loc 3 1593 0
 3619 00e2 7B68     	 ldr r3,[r7,#4]
 3620 00e4 5B68     	 ldr r3,[r3,#4]
 3621 00e6 1B69     	 ldr r3,[r3,#16]
1592:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
 3622              	 .loc 3 1592 0
 3623 00e8 1A79     	 ldrb r2,[r3,#4]
1594:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3624              	 .loc 3 1594 0
 3625 00ea 7B68     	 ldr r3,[r7,#4]
 3626 00ec 5B68     	 ldr r3,[r3,#4]
 3627 00ee 5B69     	 ldr r3,[r3,#20]
1592:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
 3628              	 .loc 3 1592 0
 3629 00f0 1B78     	 ldrb r3,[r3]
 3630 00f2 081C     	 mov r0,r1
 3631 00f4 111C     	 mov r1,r2
 3632 00f6 1A1C     	 mov r2,r3
 3633 00f8 FFF7FEFF 	 bl XMC_GPIO_SetMode
1595:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 3634              	 .loc 3 1595 0
 3635 00fc 44E0     	 b .L151
 3636              	.L158:
1598:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
 3637              	 .loc 3 1598 0
 3638 00fe 7B68     	 ldr r3,[r7,#4]
 3639 0100 5B68     	 ldr r3,[r3,#4]
 3640 0102 9B68     	 ldr r3,[r3,#8]
 3641 0104 1968     	 ldr r1,[r3]
1599:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin_config->port_config.mode);
 3642              	 .loc 3 1599 0
 3643 0106 7B68     	 ldr r3,[r7,#4]
 3644 0108 5B68     	 ldr r3,[r3,#4]
 3645 010a 9B68     	 ldr r3,[r3,#8]
1598:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
 3646              	 .loc 3 1598 0
 3647 010c 1A79     	 ldrb r2,[r3,#4]
1600:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_1_pin->port,
 3648              	 .loc 3 1600 0
 3649 010e 7B68     	 ldr r3,[r7,#4]
 3650 0110 5B68     	 ldr r3,[r3,#4]
 3651 0112 DB68     	 ldr r3,[r3,#12]
1598:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_0_pin->pin,
 3652              	 .loc 3 1598 0
 3653 0114 1B78     	 ldrb r3,[r3]
 3654 0116 081C     	 mov r0,r1
 3655 0118 111C     	 mov r1,r2
 3656 011a 1A1C     	 mov r2,r3
 3657 011c FFF7FEFF 	 bl XMC_GPIO_SetMode
1601:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
 3658              	 .loc 3 1601 0
 3659 0120 7B68     	 ldr r3,[r7,#4]
 3660 0122 5B68     	 ldr r3,[r3,#4]
 3661 0124 1B69     	 ldr r3,[r3,#16]
 3662 0126 1968     	 ldr r1,[r3]
1602:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin_config->port_config.mode);
 3663              	 .loc 3 1602 0
 3664 0128 7B68     	 ldr r3,[r7,#4]
 3665 012a 5B68     	 ldr r3,[r3,#4]
 3666 012c 1B69     	 ldr r3,[r3,#16]
1601:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
 3667              	 .loc 3 1601 0
 3668 012e 1A79     	 ldrb r2,[r3,#4]
1603:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_2_pin->port,
 3669              	 .loc 3 1603 0
 3670 0130 7B68     	 ldr r3,[r7,#4]
 3671 0132 5B68     	 ldr r3,[r3,#4]
 3672 0134 5B69     	 ldr r3,[r3,#20]
1601:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_1_pin->pin,
 3673              	 .loc 3 1601 0
 3674 0136 1B78     	 ldrb r3,[r3]
 3675 0138 081C     	 mov r0,r1
 3676 013a 111C     	 mov r1,r2
 3677 013c 1A1C     	 mov r2,r3
 3678 013e FFF7FEFF 	 bl XMC_GPIO_SetMode
1604:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_2_pin->pin,
 3679              	 .loc 3 1604 0
 3680 0142 7B68     	 ldr r3,[r7,#4]
 3681 0144 5B68     	 ldr r3,[r3,#4]
 3682 0146 9B69     	 ldr r3,[r3,#24]
 3683 0148 1968     	 ldr r1,[r3]
1605:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_2_pin_config->port_config.mode);
 3684              	 .loc 3 1605 0
 3685 014a 7B68     	 ldr r3,[r7,#4]
 3686 014c 5B68     	 ldr r3,[r3,#4]
 3687 014e 9B69     	 ldr r3,[r3,#24]
1604:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_2_pin->pin,
 3688              	 .loc 3 1604 0
 3689 0150 1A79     	 ldrb r2,[r3,#4]
1606:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_3_pin->port,
 3690              	 .loc 3 1606 0
 3691 0152 7B68     	 ldr r3,[r7,#4]
 3692 0154 5B68     	 ldr r3,[r3,#4]
 3693 0156 DB69     	 ldr r3,[r3,#28]
1604:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_2_pin->pin,
 3694              	 .loc 3 1604 0
 3695 0158 1B78     	 ldrb r3,[r3]
 3696 015a 081C     	 mov r0,r1
 3697 015c 111C     	 mov r1,r2
 3698 015e 1A1C     	 mov r2,r3
 3699 0160 FFF7FEFF 	 bl XMC_GPIO_SetMode
1607:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_3_pin->pin,
 3700              	 .loc 3 1607 0
 3701 0164 7B68     	 ldr r3,[r7,#4]
 3702 0166 5B68     	 ldr r3,[r3,#4]
 3703 0168 1B6A     	 ldr r3,[r3,#32]
 3704 016a 1968     	 ldr r1,[r3]
1608:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_3_pin_config->port_config.mode);
 3705              	 .loc 3 1608 0
 3706 016c 7B68     	 ldr r3,[r7,#4]
 3707 016e 5B68     	 ldr r3,[r3,#4]
 3708 0170 1B6A     	 ldr r3,[r3,#32]
1607:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_3_pin->pin,
 3709              	 .loc 3 1607 0
 3710 0172 1A79     	 ldrb r2,[r3,#4]
1609:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3711              	 .loc 3 1609 0
 3712 0174 7B68     	 ldr r3,[r7,#4]
 3713 0176 5B68     	 ldr r3,[r3,#4]
 3714 0178 5B6A     	 ldr r3,[r3,#36]
1607:../Dave/Generated/SPI_MASTER/spi_master.c ****                        handle->config->mosi_3_pin->pin,
 3715              	 .loc 3 1607 0
 3716 017a 1B78     	 ldrb r3,[r3]
 3717 017c 081C     	 mov r0,r1
 3718 017e 111C     	 mov r1,r2
 3719 0180 1A1C     	 mov r2,r3
 3720 0182 FFF7FEFF 	 bl XMC_GPIO_SetMode
1610:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 3721              	 .loc 3 1610 0
 3722 0186 C046     	 mov r8,r8
 3723              	.L151:
1614:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1615:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 3724              	 .loc 3 1615 0
 3725 0188 BD46     	 mov sp,r7
 3726 018a 04B0     	 add sp,sp,#16
 3727              	 
 3728 018c 80BD     	 pop {r7,pc}
 3729              	 .cfi_endproc
 3730              	.LFE218:
 3732 018e C046     	 .section .text.SPI_MASTER_lPortModeReset,"ax",%progbits
 3733              	 .align 2
 3734              	 .code 16
 3735              	 .thumb_func
 3737              	SPI_MASTER_lPortModeReset:
 3738              	.LFB219:
1616:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1617:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
1618:../Dave/Generated/SPI_MASTER/spi_master.c ****  * This is used to make the ports as input during update of the baud rate, to avoid the noise in ou
1619:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
1620:../Dave/Generated/SPI_MASTER/spi_master.c **** static void SPI_MASTER_lPortModeReset(const SPI_MASTER_t* handle)
1621:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 3739              	 .loc 3 1621 0
 3740              	 .cfi_startproc
 3741 0000 80B5     	 push {r7,lr}
 3742              	.LCFI129:
 3743              	 .cfi_def_cfa_offset 8
 3744              	 .cfi_offset 7,-8
 3745              	 .cfi_offset 14,-4
 3746 0002 84B0     	 sub sp,sp,#16
 3747              	.LCFI130:
 3748              	 .cfi_def_cfa_offset 24
 3749 0004 00AF     	 add r7,sp,#0
 3750              	.LCFI131:
 3751              	 .cfi_def_cfa_register 7
 3752 0006 7860     	 str r0,[r7,#4]
1622:../Dave/Generated/SPI_MASTER/spi_master.c ****   uint32_t ss_line;
1623:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1624:../Dave/Generated/SPI_MASTER/spi_master.c ****   /* Configure the ports as input */
1625:../Dave/Generated/SPI_MASTER/spi_master.c ****   for (ss_line = 0U; ss_line < handle->config->slave_select_lines; ss_line++)
 3753              	 .loc 3 1625 0
 3754 0008 0023     	 mov r3,#0
 3755 000a FB60     	 str r3,[r7,#12]
 3756 000c 15E0     	 b .L161
 3757              	.L162:
1626:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1627:../Dave/Generated/SPI_MASTER/spi_master.c ****     XMC_GPIO_SetMode(handle->config->slave_select_pin[ss_line]->port,
 3758              	 .loc 3 1627 0 discriminator 3
 3759 000e 7B68     	 ldr r3,[r7,#4]
 3760 0010 5B68     	 ldr r3,[r3,#4]
 3761 0012 FA68     	 ldr r2,[r7,#12]
 3762 0014 0C32     	 add r2,r2,#12
 3763 0016 9200     	 lsl r2,r2,#2
 3764 0018 D358     	 ldr r3,[r2,r3]
 3765 001a 1968     	 ldr r1,[r3]
1628:../Dave/Generated/SPI_MASTER/spi_master.c ****                      handle->config->slave_select_pin[ss_line]->pin,
 3766              	 .loc 3 1628 0 discriminator 3
 3767 001c 7B68     	 ldr r3,[r7,#4]
 3768 001e 5B68     	 ldr r3,[r3,#4]
 3769 0020 FA68     	 ldr r2,[r7,#12]
 3770 0022 0C32     	 add r2,r2,#12
 3771 0024 9200     	 lsl r2,r2,#2
 3772 0026 D358     	 ldr r3,[r2,r3]
1627:../Dave/Generated/SPI_MASTER/spi_master.c ****                      handle->config->slave_select_pin[ss_line]->pin,
 3773              	 .loc 3 1627 0 discriminator 3
 3774 0028 1B79     	 ldrb r3,[r3,#4]
 3775 002a 081C     	 mov r0,r1
 3776 002c 191C     	 mov r1,r3
 3777 002e 0022     	 mov r2,#0
 3778 0030 FFF7FEFF 	 bl XMC_GPIO_SetMode
1625:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 3779              	 .loc 3 1625 0 discriminator 3
 3780 0034 FB68     	 ldr r3,[r7,#12]
 3781 0036 0133     	 add r3,r3,#1
 3782 0038 FB60     	 str r3,[r7,#12]
 3783              	.L161:
1625:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 3784              	 .loc 3 1625 0 is_stmt 0 discriminator 1
 3785 003a 7B68     	 ldr r3,[r7,#4]
 3786 003c 5B68     	 ldr r3,[r3,#4]
 3787 003e 8722     	 mov r2,#135
 3788 0040 9B5C     	 ldrb r3,[r3,r2]
 3789 0042 1A1E     	 sub r2,r3,#0
 3790 0044 FB68     	 ldr r3,[r7,#12]
 3791 0046 9A42     	 cmp r2,r3
 3792 0048 E1D8     	 bhi .L162
1629:../Dave/Generated/SPI_MASTER/spi_master.c ****                      XMC_GPIO_MODE_INPUT_TRISTATE);
1630:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1631:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1632:../Dave/Generated/SPI_MASTER/spi_master.c ****   XMC_GPIO_SetMode(handle->config->sclk_out_pin->port, handle->config->sclk_out_pin->pin, XMC_GPIO_
 3793              	 .loc 3 1632 0 is_stmt 1
 3794 004a 7B68     	 ldr r3,[r7,#4]
 3795 004c 5B68     	 ldr r3,[r3,#4]
 3796 004e 9B6A     	 ldr r3,[r3,#40]
 3797 0050 1A68     	 ldr r2,[r3]
 3798 0052 7B68     	 ldr r3,[r7,#4]
 3799 0054 5B68     	 ldr r3,[r3,#4]
 3800 0056 9B6A     	 ldr r3,[r3,#40]
 3801 0058 1B79     	 ldrb r3,[r3,#4]
 3802 005a 101C     	 mov r0,r2
 3803 005c 191C     	 mov r1,r3
 3804 005e 0022     	 mov r2,#0
 3805 0060 FFF7FEFF 	 bl XMC_GPIO_SetMode
1633:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1634:../Dave/Generated/SPI_MASTER/spi_master.c ****   switch (handle->runtime->spi_master_mode)
 3806              	 .loc 3 1634 0
 3807 0064 7B68     	 ldr r3,[r7,#4]
 3808 0066 9B68     	 ldr r3,[r3,#8]
 3809 0068 1B7F     	 ldrb r3,[r3,#28]
 3810 006a DBB2     	 uxtb r3,r3
 3811 006c 052B     	 cmp r3,#5
 3812 006e 08D0     	 beq .L164
 3813 0070 02DC     	 bgt .L165
 3814 0072 002B     	 cmp r3,#0
 3815 0074 05D0     	 beq .L164
1635:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1636:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_STANDARD:
1637:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX:
1638:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_0_pin->port, handle->config->mosi_0_pin->pin, XMC_GPIO_
1639:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
1640:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1641:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_DUAL:
1642:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_0_pin->port, handle->config->mosi_0_pin->pin, XMC_GPIO_
1643:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_1_pin->port, handle->config->mosi_1_pin->pin, XMC_GPIO_
1644:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
1645:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1646:../Dave/Generated/SPI_MASTER/spi_master.c ****     case XMC_SPI_CH_MODE_QUAD:
1647:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_0_pin->port, handle->config->mosi_0_pin->pin, XMC_GPIO_
1648:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_1_pin->port, handle->config->mosi_1_pin->pin, XMC_GPIO_
1649:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_2_pin->port, handle->config->mosi_2_pin->pin, XMC_GPIO_
1650:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_3_pin->port, handle->config->mosi_3_pin->pin, XMC_GPIO_
1651:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
1652:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1653:../Dave/Generated/SPI_MASTER/spi_master.c ****     default:
1654:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3816              	 .loc 3 1654 0
 3817 0076 62E0     	 b .L160
 3818              	.L165:
1634:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
 3819              	 .loc 3 1634 0
 3820 0078 062B     	 cmp r3,#6
 3821 007a 10D0     	 beq .L166
 3822 007c 072B     	 cmp r3,#7
 3823 007e 29D0     	 beq .L167
 3824              	 .loc 3 1654 0
 3825 0080 5DE0     	 b .L160
 3826              	.L164:
1638:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3827              	 .loc 3 1638 0
 3828 0082 7B68     	 ldr r3,[r7,#4]
 3829 0084 5B68     	 ldr r3,[r3,#4]
 3830 0086 9B68     	 ldr r3,[r3,#8]
 3831 0088 1A68     	 ldr r2,[r3]
 3832 008a 7B68     	 ldr r3,[r7,#4]
 3833 008c 5B68     	 ldr r3,[r3,#4]
 3834 008e 9B68     	 ldr r3,[r3,#8]
 3835 0090 1B79     	 ldrb r3,[r3,#4]
 3836 0092 101C     	 mov r0,r2
 3837 0094 191C     	 mov r1,r3
 3838 0096 0022     	 mov r2,#0
 3839 0098 FFF7FEFF 	 bl XMC_GPIO_SetMode
1639:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 3840              	 .loc 3 1639 0
 3841 009c 4FE0     	 b .L160
 3842              	.L166:
1642:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_1_pin->port, handle->config->mosi_1_pin->pin, XMC_GPIO_
 3843              	 .loc 3 1642 0
 3844 009e 7B68     	 ldr r3,[r7,#4]
 3845 00a0 5B68     	 ldr r3,[r3,#4]
 3846 00a2 9B68     	 ldr r3,[r3,#8]
 3847 00a4 1A68     	 ldr r2,[r3]
 3848 00a6 7B68     	 ldr r3,[r7,#4]
 3849 00a8 5B68     	 ldr r3,[r3,#4]
 3850 00aa 9B68     	 ldr r3,[r3,#8]
 3851 00ac 1B79     	 ldrb r3,[r3,#4]
 3852 00ae 101C     	 mov r0,r2
 3853 00b0 191C     	 mov r1,r3
 3854 00b2 0022     	 mov r2,#0
 3855 00b4 FFF7FEFF 	 bl XMC_GPIO_SetMode
1643:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3856              	 .loc 3 1643 0
 3857 00b8 7B68     	 ldr r3,[r7,#4]
 3858 00ba 5B68     	 ldr r3,[r3,#4]
 3859 00bc 1B69     	 ldr r3,[r3,#16]
 3860 00be 1A68     	 ldr r2,[r3]
 3861 00c0 7B68     	 ldr r3,[r7,#4]
 3862 00c2 5B68     	 ldr r3,[r3,#4]
 3863 00c4 1B69     	 ldr r3,[r3,#16]
 3864 00c6 1B79     	 ldrb r3,[r3,#4]
 3865 00c8 101C     	 mov r0,r2
 3866 00ca 191C     	 mov r1,r3
 3867 00cc 0022     	 mov r2,#0
 3868 00ce FFF7FEFF 	 bl XMC_GPIO_SetMode
1644:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 3869              	 .loc 3 1644 0
 3870 00d2 34E0     	 b .L160
 3871              	.L167:
1647:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_1_pin->port, handle->config->mosi_1_pin->pin, XMC_GPIO_
 3872              	 .loc 3 1647 0
 3873 00d4 7B68     	 ldr r3,[r7,#4]
 3874 00d6 5B68     	 ldr r3,[r3,#4]
 3875 00d8 9B68     	 ldr r3,[r3,#8]
 3876 00da 1A68     	 ldr r2,[r3]
 3877 00dc 7B68     	 ldr r3,[r7,#4]
 3878 00de 5B68     	 ldr r3,[r3,#4]
 3879 00e0 9B68     	 ldr r3,[r3,#8]
 3880 00e2 1B79     	 ldrb r3,[r3,#4]
 3881 00e4 101C     	 mov r0,r2
 3882 00e6 191C     	 mov r1,r3
 3883 00e8 0022     	 mov r2,#0
 3884 00ea FFF7FEFF 	 bl XMC_GPIO_SetMode
1648:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_2_pin->port, handle->config->mosi_2_pin->pin, XMC_GPIO_
 3885              	 .loc 3 1648 0
 3886 00ee 7B68     	 ldr r3,[r7,#4]
 3887 00f0 5B68     	 ldr r3,[r3,#4]
 3888 00f2 1B69     	 ldr r3,[r3,#16]
 3889 00f4 1A68     	 ldr r2,[r3]
 3890 00f6 7B68     	 ldr r3,[r7,#4]
 3891 00f8 5B68     	 ldr r3,[r3,#4]
 3892 00fa 1B69     	 ldr r3,[r3,#16]
 3893 00fc 1B79     	 ldrb r3,[r3,#4]
 3894 00fe 101C     	 mov r0,r2
 3895 0100 191C     	 mov r1,r3
 3896 0102 0022     	 mov r2,#0
 3897 0104 FFF7FEFF 	 bl XMC_GPIO_SetMode
1649:../Dave/Generated/SPI_MASTER/spi_master.c ****       XMC_GPIO_SetMode(handle->config->mosi_3_pin->port, handle->config->mosi_3_pin->pin, XMC_GPIO_
 3898              	 .loc 3 1649 0
 3899 0108 7B68     	 ldr r3,[r7,#4]
 3900 010a 5B68     	 ldr r3,[r3,#4]
 3901 010c 9B69     	 ldr r3,[r3,#24]
 3902 010e 1A68     	 ldr r2,[r3]
 3903 0110 7B68     	 ldr r3,[r7,#4]
 3904 0112 5B68     	 ldr r3,[r3,#4]
 3905 0114 9B69     	 ldr r3,[r3,#24]
 3906 0116 1B79     	 ldrb r3,[r3,#4]
 3907 0118 101C     	 mov r0,r2
 3908 011a 191C     	 mov r1,r3
 3909 011c 0022     	 mov r2,#0
 3910 011e FFF7FEFF 	 bl XMC_GPIO_SetMode
1650:../Dave/Generated/SPI_MASTER/spi_master.c ****       break;
 3911              	 .loc 3 1650 0
 3912 0122 7B68     	 ldr r3,[r7,#4]
 3913 0124 5B68     	 ldr r3,[r3,#4]
 3914 0126 1B6A     	 ldr r3,[r3,#32]
 3915 0128 1A68     	 ldr r2,[r3]
 3916 012a 7B68     	 ldr r3,[r7,#4]
 3917 012c 5B68     	 ldr r3,[r3,#4]
 3918 012e 1B6A     	 ldr r3,[r3,#32]
 3919 0130 1B79     	 ldrb r3,[r3,#4]
 3920 0132 101C     	 mov r0,r2
 3921 0134 191C     	 mov r1,r3
 3922 0136 0022     	 mov r2,#0
 3923 0138 FFF7FEFF 	 bl XMC_GPIO_SetMode
1651:../Dave/Generated/SPI_MASTER/spi_master.c **** 
 3924              	 .loc 3 1651 0
 3925 013c C046     	 mov r8,r8
 3926              	.L160:
1655:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1656:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 3927              	 .loc 3 1656 0
 3928 013e BD46     	 mov sp,r7
 3929 0140 04B0     	 add sp,sp,#16
 3930              	 
 3931 0142 80BD     	 pop {r7,pc}
 3932              	 .cfi_endproc
 3933              	.LFE219:
 3935              	 .section .text.SPI_MASTER_lValidateModeChange,"ax",%progbits
 3936              	 .align 2
 3937              	 .code 16
 3938              	 .thumb_func
 3940              	SPI_MASTER_lValidateModeChange:
 3941              	.LFB220:
1657:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1658:../Dave/Generated/SPI_MASTER/spi_master.c **** /*
1659:../Dave/Generated/SPI_MASTER/spi_master.c ****  * This is used check whether the mode change is valid or not
1660:../Dave/Generated/SPI_MASTER/spi_master.c ****  */
1661:../Dave/Generated/SPI_MASTER/spi_master.c **** static SPI_MASTER_STATUS_t SPI_MASTER_lValidateModeChange(const SPI_MASTER_t * handle, XMC_SPI_CH_M
1662:../Dave/Generated/SPI_MASTER/spi_master.c **** {
 3942              	 .loc 3 1662 0
 3943              	 .cfi_startproc
 3944 0000 80B5     	 push {r7,lr}
 3945              	.LCFI132:
 3946              	 .cfi_def_cfa_offset 8
 3947              	 .cfi_offset 7,-8
 3948              	 .cfi_offset 14,-4
 3949 0002 84B0     	 sub sp,sp,#16
 3950              	.LCFI133:
 3951              	 .cfi_def_cfa_offset 24
 3952 0004 00AF     	 add r7,sp,#0
 3953              	.LCFI134:
 3954              	 .cfi_def_cfa_register 7
 3955 0006 7860     	 str r0,[r7,#4]
 3956 0008 0A1C     	 mov r2,r1
 3957 000a FB1C     	 add r3,r7,#3
 3958 000c 1A70     	 strb r2,[r3]
1663:../Dave/Generated/SPI_MASTER/spi_master.c ****   SPI_MASTER_STATUS_t status;
1664:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1665:../Dave/Generated/SPI_MASTER/spi_master.c ****   status = SPI_MASTER_STATUS_SUCCESS;
 3959              	 .loc 3 1665 0
 3960 000e 0F23     	 mov r3,#15
 3961 0010 FB18     	 add r3,r7,r3
 3962 0012 0022     	 mov r2,#0
 3963 0014 1A70     	 strb r2,[r3]
1666:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1667:../Dave/Generated/SPI_MASTER/spi_master.c ****   if ((handle->config->spi_master_config_mode == XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX) ||
 3964              	 .loc 3 1667 0
 3965 0016 7B68     	 ldr r3,[r7,#4]
 3966 0018 5B68     	 ldr r3,[r3,#4]
 3967 001a 8622     	 mov r2,#134
 3968 001c 9B5C     	 ldrb r3,[r3,r2]
 3969 001e 052B     	 cmp r3,#5
 3970 0020 07D0     	 beq .L170
1668:../Dave/Generated/SPI_MASTER/spi_master.c ****       (handle->config->spi_master_config_mode < mode))
 3971              	 .loc 3 1668 0 discriminator 1
 3972 0022 7B68     	 ldr r3,[r7,#4]
 3973 0024 5B68     	 ldr r3,[r3,#4]
 3974 0026 8622     	 mov r2,#134
 3975 0028 9B5C     	 ldrb r3,[r3,r2]
1667:../Dave/Generated/SPI_MASTER/spi_master.c ****       (handle->config->spi_master_config_mode < mode))
 3976              	 .loc 3 1667 0 discriminator 1
 3977 002a FA1C     	 add r2,r7,#3
 3978 002c 1278     	 ldrb r2,[r2]
 3979 002e 9A42     	 cmp r2,r3
 3980 0030 04D9     	 bls .L171
 3981              	.L170:
1669:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1670:../Dave/Generated/SPI_MASTER/spi_master.c ****     status = SPI_MASTER_STATUS_FAILURE;
 3982              	 .loc 3 1670 0
 3983 0032 0F23     	 mov r3,#15
 3984 0034 FB18     	 add r3,r7,r3
 3985 0036 0122     	 mov r2,#1
 3986 0038 1A70     	 strb r2,[r3]
 3987 003a 29E0     	 b .L172
 3988              	.L171:
1671:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1672:../Dave/Generated/SPI_MASTER/spi_master.c ****   else if (handle->config->spi_master_config_mode == XMC_SPI_CH_MODE_STANDARD)
 3989              	 .loc 3 1672 0
 3990 003c 7B68     	 ldr r3,[r7,#4]
 3991 003e 5B68     	 ldr r3,[r3,#4]
 3992 0040 8622     	 mov r2,#134
 3993 0042 9B5C     	 ldrb r3,[r3,r2]
 3994 0044 002B     	 cmp r3,#0
 3995 0046 08D1     	 bne .L173
1673:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1674:../Dave/Generated/SPI_MASTER/spi_master.c ****     if (XMC_SPI_CH_MODE_DUAL <= mode)
 3996              	 .loc 3 1674 0
 3997 0048 FB1C     	 add r3,r7,#3
 3998 004a 1B78     	 ldrb r3,[r3]
 3999 004c 052B     	 cmp r3,#5
 4000 004e 1FD9     	 bls .L172
1675:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1676:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_FAILURE;
 4001              	 .loc 3 1676 0
 4002 0050 0F23     	 mov r3,#15
 4003 0052 FB18     	 add r3,r7,r3
 4004 0054 0122     	 mov r2,#1
 4005 0056 1A70     	 strb r2,[r3]
 4006 0058 1AE0     	 b .L172
 4007              	.L173:
1677:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1678:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1679:../Dave/Generated/SPI_MASTER/spi_master.c ****   else
1680:../Dave/Generated/SPI_MASTER/spi_master.c ****   {
1681:../Dave/Generated/SPI_MASTER/spi_master.c ****     if ((mode == XMC_SPI_CH_MODE_STANDARD) && (handle->runtime->dx0_input == SPI_MASTER_INPUT_INVAL
 4008              	 .loc 3 1681 0
 4009 005a FB1C     	 add r3,r7,#3
 4010 005c 1B78     	 ldrb r3,[r3]
 4011 005e 002B     	 cmp r3,#0
 4012 0060 09D1     	 bne .L175
 4013              	 .loc 3 1681 0 is_stmt 0 discriminator 1
 4014 0062 7B68     	 ldr r3,[r7,#4]
 4015 0064 9B68     	 ldr r3,[r3,#8]
 4016 0066 5B7F     	 ldrb r3,[r3,#29]
 4017 0068 072B     	 cmp r3,#7
 4018 006a 04D1     	 bne .L175
1682:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1683:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_FAILURE;
 4019              	 .loc 3 1683 0 is_stmt 1
 4020 006c 0F23     	 mov r3,#15
 4021 006e FB18     	 add r3,r7,r3
 4022 0070 0122     	 mov r2,#1
 4023 0072 1A70     	 strb r2,[r3]
 4024 0074 0CE0     	 b .L172
 4025              	.L175:
1684:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1685:../Dave/Generated/SPI_MASTER/spi_master.c **** 
1686:../Dave/Generated/SPI_MASTER/spi_master.c ****     else if ((mode == XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX) && (handle->runtime->dx0_input_half_dupl
 4026              	 .loc 3 1686 0
 4027 0076 FB1C     	 add r3,r7,#3
 4028 0078 1B78     	 ldrb r3,[r3]
 4029 007a 052B     	 cmp r3,#5
 4030 007c 08D1     	 bne .L172
 4031              	 .loc 3 1686 0 is_stmt 0 discriminator 1
 4032 007e 7B68     	 ldr r3,[r7,#4]
 4033 0080 9B68     	 ldr r3,[r3,#8]
 4034 0082 9B7F     	 ldrb r3,[r3,#30]
 4035 0084 072B     	 cmp r3,#7
 4036 0086 03D1     	 bne .L172
1687:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1688:../Dave/Generated/SPI_MASTER/spi_master.c ****       status = SPI_MASTER_STATUS_FAILURE;
 4037              	 .loc 3 1688 0 is_stmt 1
 4038 0088 0F23     	 mov r3,#15
 4039 008a FB18     	 add r3,r7,r3
 4040 008c 0122     	 mov r2,#1
 4041 008e 1A70     	 strb r2,[r3]
 4042              	.L172:
1689:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1690:../Dave/Generated/SPI_MASTER/spi_master.c ****     else
1691:../Dave/Generated/SPI_MASTER/spi_master.c ****     {
1692:../Dave/Generated/SPI_MASTER/spi_master.c ****         /* added to abide MISRA */
1693:../Dave/Generated/SPI_MASTER/spi_master.c ****     }
1694:../Dave/Generated/SPI_MASTER/spi_master.c ****   }
1695:../Dave/Generated/SPI_MASTER/spi_master.c ****   return status;
 4043              	 .loc 3 1695 0
 4044 0090 0F23     	 mov r3,#15
 4045 0092 FB18     	 add r3,r7,r3
 4046 0094 1B78     	 ldrb r3,[r3]
1696:../Dave/Generated/SPI_MASTER/spi_master.c **** }
 4047              	 .loc 3 1696 0
 4048 0096 181C     	 mov r0,r3
 4049 0098 BD46     	 mov sp,r7
 4050 009a 04B0     	 add sp,sp,#16
 4051              	 
 4052 009c 80BD     	 pop {r7,pc}
 4053              	 .cfi_endproc
 4054              	.LFE220:
 4056 009e C046     	 .section .data.dummy_data.7074,"aw",%progbits
 4057              	 .align 2
 4060              	dummy_data.7074:
 4061 0000 FF       	 .byte -1
 4062 0001 FF       	 .byte -1
 4063 0002 0000     	 .text
 4064              	.Letext0:
 4065              	 .file 4 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4066              	 .file 5 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4067              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_gpio.h"
 4068              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc1_gpio.h"
 4069              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DAVE_Common.h"
 4070              	 .file 9 "../Dave/Generated/SPI_MASTER/spi_master.h"
 4071              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Include/cmsis_gcc.h"
 4072              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 spi_master.c
    {standard input}:18     .text.XMC_USIC_CH_SetInputSource:00000000 $t
    {standard input}:22     .text.XMC_USIC_CH_SetInputSource:00000000 XMC_USIC_CH_SetInputSource
    {standard input}:79     .text.XMC_USIC_CH_WriteToTBUFTCI:00000000 $t
    {standard input}:83     .text.XMC_USIC_CH_WriteToTBUFTCI:00000000 XMC_USIC_CH_WriteToTBUFTCI
    {standard input}:122    .text.XMC_USIC_CH_EnableEvent:00000000 $t
    {standard input}:126    .text.XMC_USIC_CH_EnableEvent:00000000 XMC_USIC_CH_EnableEvent
    {standard input}:159    .text.XMC_USIC_CH_DisableEvent:00000000 $t
    {standard input}:163    .text.XMC_USIC_CH_DisableEvent:00000000 XMC_USIC_CH_DisableEvent
    {standard input}:197    .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:201    .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:234    .text.XMC_USIC_CH_GetReceiveBufferStatus:00000000 $t
    {standard input}:238    .text.XMC_USIC_CH_GetReceiveBufferStatus:00000000 XMC_USIC_CH_GetReceiveBufferStatus
    {standard input}:270    .text.XMC_USIC_CH_TriggerServiceRequest:00000000 $t
    {standard input}:274    .text.XMC_USIC_CH_TriggerServiceRequest:00000000 XMC_USIC_CH_TriggerServiceRequest
    {standard input}:307    .text.XMC_USIC_CH_TXFIFO_EnableEvent:00000000 $t
    {standard input}:311    .text.XMC_USIC_CH_TXFIFO_EnableEvent:00000000 XMC_USIC_CH_TXFIFO_EnableEvent
    {standard input}:349    .text.XMC_USIC_CH_TXFIFO_DisableEvent:00000000 $t
    {standard input}:353    .text.XMC_USIC_CH_TXFIFO_DisableEvent:00000000 XMC_USIC_CH_TXFIFO_DisableEvent
    {standard input}:392    .text.XMC_USIC_CH_TXFIFO_PutDataHPCMode:00000000 $t
    {standard input}:396    .text.XMC_USIC_CH_TXFIFO_PutDataHPCMode:00000000 XMC_USIC_CH_TXFIFO_PutDataHPCMode
    {standard input}:435    .text.XMC_USIC_CH_TXFIFO_Flush:00000000 $t
    {standard input}:439    .text.XMC_USIC_CH_TXFIFO_Flush:00000000 XMC_USIC_CH_TXFIFO_Flush
    {standard input}:471    .text.XMC_USIC_CH_TXFIFO_IsFull:00000000 $t
    {standard input}:475    .text.XMC_USIC_CH_TXFIFO_IsFull:00000000 XMC_USIC_CH_TXFIFO_IsFull
    {standard input}:512    .text.XMC_USIC_CH_TXFIFO_IsEmpty:00000000 $t
    {standard input}:516    .text.XMC_USIC_CH_TXFIFO_IsEmpty:00000000 XMC_USIC_CH_TXFIFO_IsEmpty
    {standard input}:553    .text.XMC_USIC_CH_RXFIFO_EnableEvent:00000000 $t
    {standard input}:557    .text.XMC_USIC_CH_RXFIFO_EnableEvent:00000000 XMC_USIC_CH_RXFIFO_EnableEvent
    {standard input}:595    .text.XMC_USIC_CH_RXFIFO_DisableEvent:00000000 $t
    {standard input}:599    .text.XMC_USIC_CH_RXFIFO_DisableEvent:00000000 XMC_USIC_CH_RXFIFO_DisableEvent
    {standard input}:638    .text.XMC_USIC_CH_RXFIFO_Flush:00000000 $t
    {standard input}:642    .text.XMC_USIC_CH_RXFIFO_Flush:00000000 XMC_USIC_CH_RXFIFO_Flush
    {standard input}:674    .text.XMC_USIC_CH_RXFIFO_IsEmpty:00000000 $t
    {standard input}:678    .text.XMC_USIC_CH_RXFIFO_IsEmpty:00000000 XMC_USIC_CH_RXFIFO_IsEmpty
    {standard input}:714    .text.XMC_USIC_CH_ConfigureShiftClockOutput:00000000 $t
    {standard input}:718    .text.XMC_USIC_CH_ConfigureShiftClockOutput:00000000 XMC_USIC_CH_ConfigureShiftClockOutput
    {standard input}:759    .text.XMC_USIC_CH_ConfigureShiftClockOutput:00000028 $d
    {standard input}:764    .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:768    .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:807    .text.XMC_SPI_CH_Start:00000000 $t
    {standard input}:811    .text.XMC_SPI_CH_Start:00000000 XMC_SPI_CH_Start
    {standard input}:842    .text.XMC_SPI_CH_SetTransmitMode:00000000 $t
    {standard input}:846    .text.XMC_SPI_CH_SetTransmitMode:00000000 XMC_SPI_CH_SetTransmitMode
    {standard input}:890    .text.XMC_SPI_CH_SetSlaveSelectDelay:00000000 $t
    {standard input}:894    .text.XMC_SPI_CH_SetSlaveSelectDelay:00000000 XMC_SPI_CH_SetSlaveSelectDelay
    {standard input}:936    .text.XMC_SPI_CH_SetSlaveSelectDelay:0000002c $d
    {standard input}:941    .text.XMC_SPI_CH_ConfigureShiftClockOutput:00000000 $t
    {standard input}:945    .text.XMC_SPI_CH_ConfigureShiftClockOutput:00000000 XMC_SPI_CH_ConfigureShiftClockOutput
    {standard input}:980    .text.XMC_SPI_CH_SetInputSource:00000000 $t
    {standard input}:984    .text.XMC_SPI_CH_SetInputSource:00000000 XMC_SPI_CH_SetInputSource
    {standard input}:1046   .text.SPI_MASTER_GetAppVersion:00000000 $t
    {standard input}:1051   .text.SPI_MASTER_GetAppVersion:00000000 SPI_MASTER_GetAppVersion
    {standard input}:1117   .text.SPI_MASTER_GetAppVersion:00000058 $d
    {standard input}:1123   .text.SPI_MASTER_Init:00000000 $t
    {standard input}:1128   .text.SPI_MASTER_Init:00000000 SPI_MASTER_Init
    {standard input}:1168   .text.SPI_MASTER_SetMode:00000000 $t
    {standard input}:1173   .text.SPI_MASTER_SetMode:00000000 SPI_MASTER_SetMode
    {standard input}:3940   .text.SPI_MASTER_lValidateModeChange:00000000 SPI_MASTER_lValidateModeChange
    {standard input}:3254   .text.SPI_MASTER_lPortConfig:00000000 SPI_MASTER_lPortConfig
    {standard input}:1280   .text.SPI_MASTER_SetBaudRate:00000000 $t
    {standard input}:1285   .text.SPI_MASTER_SetBaudRate:00000000 SPI_MASTER_SetBaudRate
    {standard input}:3737   .text.SPI_MASTER_lPortModeReset:00000000 SPI_MASTER_lPortModeReset
    {standard input}:3463   .text.SPI_MASTER_lPortModeSet:00000000 SPI_MASTER_lPortModeSet
    {standard input}:1418   .text.SPI_MASTER_Transmit:00000000 $t
    {standard input}:1423   .text.SPI_MASTER_Transmit:00000000 SPI_MASTER_Transmit
    {standard input}:1549   .text.SPI_MASTER_StartTransmitIRQ:00000000 SPI_MASTER_StartTransmitIRQ
    {standard input}:1481   .text.SPI_MASTER_Receive:00000000 $t
    {standard input}:1486   .text.SPI_MASTER_Receive:00000000 SPI_MASTER_Receive
    {standard input}:1726   .text.SPI_MASTER_StartReceiveIRQ:00000000 SPI_MASTER_StartReceiveIRQ
    {standard input}:1544   .text.SPI_MASTER_StartTransmitIRQ:00000000 $t
    {standard input}:1721   .text.SPI_MASTER_StartReceiveIRQ:00000000 $t
    {standard input}:2562   .text.SPI_MASTER_lReceiveIRQ:00000000 SPI_MASTER_lReceiveIRQ
    {standard input}:1853   .text.SPI_MASTER_StartReceiveIRQ:000000b4 $d
    {standard input}:4060   .data.dummy_data.7074:00000000 dummy_data.7074
    {standard input}:1858   .text.SPI_MASTER_Transfer:00000000 $t
    {standard input}:1863   .text.SPI_MASTER_Transfer:00000000 SPI_MASTER_Transfer
    {standard input}:2006   .text.SPI_MASTER_AbortReceive:00000000 $t
    {standard input}:2011   .text.SPI_MASTER_AbortReceive:00000000 SPI_MASTER_AbortReceive
    {standard input}:2135   .text.SPI_MASTER_AbortTransmit:00000000 SPI_MASTER_AbortTransmit
    {standard input}:2130   .text.SPI_MASTER_AbortTransmit:00000000 $t
    {standard input}:2239   .text.SPI_MASTER_lTransmitHandler:00000000 $t
    {standard input}:2244   .text.SPI_MASTER_lTransmitHandler:00000000 SPI_MASTER_lTransmitHandler
    {standard input}:2553   .text.SPI_MASTER_lTransmitHandler:000001ec $d
    {standard input}:2558   .text.SPI_MASTER_lReceiveIRQ:00000000 $t
    {standard input}:3217   .text.SPI_MASTER_lStdRBUFFlush:00000000 SPI_MASTER_lStdRBUFFlush
    {standard input}:3127   .text.SPI_MASTER_lReconfigureRxFIFO:00000000 SPI_MASTER_lReconfigureRxFIFO
    {standard input}:2686   .text.SPI_MASTER_lReceiveHandler:00000000 $t
    {standard input}:2691   .text.SPI_MASTER_lReceiveHandler:00000000 SPI_MASTER_lReceiveHandler
    {standard input}:2977   .text.SPI_MASTER_lFIFORead:00000000 SPI_MASTER_lFIFORead
    {standard input}:2973   .text.SPI_MASTER_lFIFORead:00000000 $t
    {standard input}:3123   .text.SPI_MASTER_lReconfigureRxFIFO:00000000 $t
    {standard input}:3213   .text.SPI_MASTER_lStdRBUFFlush:00000000 $t
    {standard input}:3250   .text.SPI_MASTER_lPortConfig:00000000 $t
    {standard input}:3459   .text.SPI_MASTER_lPortModeSet:00000000 $t
    {standard input}:3733   .text.SPI_MASTER_lPortModeReset:00000000 $t
    {standard input}:3936   .text.SPI_MASTER_lValidateModeChange:00000000 $t
    {standard input}:4057   .data.dummy_data.7074:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SPI_CH_Stop
XMC_SPI_CH_SetBaudrate
XMC_SPI_CH_DisableEvent
XMC_SPI_CH_GetReceivedData
XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
XMC_GPIO_SetMode
XMC_GPIO_SetHardwareControl
