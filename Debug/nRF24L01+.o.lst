   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "nRF24L01+.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_SetOutputHigh:
  23              	.LFB64:
  24              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 262 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
 263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  42              	 .loc 1 265 0
  43 000e FB1C     	 add r3,r7,#3
  44 0010 1B78     	 ldrb r3,[r3]
  45 0012 0122     	 mov r2,#1
  46 0014 9A40     	 lsl r2,r2,r3
  47 0016 7B68     	 ldr r3,[r7,#4]
  48 0018 5A60     	 str r2,[r3,#4]
 266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** }
  49              	 .loc 1 266 0
  50 001a BD46     	 mov sp,r7
  51 001c 02B0     	 add sp,sp,#8
  52              	 
  53 001e 80BD     	 pop {r7,pc}
  54              	 .cfi_endproc
  55              	.LFE64:
  57              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  58              	 .align 2
  59              	 .code 16
  60              	 .thumb_func
  62              	XMC_GPIO_SetOutputLow:
  63              	.LFB65:
 267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** {
  64              	 .loc 1 288 0
  65              	 .cfi_startproc
  66 0000 80B5     	 push {r7,lr}
  67              	.LCFI3:
  68              	 .cfi_def_cfa_offset 8
  69              	 .cfi_offset 7,-8
  70              	 .cfi_offset 14,-4
  71 0002 82B0     	 sub sp,sp,#8
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 16
  74 0004 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77 0006 7860     	 str r0,[r7,#4]
  78 0008 0A1C     	 mov r2,r1
  79 000a FB1C     	 add r3,r7,#3
  80 000c 1A70     	 strb r2,[r3]
 289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  81              	 .loc 1 291 0
  82 000e FB1C     	 add r3,r7,#3
  83 0010 1B78     	 ldrb r3,[r3]
  84 0012 8022     	 mov r2,#128
  85 0014 5202     	 lsl r2,r2,#9
  86 0016 9A40     	 lsl r2,r2,r3
  87 0018 7B68     	 ldr r3,[r7,#4]
  88 001a 5A60     	 str r2,[r3,#4]
 292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_gpio.h **** }
  89              	 .loc 1 292 0
  90 001c BD46     	 mov sp,r7
  91 001e 02B0     	 add sp,sp,#8
  92              	 
  93 0020 80BD     	 pop {r7,pc}
  94              	 .cfi_endproc
  95              	.LFE65:
  97 0022 C046     	 .section .text.SPI_MASTER_EnableSlaveSelectSignal,"ax",%progbits
  98              	 .align 2
  99              	 .code 16
 100              	 .thumb_func
 102              	SPI_MASTER_EnableSlaveSelectSignal:
 103              	.LFB182:
 104              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER/spi_master.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @file spi_master.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @date 2016-06-20
   4:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * NOTE:
   6:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   8:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @cond
   9:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  10:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI_MASTER v4.3.30 - Configures the properties of USIC channel to support SPI mode of communicat
  11:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  13:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * All rights reserved.
  14:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  15:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * following conditions are met:
  17:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  18:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   disclaimer.
  20:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  24:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   products derived from this software without specific prior written permission.
  26:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  27:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  35:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  38:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Change History
  40:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * --------------
  41:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  42:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-16:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Initial version<br>
  44:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  45:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-20:
  46:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Added 'SPI_MASTER_INPUT_INVALID' in SPI_MASTER_INPUT_t to support dynamic mode change from
  47:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       as well<br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-05-08:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_SetBaudRate() and SPI_MASTER_Transfer() are added<br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - C++ guard applied to API section only<br>
  52:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - File guard updated according to the guidelines<br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "SPI_MASTER_STATUS_BUFFER_INVALID" is added in SPI_MASTER_STATUS_t enum<br>
  54:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "leading_trailing_delay" is added in APP config structure<br>
  55:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "tx_data_dummy" is added in Dynamic config structure to support SPI_MASTER_Transfer() API<
  56:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - XMC_ASSERT() are for NULL handle check in inline APIs<br>
  57:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_lTransmitHandler(), SPI_MASTER_lReceiveHandler(), SPI_MASTER_lProtocolHandler()
  58:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       spi_master_conf.c file<br>
  59:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  60:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-06-20:
  61:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - For SPI_MASTER_Transfer(), SPI_MASTER_Receive(), SPI_MASTER_Transmit() APIs, the input dat
  62:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       from 16-bit to 8-bit.
  63:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - word_length fields is added in SPI_MASTER_DYNAMIC_CONFIG_t, to support runtime change.
  64:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Abort API are updated to return the status.
  65:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-07-07:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - DYNAMIC_CONFIG_t is renamed as RUNTIME_t
  68:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  69:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-09-30:
  70:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - New SPI_MASTER_STATUS_MODE_MISMATCH item is added in SPI_MASTER_STATUS_t
  71:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  72:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-08:
  73:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_DMA_MAXCOUNT is exposed to the user.
  74:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - dx0_input_half_duplex is added to support while changing the mode to half duplex mode.
  75:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_IsTxBusy() and SPI_MASTER_IsRxBusy() APIs are added to return the current state
  76:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Documentation update.
  77:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  78:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-14:
  79:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - new variable "spi_master_config_mode" to store the actual mode generated during initialisa
  80:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2016-04-07:
  82:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - runtime variable are made as volatile.
  83:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  84:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2021-01-08:
  85:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Modified check for minimum XMCLib version
  86:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  87:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcond
  88:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  89:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
  90:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
  91:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #ifndef SPI_MASTER_H
  92:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_H
  93:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
  94:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * HEADER FILES
  95:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  96:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_gpio.h"
  97:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_scu.h"
  98:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_spi.h"
  99:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "DAVE_Common.h"
 100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "spi_master_conf.h"
 101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "GLOBAL_DMA/global_dma.h"
 104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * MACROS
 108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_MAJOR_VERSION 2
 110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_MINOR_VERSION 1
 111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_PATCH_VERSION 6
 112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if !((XMC_LIB_MAJOR_VERSION > SPI_MASTER_XMC_LIB_MAJOR_VERSION) ||\
 114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****       ((XMC_LIB_MAJOR_VERSION == SPI_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > SPI_
 115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****       ((XMC_LIB_MAJOR_VERSION == SPI_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == SPI
 116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #error "SPI_MASTER requires XMC Peripheral Library v2.1.6 or higher"
 117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /*
 120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Represents the maximum data size for DMA transaction*/
 121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_DMA_MAXCOUNT (4095U)
 122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * ENUMS
 124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_enumerations
 127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Return status of the SPI_MASTER APP
 131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_STATUS
 133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_SUCCESS = 0U,   /**< Status success */
 135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_FAILURE,        /**< Status failure */
 136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUSY,           /**< Busy state */
 137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUFFER_INVALID,  /**< If input buffer and length is invalid */
 138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_MODE_MISMATCH   /**< API invoked by a handle configured with different mode.
 139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                          e.g, If SPI_MASTER_StartTransmitDMA is invoked for an inst
 140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                          which has transmit mode configured as "Interrupt", will
 141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                          return this status.*/
 142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_STATUS_t;
 143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Service ID for Transmit, Receive and Parity events
 146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SR_ID
 148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_0 = 0U, /**< SR-0 */
 150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_1,      /**< SR-1 */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_2,      /**< SR-2 */
 152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_3,      /**< SR-3 */
 153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_4,      /**< SR-4 */
 154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_5       /**< SR-5 */
 155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SR_ID_t;
 156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Slave select signals
 159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SS_SIGNAL
 161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_0 = 0U, /**< Slave select 0 */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_1,      /**< Slave select 1 */
 164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_2,      /**< Slave select 2 */
 165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_3,      /**< Slave select 3 */
 166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_4,      /**< Slave select 4 */
 167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_5,      /**< Slave select 5 */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_6,      /**< Slave select 6 */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_7       /**< Slave select 7 */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SS_SIGNAL_t;
 171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum type which defines Receive input list
 174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_INPUT
 176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_A = 0U, /**< Input-A */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_B,      /**< Input-B */
 179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_C,      /**< Input-C */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_D,      /**< Input-D */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_E,      /**< Input-E */
 182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_F,      /**< Input-F */
 183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_G,      /**< Input-G */
 184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_INVALID /**< This is to check during mode switch */
 185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_INPUT_t;
 186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_TRANSFER_MODE
 191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_TRANSFER_MODE_t;
 196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef void (*SPI_MASTER_functionhandler)(void);
 201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef SPI_MASTER_STATUS_t (*SPI_MASTER_lInit_functionhandler)(void);
 202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** * DATA STRUCTURES
 205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** * @ingroup SPI_MASTER_datastructures
 208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** * @{
 209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Port pin selection for communication
 213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO
 215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_PORT_t* port;  /**< Reference to the port configuration */
 217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t pin;  /**< Selected pin */
 218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_t;
 219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Pin configuration for the selected pins
 222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO_CONFIG
 224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_CONFIG_t port_config;  /**< Properties of the port pin */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_HWCTRL_t hw_control;  /**<  hardware control characteristics of the pin */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_SLAVE_SELECT_t slave_select_ch;  /**<  Indicates the mapped slave select line  */
 228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_CONFIG_t;
 229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Configuration parameters of SPI_MASTER APP
 232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  typedef struct SPI_MASTER_CONFIG
 234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_CONFIG_t * const channel_config;         /**< Reference to SPI configuration structure
 236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_lInit_functionhandler fptr_spi_master_config;  /**< Function pointer to configure the 
 237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Port configuration */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_0_pin;               /**< Reference to mosi 0 pin */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_0_pin_config; /**< Reference to mosi 0 pin configurati
 241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_1_pin;               /**< Reference to mosi 1 pin */
 242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_1_pin_config; /**< Reference to mosi 1 pin configurati
 243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_2_pin;               /**< Reference to mosi 2 pin */
 244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_2_pin_config; /**< Reference to mosi 2 pin configurati
 245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_3_pin;               /**< Reference to mosi 3 pin */
 246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_3_pin_config; /**< Reference to mosi 3 pin configurati
 247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const sclk_out_pin;             /**< Reference to sclk out pin */
 248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const sclk_out_pin_config;/**< Reference to shift clock pin confi
 249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const slave_select_pin[8];      /**< Reference to slave select pin */
 250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const slave_select_pin_config[8]; /**< Reference to slave select 
 251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler tx_cbhandler;            /**< callback handler for end of transmission
 252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler rx_cbhandler;            /**< callback handler for end of reception */
 253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler parity_cbhandler;        /**< callback handler for end of parity error
 254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   /* FIFO configuration */
 255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t tx_fifo_size;               /**< Number of FIFO entries assigned to the t
 256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t rx_fifo_size;               /**< Number of FIFO entries assigned to the r
 257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Clock Settings */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t shift_clk_passive_level; /**< Baudrate Generator shift
 260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t transmit_mode;           /**< Indicates how the transmit mode is being
 261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t receive_mode;            /**< Indicates how the receive mode is being 
 262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_MODE_t  spi_master_config_mode;          /**< Defines the SPI transmit mode being used
 263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t slave_select_lines;                         /**< Number of slave select lines being used 
 264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t leading_trailing_delay;                     /**< Delay before and after each frame in ter
 265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t tx_sr;                           /**< Service request number assigned to trans
 266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t rx_sr;                           /**< Service request number assigned to recei
 267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t parity_sr;                       /**< Service request number assigned to recei
 268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_CONFIG_t;
 269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Structure to hold the dynamic variables for the SPI_MASTER communication.
 272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_RUNTIME
 274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t word_length;                              /**< Indicates the length of the data word */
 276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t tx_data_count;                            /**< Number of bytes of data to be transmitted
 277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t tx_data_index;                   /**< Index to the byte to be transmitted next 
 278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           buffer */
 279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t rx_data_count;                            /**< Number of bytes of data to be received*/
 280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t rx_data_index;                   /**< Indicates the number of bytes currently a
 281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           rx_data buffer */
 282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* rx_data;                                  /**< Pointer to the receive data buffer*/
 283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* tx_data;                                  /**< Pointer to the transmit data buffer*/
 284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile XMC_SPI_CH_MODE_t  spi_master_mode;       /**< Defines the SPI transmit mode being used 
 285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input;                      /**< DX0 input channel used for Rx input, This
 286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to full duplex mode */
 287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input_half_duplex;          /**< DX0 input channel used for Rx input, This
 288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to half duplex mode */
 289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_busy;                            /**< Status flag to indicate busy when a recep
 290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_busy;                            /**< Status flag to indicate busy when a trans
 291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_data_dummy;                      /**< Status flag to indicate, dummy data is be
 292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_data_dummy;                      /**< Status flag to indicate, receive data has
 293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           not */
 294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  } SPI_MASTER_RUNTIME_t;
 295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialization parameters of SPI_MASTER APP
 299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER
 301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_t* const channel; /**< Reference to SPI channel */
 303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_CONFIG_t * const config; /**< Reference to the SPI_MASTER configuration structur
 304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_RUNTIME_t * const runtime;  /**< Reference to SPI_MASTER dynamic configuration structu
 305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if ((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma;
 307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_tx_config; /**< Reference to the DMA configuration struc
 310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_rx_config; /**< Reference to the DMA configuration struc
 313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma_rx;
 314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_rx_number;
 315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_tx_number;
 318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_t;
 320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** * API Prototypes
 326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #ifdef __cplusplus
 328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** extern "C" {
 329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_apidoc
 332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Get SPI_MASTER APP version
 336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function can be used to check application software compatibility with a
 340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * specific version of the APP.
 341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_APP_VERSION_t app_version;
 349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   app_version = SPI_MASTER_GetAppVersion();
 353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if (app_version.major != 4U)
 355:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 356:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     // Probably, not the right version.
 357:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 358:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 359:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   while(1U)
 360:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 361:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 362:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   return 1;
 363:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 364:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 365:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** DAVE_APP_VERSION_t SPI_MASTER_GetAppVersion(void);
 367:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 368:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 369:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialize the SPI channel as per the configuration made in GUI.
 370:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 371:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return SPI_MASTER_STATUS_t: Status of SPI_MASTER driver initialization.\n
 372:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_SUCCESS - on successful initialization.\n
 373:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_FAILURE - if initialization fails.\n
 374:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 375:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 376:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Initializes IO pins used for the SPI_MASTER communication and configures USIC registers based on
 377:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * provided in the GUI. Calculates divider values PDIV and STEP for a precise baudrate. It also ena
 378:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt flags and service request values.
 379:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 380:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 381:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 382:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 383:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 384:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 385:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  int main(void)
 386:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  {
 387:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    DAVE_STATUS_t status;
 388:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 389:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 390:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 391:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(status == DAVE_STATUS_SUCCESS)
 392:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 393:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *        while(1U)
 394:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *        {
 395:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *        }
 396:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 397:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    else
 398:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 399:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 400:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 401:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 402:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 403:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 404:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     return 1U;
 405:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 406:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 407:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 408:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Init(SPI_MASTER_t* const handle);
 409:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 411:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the communication mode along with required port configuration.
 412:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 413:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 414:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param mode SPI working mode
 415:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 416:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 417:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of settings are successful\n
 418:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if mode is not supported by the selected pins\n
 419:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with transmit or receive operation\
 420:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 421:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 422:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 423:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * To change the mode of communication, it is advised to generate the code in Quad/Dual mode initia
 424:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the mode will be taken care by the APP.
 425:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <ul>
 426:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Quad mode, it is possible to change to other modes like Dual, Half 
 427:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Dual mode, it is possible to change to other modes like Half Duplex
 428:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for full-duplex mode, it is possible to change to Half Duplex only </li
 429:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * </ul>
 430:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 
 431:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 432:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 433:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 434:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 435:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 436:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 437:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 438:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Precondition:
 439:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Configure the SPI_MASTER APP operation mode as 'Quad SPI'.
 440:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 441:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master device mode to Full duplex mode and starts sending 
 442:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 443:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 444:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 445:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 446:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 447:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 448:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 449:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 450:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 451:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 452:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 453:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 454:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    spi_status = SPI_MASTER_SetMode(&SPI_MASTER_0, XMC_SPI_CH_MODE_STANDARD);
 455:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 456:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 457:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 458:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 459:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 460:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 461:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 462:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 463:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 464:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 465:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 466:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 467:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 468:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 469:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 470:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 471:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 472:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetMode(SPI_MASTER_t* const handle, const XMC_SPI_CH_MODE_t mode);
 473:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 474:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 475:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the required baud rate during runtime.
 476:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 477:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 478:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param baud_rate required baud rate
 479:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 480:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 481:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of baud rate is successful\n
 482:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if updation is failed\n
 483:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with other operation\n
 484:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 485:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 486:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 487:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * While setting the baud rate to avoid noise of the port pins, all the pins are changed to input. 
 488:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * required baud again ports are initialised with the configured settings.
 489:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 490:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 491:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 492:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 493:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 494:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 495:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 496:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 497:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master baud rate to 9600 and starts sending the data store
 498:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 499:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 500:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 501:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 502:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 503:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 504:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 505:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint32_t baud_rate;
 506:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 507:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 508:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 509:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 510:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     baud_rate = 9600U;
 511:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 512:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     spi_status = SPI_MASTER_SetBaudRate(&SPI_MASTER_0, baud_rate);
 513:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 514:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 515:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 516:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 517:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 518:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 519:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 520:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 521:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 522:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 523:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 524:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 525:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 526:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 527:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 528:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 529:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 530:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetBaudRate(SPI_MASTER_t* const handle, const uint32_t baud_rate);
 531:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 532:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 533:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 534:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 535:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 536:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 537:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 538:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 539:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 540:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 541:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 542:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 543:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 544:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 545:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** * Transmits data using the SPI channel as a master device. Transmission is accomplished using the t
 546:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * as configured in the UI.<br>
 547:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 548:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure
 549:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 550:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed. If transmit FIFO is enabled, the trigger limit is set to 1.
 551:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * So the transmit interrupt will be generated when all the data in FIFO is moved out of FIFO.
 552:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The APP handle's runtime structure is used to store the data pointer, count, data index
 553:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * and status of transmission. This function only registers a data transmission request if
 554:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * there is no active transmission in progress. Actual data transmission happens in the transmit
 555:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt service routine. A trigger is generated for the transmit interrupt to start loading
 556:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data to the transmit buffer. If transmit FIFO is configured, the data is filled into the FIF
 557:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmit interrupt will be generated subsequently when the transmit FIFO is empty. At this
 558:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * point of time, if there is some more data to be transmitted, it is loaded to the FIFO again.
 559:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * When FIFO is not enabled, data is transmitted one byte at a time. On transmission of each byte
 560:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 561:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 562:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 563:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 564:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the completion of data transmission or use SPI_MASTER_IsTxBusy() API.<br>
 565:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 566:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. A DMA channel is configured to p
 567:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * data to the SPI channel transmit buffer. This removes the load off the CPU. This API will only c
 568:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * and enable the DMA channel by specifying the data buffer and count of bytes to transmit. Rest is
 569:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * care without the CPU's intervention. User can configure a callback function in the APP UI. When 
 570:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * transmission is complete, the callback function will be executed. FIFO will not be used in DMA m
 571:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Receive start interrupt is configured for triggering the DMA channel. So each byte is transmitte
 572:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the background through the DMA channel.
 573:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If the callback function is not configured, \a handle->runtime->tx_busy flag can be checked to
 574:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * verify if the transmission is complete.
 575:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct:</b><br>
 576:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be transmitted using polling method. Status flags are used to check if data can be tra
 577:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is tr
 578:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 579:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 580:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 581:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 582:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 583:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 584:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 585:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
 586:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 587:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 588:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 589:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 590:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 591:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 592:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 593:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 594:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 595:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 596:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 597:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
 598:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 599:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 600:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 601:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 602:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 603:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 604:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 605:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 606:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 607:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 608:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 609:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 610:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 611:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 612:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 613:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 614:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 615:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 616:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transmit(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_
 617:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 618:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 619:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 620:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 621:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 622:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 623:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 624:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 625:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 626:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 627:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 628:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 629:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 630:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received from the SPI slave synchronously. After the requested number of data bytes
 631:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 632:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data reception is accomplished using the receive mode selected in the UI.
 633:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 634:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Based on the UI configuration, either standard receive buffer(RBUF) or receive FIFO(OUT) is used
 635:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * for data reception. An interrupt is configured for reading received data from the bus. This func
 636:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * only registers a request to receive a number of data bytes from a USIC channel. If FIFO is
 637:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for reception, the FIFO limit is dynamically configured to optimally utilize the
 638:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * CPU load. Before starting data reception, the receive buffers are flushed. So only those data, r
 639:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 640:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 641:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 642:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 643:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 644:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 645:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 646:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 647:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. In this mode, a DMA channel is
 648:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for receiving data from standard receive buffer(RBUF) to the user buffer. By calling
 649:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * this API, the DMA channel destination address is configured to the user buffer and the channel i
 650:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * enabled. Receive FIFO will not be used when the receive mode is DMA.
 651:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Before starting data reception, the receive buffers are flushed. So only those data, received
 652:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 653:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 654:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 655:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 656:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 657:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 658:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 659:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct</b><br>
 660:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * In Direct receive mode, neither interrupt nor DMA is used. The API polls
 661:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the receive flag to read the received data and waits for all the requested number of bytes to
 662:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * be received. Based on FIFO configuration, either RBUF or OUT register is used for reading receiv
 663:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * data. Before starting data reception, the receive buffers are flushed. So only those data, recei
 664:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 665:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is re
 666:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 667:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 668:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 669:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 670:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 671:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 672:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 673:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 674:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Receives 10 bytes of data from slave.
 675:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 676:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 677:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 678:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 679:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 680:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 681:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 682:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 683:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 684:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 10U))
 685:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 686:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 687:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 688:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 689:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 690:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 691:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 692:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 693:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 694:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 695:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 696:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 697:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 698:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 699:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 700:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 701:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 702:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Receive(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_t
 703:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 704:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 705:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits and Receives the specified number of data words and execute the receive callbac
 706:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *        in GUI.
 707:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 708:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 709:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param tx_dataptr Pointer to data buffer which has to be send
 710:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param rx_dataptr Pointer to data buffer where the received data has to be stored.
 711:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read and write
 712:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 713:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 714:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS   : if transfer of data is successful\n
 715:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE   : if transfer of data is failed (or) in other than standard
 716:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if passed buffers are NULL pointers (or) length of d
 717:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 718:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 719:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmits and receives data simultaneously using the SPI channel as a master device. API is appl
 720:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Full duplex</> operation mode. Data transfer happens based on the individual modes configured
 721:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception.<br>
 722:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Two data pins MOSI and MISO will be used for receiving and transmitting data respectively. A cal
 723:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured to execute after completing the transfer when 'Interrupt' or 'DMA' mode is used. The 
 724:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * should be configured for <i>End of receive/transfer callback</i> in the 'Interrupt Settings' tab
 725:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed when the last word of data is received.
 726:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 727:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 728:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 729:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 730:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 731:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 732:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 733:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 734:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition: Operation mode should be 'Full Duplex"
 735:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 736:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits and Receives 10 bytes of data from slave in parallel.
 737:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 738:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 739:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 740:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 741:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 742:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t SendData[10] = {0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA};
 743:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 744:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 745:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 746:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 747:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 748:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transfer(&SPI_MASTER_0, SendData, ReadData, 10);
 749:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 750:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 751:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 752:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 753:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 754:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 755:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 756:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 757:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 758:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 759:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 760:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 761:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transfer(const SPI_MASTER_t *const handle,
 762:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* tx_dataptr,
 763:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* rx_dataptr,
 764:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint32_t count);
 765:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 766:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
 767:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 768:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 769:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 770:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 771:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 772:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 773:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 774:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 775:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 776:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 777:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH if receive mode is DMA.
 778:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 779:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 780:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * After receiving the specified number of words (word length configured), the user configured call
 781:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * is executed, if it is enabled. If a callback function is not configured on the APP UI, the user 
 782:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the status of rx_busy variable of the APP handle structure. Based on the UI configuration, eithe
 783:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * buffer or receive FIFO is used for data reception. An interrupt is configured for received data 
 784:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function only registers a request to receive a number of data bytes from a SPI channel. If FIFO 
 785:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.
 786:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_irq_flow_chart">Click her
 787:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 788:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 789:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 790:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 791:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 792:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 793:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 794:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 795:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 796:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 797:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 798:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 799:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 800:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 801:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 802:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 803:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartReceiveIRQ(&SPI_MASTER_0, ReadData, 10U))
 804:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 805:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 806:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 807:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 808:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, ReadData, 10U);
 809:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 810:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 811:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 812:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 813:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 814:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 815:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 816:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 817:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 818:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 819:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 820:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 821:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 822:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveIRQ(const SPI_MASTER_t *const handle, uint8_t* dataptr, 
 823:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 824:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 825:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_INTERRUPT_TRANSMIT_MODE == 1U)
 826:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 827:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 828:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 829:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 830:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 831:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 832:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 833:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 834:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 835:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 836:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if the data_ptr is NULL or count is 0. \n
 837:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is DMA.
 838:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 839:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 840:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 841:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. After transmitting the total dat
 842:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function is executed. If transmit FIFO is enabled, the trigger limit is set to 1. So the transmi
 843:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * generated when all the data in FIFO is moved from FIFO. The function uses APP handle's dynamic s
 844:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data pointer, count, data index and status of transmission. This function only registers a d
 845:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * request if there is no active transmission in progress. Actual data transmission happens in the 
 846:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * service routine. A trigger is generated for the transmit interrupt to start loading the data. If
 847:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured, the data is filled into the FIFO with trigger limit set to 1. Transmit interrupt wil
 848:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * when the transmit FIFO is empty. At this point of time, if there is some more data to be transmi
 849:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * to the FIFO again. When FIFO is not enabled, data is transmitted one byte at a time. On transmis
 850:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 851:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_irq_flow_chart">Click he
 852:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 853:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 854:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 855:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 856:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 857:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 858:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Pre-condition:
 859:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmit mode should be configured as "Interrupt".
 860:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 861:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" data to slave.
 862:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 863:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 864:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 865:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 866:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 867:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 868:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 869:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 870:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 871:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 872:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartTransmitIRQ(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_ST
 873:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 874:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 875:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 876:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 877:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 878:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 879:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 880:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 881:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 882:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 883:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 884:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 885:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 886:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 887:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 888:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 889:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 890:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 891:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitIRQ(const SPI_MASTER_t *const handle, uint8_t *addr, ui
 892:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 893:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 894:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 895:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 896:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 897:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for receiving data over SPI_MASTER channel using DMA.
 898:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 899:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 900:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  Pointer to SPI_MASTER_t handle structure
 901:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param data_ptr  Pointer to data of type uint8_t.
 902:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count  Total no of bytes to be received.\n
 903:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                \b Range: minimum= 1, maximum= 4096.
 904:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 905:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status for receive request.\n
 906:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 907:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a reception is in progress.\n
 908:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is
 909:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if receive mode is Interrupt \n
 910:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 911:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 912:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 913:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received,
 914:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 915:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 916:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 917:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 918:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 919:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 920:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 921:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * A maximum of 4096 bytes can be received in one API call. This limit is because of the DMA single
 922:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_dma_flow_chart">Click her
 923:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 924:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 925:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 926:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 927:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 928:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 929:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre condition:
 930:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Receive mode should be configured to "DMA"
 931:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Receive 10 bytes from slave.
 932:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 933:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 934:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
 935:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 936:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
 937:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t ReadData[10];
 938:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 939:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
 940:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
 941:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 942:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartReceiveDMA(&SPI_MASTER_0, ReadData, 10) == SPI_MASTER_STATUS_SUCCESS)
 943:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 944:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->rx_busy)
 945:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
 946:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
 947:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 948:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 949:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
 950:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 951:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 952:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
 953:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
 954:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
 955:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 956:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
 957:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
 958:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 959:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 960:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 961:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveDMA(const SPI_MASTER_t  *const handle, uint8_t *addr, ui
 962:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 963:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 964:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 965:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 966:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for transmitting data over SPI_MASTER channel using DMA.
 967:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 968:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  SPI_MASTER APP handle pointer of type @ref SPI_MASTER_t
 969:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  data_ptr Pointer to data of type uint8_t.
 970:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count Total number of words to be transmitted.\n
 971:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \b Range: minimum= 1, maximum= 4096.
 972:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 973:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status of transmit request.\n
 974:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 975:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a transmission is in progress.\n
 976:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER__STATUS_BUFFER_INVALID if the data_ptr is NULL or count i
 977:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is Interrupt \n
 978:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 979:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 980:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * request is registered.
 981:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 982:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 983:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 984:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * is fully transmitted, the callback function will be executed.
 985:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function uses APP handle's runtime structure to store the status of transmission.
 986:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 987:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * data transmission happens through DMA channel. A maximum of 4095 bytes can be transmitted in one
 988:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * is because of the DMA single block size. Callback function is executed when all the data bytes a
 989:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 990:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for the completion of data tran
 991:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 992:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * multiple calls to this API.
 993:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_dma_flow_chart">Click he
 994:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 995:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 996:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 997:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 998:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 999:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre-condition:
1000:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Transmit mode should be configured as "DMA".
1001:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Transmits "Infineon" data to the slave
1002:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1003:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1004:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
1005:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1006:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
1007:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t Send_Data[] = "Infineon";
1008:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1009:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
1010:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
1011:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1012:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartTransmitDMA(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_
1013:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1014:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->tx_busy)
1015:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
1016:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
1017:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1018:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1019:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
1020:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1021:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1022:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
1023:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
1024:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
1025:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1026:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
1027:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
1028:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode
1029:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1030:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1031:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitDMA(const SPI_MASTER_t *const handle, uint8_t *addr, ui
1032:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
1033:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1034:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1035:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Returns the state of the specified interrupt flag.
1036:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1037:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1038:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag Interrupt for which status is required
1039:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1040:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  uint32_t status of the interrupt
1041:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1042:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1043:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1044:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Returns the status of the events, by reading PSR register. This indicates the status of the all 
1045:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI communication.
1046:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1047:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1048:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1049:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1050:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1051:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1052:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1053:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1054:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not.
1055:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1056:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1057:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1058:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1059:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1060:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1061:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1062:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1063:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1064:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1065:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1066:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1067:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1068:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1069:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1070:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1071:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1072:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1073:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1074:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1075:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1076:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1077:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1078:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1079:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1080:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE uint32_t SPI_MASTER_GetFlagStatus(const SPI_MASTER_t* handle, const uint32_t flag)
1081:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
1082:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_GetFlagStatus:handle NULL" , (handle != NULL));
1083:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   return (XMC_SPI_CH_GetStatusFlag(handle->channel) & flag);
1084:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
1085:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1086:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1087:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Clears the status of the specified interrupt flags.
1088:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1089:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1090:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag_mask Interrupt for which status has to be cleared
1091:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1092:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1093:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1094:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * During communication the events occurred has to be cleared to get the successive events.\n
1095:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
1096:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * to be cleared after transmission of each data word. Otherwise next event is not considered as va
1097:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1098:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1099:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not, and clears the flag.
1106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIF
1117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_ClearFlag(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_ClearFlag(const SPI_MASTER_t* handle, const uint32_t flag_mask)
1131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
1132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_ClearFlag:handle NULL" , (handle != NULL));
1133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_ClearStatusFlag(handle->channel, flag_mask);
1134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
1135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief return the txbusy flag state
1138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return bool : status of txbusy flag
1140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This is used to check whether any transmit process is going or not. If no process is going then 
1144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the new request is accepted. SPI_MASTER_AbortTransmit() can be used to stop the current process 
1145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * start the new request.
1146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
1155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
1167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_IsTxBusy(&SPI_MASTER_0))
1169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
1183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE bool SPI_MASTER_IsTxBusy(const SPI_MASTER_t* const handle)
1186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
1187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_IsTxBusy:handle NULL", (handle != NULL))
1188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   return (handle->runtime->tx_busy);
1189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
1190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief return the rxbusy flag state
1193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return bool : status of rxbusy flag
1195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This is used to check whether any receive process is going or not. If no process is going then o
1199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the new request is accepted. SPI_MASTER_AbortReceive() can be used to stop the current process a
1200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * start the new request.
1201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Receives 10 bytes of data from slave.
1210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
1215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 10U))
1220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_IsRxBusy(&SPI_MASTER_0))
1222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE bool SPI_MASTER_IsRxBusy(const SPI_MASTER_t* const handle)
1238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
1239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_IsTxBusy:handle NULL", (handle != NULL))
1240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   return (handle->runtime->rx_busy);
1241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
1242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enables the specified slave select line
1246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param slave which slave signal has to be enabled
1249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Each slave is connected with one slave select signal. At a time only one slave can be communicat
1252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * required slave to start the communication.
1253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Generate code for multiple slave by configuring in "Advanced settings tab". Transmit the data to
1257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition:
1262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Configure to use two slaves".
1263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits 10 bytes of data to slave-0 and disables the slave-o. Then enable the slave-1 and tr
1265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
1276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_1);
1277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_EnableSlaveSelectSignal(const SPI_MASTER_t* handle, const SPI_MASTE
1292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 105              	 .loc 2 1292 0
 106              	 .cfi_startproc
 107 0000 80B5     	 push {r7,lr}
 108              	.LCFI6:
 109              	 .cfi_def_cfa_offset 8
 110              	 .cfi_offset 7,-8
 111              	 .cfi_offset 14,-4
 112 0002 82B0     	 sub sp,sp,#8
 113              	.LCFI7:
 114              	 .cfi_def_cfa_offset 16
 115 0004 00AF     	 add r7,sp,#0
 116              	.LCFI8:
 117              	 .cfi_def_cfa_register 7
 118 0006 7860     	 str r0,[r7,#4]
 119 0008 0A1C     	 mov r2,r1
 120 000a FB1C     	 add r3,r7,#3
 121 000c 1A70     	 strb r2,[r3]
1293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_EnableSlaveSelectSignal:handle NULL" , (handle != NULL));
1294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_EnableSlaveSelectSignal:Invalid Slave selection" , ((slave == SPI_MASTER
1295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                               );
1303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_EnableSlaveSelect(handle->channel, handle->config->slave_select_pin_config[slave]->s
 122              	 .loc 2 1303 0
 123 000e 7B68     	 ldr r3,[r7,#4]
 124 0010 1968     	 ldr r1,[r3]
 125 0012 7B68     	 ldr r3,[r7,#4]
 126 0014 5B68     	 ldr r3,[r3,#4]
 127 0016 FA1C     	 add r2,r7,#3
 128 0018 1278     	 ldrb r2,[r2]
 129 001a 1432     	 add r2,r2,#20
 130 001c 9200     	 lsl r2,r2,#2
 131 001e D358     	 ldr r3,[r2,r3]
 132 0020 DB68     	 ldr r3,[r3,#12]
 133 0022 081C     	 mov r0,r1
 134 0024 191C     	 mov r1,r3
 135 0026 FFF7FEFF 	 bl XMC_SPI_CH_EnableSlaveSelect
1304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
 136              	 .loc 2 1304 0
 137 002a BD46     	 mov sp,r7
 138 002c 02B0     	 add sp,sp,#8
 139              	 
 140 002e 80BD     	 pop {r7,pc}
 141              	 .cfi_endproc
 142              	.LFE182:
 144              	 .section .text.SPI_MASTER_DisableSlaveSelectSignal,"ax",%progbits
 145              	 .align 2
 146              	 .code 16
 147              	 .thumb_func
 149              	SPI_MASTER_DisableSlaveSelectSignal:
 150              	.LFB183:
1305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Disables the all the slave select lines
1308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Disable all the slave signals by clearing PCR.SELO bits.
1313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition:
1320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Configure to use two slaves".
1321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits 10 bytes of data to slave-0 and disables the slave-o. Then enable the slave-1 and tr
1323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
1334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_1);
1335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_DisableSlaveSelectSignal(const SPI_MASTER_t* handle)
1351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 151              	 .loc 2 1351 0
 152              	 .cfi_startproc
 153 0000 80B5     	 push {r7,lr}
 154              	.LCFI9:
 155              	 .cfi_def_cfa_offset 8
 156              	 .cfi_offset 7,-8
 157              	 .cfi_offset 14,-4
 158 0002 82B0     	 sub sp,sp,#8
 159              	.LCFI10:
 160              	 .cfi_def_cfa_offset 16
 161 0004 00AF     	 add r7,sp,#0
 162              	.LCFI11:
 163              	 .cfi_def_cfa_register 7
 164 0006 7860     	 str r0,[r7,#4]
1352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_Transmit:handle NULL" , (handle != NULL));
1353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_DisableSlaveSelect(handle->channel);
 165              	 .loc 2 1353 0
 166 0008 7B68     	 ldr r3,[r7,#4]
 167 000a 1B68     	 ldr r3,[r3]
 168 000c 181C     	 mov r0,r3
 169 000e FFF7FEFF 	 bl XMC_SPI_CH_DisableSlaveSelect
1354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
 170              	 .loc 2 1354 0
 171 0012 BD46     	 mov sp,r7
 172 0014 02B0     	 add sp,sp,#8
 173              	 
 174 0016 80BD     	 pop {r7,pc}
 175              	 .cfi_endproc
 176              	.LFE183:
 178              	 .section .text.SPI_MASTER_TransmitWord,"ax",%progbits
 179              	 .align 2
 180              	 .code 16
 181              	 .thumb_func
 183              	SPI_MASTER_TransmitWord:
 184              	.LFB185:
1355:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1356:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1357:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Provides data received in the receive buffer.
1358:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1359:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1360:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return uint16_t Data read from the receive buffer.
1361:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1362:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1363:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This can be used in receive mode "Direct" to read the received data.
1364:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If receive FIFO is not configured, function reads the value of RBUF register.
1365:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Otherwise the data is read from OUTR register.
1366:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * User can poll for receive event or configure an interrupt by connecting
1367:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * external INTERRUPT APP with receive event signals. This API can be used inside the ISR to read t
1368:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1369:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1370:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1371:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE uint16_t SPI_MASTER_GetReceivedWord(const SPI_MASTER_t *const handle)
1372:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
1373:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_GetReceivedWord:handle NULL" , (handle != NULL));
1374:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   return XMC_SPI_CH_GetReceivedData(handle->channel);
1375:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
1376:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1377:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1378:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits a word of data.
1379:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1380:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1381:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param data Data to be transmitted
1382:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1383:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1384:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmits a word of data through the SPI channel as a master device.
1385:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If transmit FIFO is configured, the data is placed in the IN[0] register of the USIC channel.
1386:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If transmit FIFO is not configured, API waits for the TBUF to be free and then places the data i
1387:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * User can poll for receive event or configure interrupt by connecting an
1388:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * external INTERRUPT APP. This API can be used inside the ISR to read the received data.
1389:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1390:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_TransmitWord(const SPI_MASTER_t *const handle, const uint16_t data)
1391:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 185              	 .loc 2 1391 0
 186              	 .cfi_startproc
 187 0000 80B5     	 push {r7,lr}
 188              	.LCFI12:
 189              	 .cfi_def_cfa_offset 8
 190              	 .cfi_offset 7,-8
 191              	 .cfi_offset 14,-4
 192 0002 82B0     	 sub sp,sp,#8
 193              	.LCFI13:
 194              	 .cfi_def_cfa_offset 16
 195 0004 00AF     	 add r7,sp,#0
 196              	.LCFI14:
 197              	 .cfi_def_cfa_register 7
 198 0006 7860     	 str r0,[r7,#4]
 199 0008 0A1C     	 mov r2,r1
 200 000a BB1C     	 add r3,r7,#2
 201 000c 1A80     	 strh r2,[r3]
1392:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_TransmitWord:handle NULL" , (handle != NULL));
1393:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_Transmit(handle->channel, data, handle->runtime->spi_master_mode);
 202              	 .loc 2 1393 0
 203 000e 7B68     	 ldr r3,[r7,#4]
 204 0010 1968     	 ldr r1,[r3]
 205 0012 7B68     	 ldr r3,[r7,#4]
 206 0014 9B68     	 ldr r3,[r3,#8]
 207 0016 1B7F     	 ldrb r3,[r3,#28]
 208 0018 DAB2     	 uxtb r2,r3
 209 001a BB1C     	 add r3,r7,#2
 210 001c 1B88     	 ldrh r3,[r3]
 211 001e 081C     	 mov r0,r1
 212 0020 191C     	 mov r1,r3
 213 0022 FFF7FEFF 	 bl XMC_SPI_CH_Transmit
1394:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
 214              	 .loc 2 1394 0
 215 0026 BD46     	 mov sp,r7
 216 0028 02B0     	 add sp,sp,#8
 217              	 
 218 002a 80BD     	 pop {r7,pc}
 219              	 .cfi_endproc
 220              	.LFE185:
 222              	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 223              	 .align 2
 224              	 .code 16
 225              	 .thumb_func
 227              	DIGITAL_IO_SetOutputHigh:
 228              	.LFB200:
 229              	 .file 3 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 230              	 .loc 3 277 0
 231              	 .cfi_startproc
 232 0000 80B5     	 push {r7,lr}
 233              	.LCFI15:
 234              	 .cfi_def_cfa_offset 8
 235              	 .cfi_offset 7,-8
 236              	 .cfi_offset 14,-4
 237 0002 82B0     	 sub sp,sp,#8
 238              	.LCFI16:
 239              	 .cfi_def_cfa_offset 16
 240 0004 00AF     	 add r7,sp,#0
 241              	.LCFI17:
 242              	 .cfi_def_cfa_register 7
 243 0006 7860     	 str r0,[r7,#4]
 278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 244              	 .loc 3 279 0
 245 0008 7B68     	 ldr r3,[r7,#4]
 246 000a 1A68     	 ldr r2,[r3]
 247 000c 7B68     	 ldr r3,[r7,#4]
 248 000e 1B7B     	 ldrb r3,[r3,#12]
 249 0010 101C     	 mov r0,r2
 250 0012 191C     	 mov r1,r3
 251 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 252              	 .loc 3 280 0
 253 0018 BD46     	 mov sp,r7
 254 001a 02B0     	 add sp,sp,#8
 255              	 
 256 001c 80BD     	 pop {r7,pc}
 257              	 .cfi_endproc
 258              	.LFE200:
 260 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 261              	 .align 2
 262              	 .code 16
 263              	 .thumb_func
 265              	DIGITAL_IO_SetOutputLow:
 266              	.LFB201:
 281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 267              	 .loc 3 325 0
 268              	 .cfi_startproc
 269 0000 80B5     	 push {r7,lr}
 270              	.LCFI18:
 271              	 .cfi_def_cfa_offset 8
 272              	 .cfi_offset 7,-8
 273              	 .cfi_offset 14,-4
 274 0002 82B0     	 sub sp,sp,#8
 275              	.LCFI19:
 276              	 .cfi_def_cfa_offset 16
 277 0004 00AF     	 add r7,sp,#0
 278              	.LCFI20:
 279              	 .cfi_def_cfa_register 7
 280 0006 7860     	 str r0,[r7,#4]
 326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 281              	 .loc 3 327 0
 282 0008 7B68     	 ldr r3,[r7,#4]
 283 000a 1A68     	 ldr r2,[r3]
 284 000c 7B68     	 ldr r3,[r7,#4]
 285 000e 1B7B     	 ldrb r3,[r3,#12]
 286 0010 101C     	 mov r0,r2
 287 0012 191C     	 mov r1,r3
 288 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 289              	 .loc 3 328 0
 290 0018 BD46     	 mov sp,r7
 291 001a 02B0     	 add sp,sp,#8
 292              	 
 293 001c 80BD     	 pop {r7,pc}
 294              	 .cfi_endproc
 295              	.LFE201:
 297              	 .comm NRF24SendData,32,4
 298              	 .comm NRF24ReadData,32,4
 299              	 .comm Config_Regiter,1,1
 300              	 .comm Status_reg,1,1
 301 001e C046     	 .section .rodata
 302              	 .align 2
 303              	.LC0:
 304 0000 30303030 	 .ascii "00000\000"
 304      3000
 305              	 .section .text.Init_RF24,"ax",%progbits
 306              	 .align 2
 307              	 .global Init_RF24
 308              	 .code 16
 309              	 .thumb_func
 311              	Init_RF24:
 312              	.LFB244:
 313              	 .file 4 "../nRF24L01+.c"
   1:../nRF24L01+.c **** /*
   2:../nRF24L01+.c ****  * nRF24L01+.c
   3:../nRF24L01+.c ****  *
   4:../nRF24L01+.c ****  *  Created on: Feb 19, 2022
   5:../nRF24L01+.c ****  *      Author: Anis Shakkour
   6:../nRF24L01+.c ****  */
   7:../nRF24L01+.c **** 
   8:../nRF24L01+.c **** #include "nRF24L01+.h"
   9:../nRF24L01+.c **** 
  10:../nRF24L01+.c **** void Init_RF24(void){
 314              	 .loc 4 10 0
 315              	 .cfi_startproc
 316 0000 80B5     	 push {r7,lr}
 317              	.LCFI21:
 318              	 .cfi_def_cfa_offset 8
 319              	 .cfi_offset 7,-8
 320              	 .cfi_offset 14,-4
 321 0002 82B0     	 sub sp,sp,#8
 322              	.LCFI22:
 323              	 .cfi_def_cfa_offset 16
 324 0004 00AF     	 add r7,sp,#0
 325              	.LCFI23:
 326              	 .cfi_def_cfa_register 7
 327              	.LBB2:
  11:../nRF24L01+.c **** 	for(int i = 0 ; i < 0xFFFF;i++); //delay
 328              	 .loc 4 11 0
 329 0006 0023     	 mov r3,#0
 330 0008 7B60     	 str r3,[r7,#4]
 331 000a 02E0     	 b .L9
 332              	.L10:
 333              	 .loc 4 11 0 is_stmt 0 discriminator 3
 334 000c 7B68     	 ldr r3,[r7,#4]
 335 000e 0133     	 add r3,r3,#1
 336 0010 7B60     	 str r3,[r7,#4]
 337              	.L9:
 338              	 .loc 4 11 0 discriminator 1
 339 0012 7B68     	 ldr r3,[r7,#4]
 340 0014 194A     	 ldr r2,.L11
 341 0016 9342     	 cmp r3,r2
 342 0018 F8DD     	 ble .L10
 343              	.LBE2:
  12:../nRF24L01+.c **** 	//uint8_t temp = getChannel();
  13:../nRF24L01+.c **** 	setChannel(76);
 344              	 .loc 4 13 0 is_stmt 1
 345 001a 4C20     	 mov r0,#76
 346 001c FFF7FEFF 	 bl setChannel
  14:../nRF24L01+.c **** 	//temp = getChannel();
  15:../nRF24L01+.c **** 	setRetries(5,15);
 347              	 .loc 4 15 0
 348 0020 0520     	 mov r0,#5
 349 0022 0F21     	 mov r1,#15
 350 0024 FFF7FEFF 	 bl setRetries
  16:../nRF24L01+.c **** 	setRadiation(3,0); //see Header file
 351              	 .loc 4 16 0
 352 0028 0320     	 mov r0,#3
 353 002a 0021     	 mov r1,#0
 354 002c FFF7FEFF 	 bl setRadiation
  17:../nRF24L01+.c **** 	setAddressWidth(5); //Address width 5 bytes
 355              	 .loc 4 17 0
 356 0030 0520     	 mov r0,#5
 357 0032 FFF7FEFF 	 bl setAddressWidth
  18:../nRF24L01+.c **** 	setFeatures(0); //
 358              	 .loc 4 18 0
 359 0036 0020     	 mov r0,#0
 360 0038 FFF7FEFF 	 bl setFeatures
  19:../nRF24L01+.c **** 	//enableDynamicPayLoads();
  20:../nRF24L01+.c **** 	enableAutoACK();
 361              	 .loc 4 20 0
 362 003c FFF7FEFF 	 bl enableAutoACK
  21:../nRF24L01+.c **** 	enableRXpipe(0);
 363              	 .loc 4 21 0
 364 0040 0020     	 mov r0,#0
 365 0042 FFF7FEFF 	 bl enableRXpipe
  22:../nRF24L01+.c **** 	setPayloadSize(0x3f,0);
 366              	 .loc 4 22 0
 367 0046 3F20     	 mov r0,#63
 368 0048 0021     	 mov r1,#0
 369 004a FFF7FEFF 	 bl setPayloadSize
  23:../nRF24L01+.c **** 	setRxPipeAddress(0,"00000",5);
 370              	 .loc 4 23 0
 371 004e 0C4B     	 ldr r3,.L11+4
 372 0050 0020     	 mov r0,#0
 373 0052 191C     	 mov r1,r3
 374 0054 0522     	 mov r2,#5
 375 0056 FFF7FEFF 	 bl setRxPipeAddress
  24:../nRF24L01+.c **** 	setTxPipeAddress("00000",5);
 376              	 .loc 4 24 0
 377 005a 094B     	 ldr r3,.L11+4
 378 005c 181C     	 mov r0,r3
 379 005e 0521     	 mov r1,#5
 380 0060 FFF7FEFF 	 bl setTxPipeAddress
  25:../nRF24L01+.c **** 	resetStatus();
 381              	 .loc 4 25 0
 382 0064 FFF7FEFF 	 bl resetStatus
  26:../nRF24L01+.c **** 	flushTX();
 383              	 .loc 4 26 0
 384 0068 FFF7FEFF 	 bl flushTX
  27:../nRF24L01+.c **** 	flushRX();
 385              	 .loc 4 27 0
 386 006c FFF7FEFF 	 bl flushRX
  28:../nRF24L01+.c **** 	PowerUP();
 387              	 .loc 4 28 0
 388 0070 FFF7FEFF 	 bl PowerUP
  29:../nRF24L01+.c **** }
 389              	 .loc 4 29 0
 390 0074 BD46     	 mov sp,r7
 391 0076 02B0     	 add sp,sp,#8
 392              	 
 393 0078 80BD     	 pop {r7,pc}
 394              	.L12:
 395 007a C046     	 .align 2
 396              	.L11:
 397 007c FEFF0000 	 .word 65534
 398 0080 00000000 	 .word .LC0
 399              	 .cfi_endproc
 400              	.LFE244:
 402              	 .section .rodata
 403 0006 0000     	 .align 2
 404              	.LC2:
 405 0008 49662079 	 .ascii "If you see this message then OKI\000"
 405      6F752073 
 405      65652074 
 405      68697320 
 405      6D657373 
 406 0029 000000   	 .section .text.TestCom,"ax",%progbits
 407              	 .align 2
 408              	 .global TestCom
 409              	 .code 16
 410              	 .thumb_func
 412              	TestCom:
 413              	.LFB245:
  30:../nRF24L01+.c **** void TestCom(void){
 414              	 .loc 4 30 0
 415              	 .cfi_startproc
 416 0000 80B5     	 push {r7,lr}
 417              	.LCFI24:
 418              	 .cfi_def_cfa_offset 8
 419              	 .cfi_offset 7,-8
 420              	 .cfi_offset 14,-4
 421 0002 00AF     	 add r7,sp,#0
 422              	.LCFI25:
 423              	 .cfi_def_cfa_register 7
  31:../nRF24L01+.c **** 	Send_Word("If you see this message then OKI");
 424              	 .loc 4 31 0
 425 0004 024B     	 ldr r3,.L14
 426 0006 181C     	 mov r0,r3
 427 0008 FFF7FEFF 	 bl Send_Word
  32:../nRF24L01+.c **** }
 428              	 .loc 4 32 0
 429 000c BD46     	 mov sp,r7
 430              	 
 431 000e 80BD     	 pop {r7,pc}
 432              	.L15:
 433              	 .align 2
 434              	.L14:
 435 0010 08000000 	 .word .LC2
 436              	 .cfi_endproc
 437              	.LFE245:
 439              	 .section .text.Send_OneByte,"ax",%progbits
 440              	 .align 2
 441              	 .global Send_OneByte
 442              	 .code 16
 443              	 .thumb_func
 445              	Send_OneByte:
 446              	.LFB246:
  33:../nRF24L01+.c **** void Send_OneByte(uint8_t data){
 447              	 .loc 4 33 0
 448              	 .cfi_startproc
 449 0000 80B5     	 push {r7,lr}
 450              	.LCFI26:
 451              	 .cfi_def_cfa_offset 8
 452              	 .cfi_offset 7,-8
 453              	 .cfi_offset 14,-4
 454 0002 86B0     	 sub sp,sp,#24
 455              	.LCFI27:
 456              	 .cfi_def_cfa_offset 32
 457 0004 00AF     	 add r7,sp,#0
 458              	.LCFI28:
 459              	 .cfi_def_cfa_register 7
 460 0006 021C     	 mov r2,r0
 461 0008 FB1D     	 add r3,r7,#7
 462 000a 1A70     	 strb r2,[r3]
  34:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 463              	 .loc 4 34 0
 464 000c 284B     	 ldr r3,.L25
 465 000e 181C     	 mov r0,r3
 466 0010 0021     	 mov r1,#0
 467 0012 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
  35:../nRF24L01+.c **** 	SPI_MASTER_TransmitWord(&SPI_MASTER_0, W_TX_PAYLOAD);
 468              	 .loc 4 35 0
 469 0016 264B     	 ldr r3,.L25
 470 0018 181C     	 mov r0,r3
 471 001a A021     	 mov r1,#160
 472 001c FFF7FEFF 	 bl SPI_MASTER_TransmitWord
  36:../nRF24L01+.c **** 	SPI_MASTER_TransmitWord(&SPI_MASTER_0, data);
 473              	 .loc 4 36 0
 474 0020 FB1D     	 add r3,r7,#7
 475 0022 1B78     	 ldrb r3,[r3]
 476 0024 9BB2     	 uxth r3,r3
 477 0026 224A     	 ldr r2,.L25
 478 0028 101C     	 mov r0,r2
 479 002a 191C     	 mov r1,r3
 480 002c FFF7FEFF 	 bl SPI_MASTER_TransmitWord
 481              	.LBB3:
  37:../nRF24L01+.c **** 	for(int  i = 1 ; i < 32;i++)
 482              	 .loc 4 37 0
 483 0030 0123     	 mov r3,#1
 484 0032 7B61     	 str r3,[r7,#20]
 485 0034 07E0     	 b .L17
 486              	.L18:
  38:../nRF24L01+.c **** 		SPI_MASTER_TransmitWord(&SPI_MASTER_0, 0);
 487              	 .loc 4 38 0 discriminator 3
 488 0036 1E4B     	 ldr r3,.L25
 489 0038 181C     	 mov r0,r3
 490 003a 0021     	 mov r1,#0
 491 003c FFF7FEFF 	 bl SPI_MASTER_TransmitWord
  37:../nRF24L01+.c **** 	for(int  i = 1 ; i < 32;i++)
 492              	 .loc 4 37 0 discriminator 3
 493 0040 7B69     	 ldr r3,[r7,#20]
 494 0042 0133     	 add r3,r3,#1
 495 0044 7B61     	 str r3,[r7,#20]
 496              	.L17:
  37:../nRF24L01+.c **** 	for(int  i = 1 ; i < 32;i++)
 497              	 .loc 4 37 0 is_stmt 0 discriminator 1
 498 0046 7B69     	 ldr r3,[r7,#20]
 499 0048 1F2B     	 cmp r3,#31
 500 004a F4DD     	 ble .L18
 501              	.LBE3:
  39:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 502              	 .loc 4 39 0 is_stmt 1
 503 004c 184B     	 ldr r3,.L25
 504 004e 181C     	 mov r0,r3
 505 0050 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
  40:../nRF24L01+.c **** 	DIGITAL_IO_SetOutputHigh(&SPI_CE);
 506              	 .loc 4 40 0
 507 0054 174B     	 ldr r3,.L25+4
 508 0056 181C     	 mov r0,r3
 509 0058 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 510              	.LBB4:
  41:../nRF24L01+.c **** 	for(int i = 0 ; i < 0x1FF;i++); //delay 10us
 511              	 .loc 4 41 0
 512 005c 0023     	 mov r3,#0
 513 005e 3B61     	 str r3,[r7,#16]
 514 0060 02E0     	 b .L19
 515              	.L20:
 516              	 .loc 4 41 0 is_stmt 0 discriminator 3
 517 0062 3B69     	 ldr r3,[r7,#16]
 518 0064 0133     	 add r3,r3,#1
 519 0066 3B61     	 str r3,[r7,#16]
 520              	.L19:
 521              	 .loc 4 41 0 discriminator 1
 522 0068 3A69     	 ldr r2,[r7,#16]
 523 006a FF23     	 mov r3,#255
 524 006c 5B00     	 lsl r3,r3,#1
 525 006e 9A42     	 cmp r2,r3
 526 0070 F7DD     	 ble .L20
 527              	.LBE4:
  42:../nRF24L01+.c **** 	DIGITAL_IO_SetOutputLow(&SPI_CE);
 528              	 .loc 4 42 0 is_stmt 1
 529 0072 104B     	 ldr r3,.L25+4
 530 0074 181C     	 mov r0,r3
 531 0076 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 532              	.LBB5:
  43:../nRF24L01+.c **** 	for(int i = 0 ; i < 0x3FFF;i++); //delay 10us
 533              	 .loc 4 43 0
 534 007a 0023     	 mov r3,#0
 535 007c FB60     	 str r3,[r7,#12]
 536 007e 02E0     	 b .L21
 537              	.L22:
 538              	 .loc 4 43 0 is_stmt 0 discriminator 3
 539 0080 FB68     	 ldr r3,[r7,#12]
 540 0082 0133     	 add r3,r3,#1
 541 0084 FB60     	 str r3,[r7,#12]
 542              	.L21:
 543              	 .loc 4 43 0 discriminator 1
 544 0086 FB68     	 ldr r3,[r7,#12]
 545 0088 0B4A     	 ldr r2,.L25+8
 546 008a 9342     	 cmp r3,r2
 547 008c F8DD     	 ble .L22
 548              	.LBE5:
 549              	.LBB6:
  44:../nRF24L01+.c **** 	for(int i = 0 ; i < 0x3FFF;i++); //delay
 550              	 .loc 4 44 0 is_stmt 1
 551 008e 0023     	 mov r3,#0
 552 0090 BB60     	 str r3,[r7,#8]
 553 0092 02E0     	 b .L23
 554              	.L24:
 555              	 .loc 4 44 0 is_stmt 0 discriminator 3
 556 0094 BB68     	 ldr r3,[r7,#8]
 557 0096 0133     	 add r3,r3,#1
 558 0098 BB60     	 str r3,[r7,#8]
 559              	.L23:
 560              	 .loc 4 44 0 discriminator 1
 561 009a BB68     	 ldr r3,[r7,#8]
 562 009c 064A     	 ldr r2,.L25+8
 563 009e 9342     	 cmp r3,r2
 564 00a0 F8DD     	 ble .L24
 565              	.LBE6:
  45:../nRF24L01+.c **** 	resetStatus();
 566              	 .loc 4 45 0 is_stmt 1
 567 00a2 FFF7FEFF 	 bl resetStatus
  46:../nRF24L01+.c **** 	flushTX();
 568              	 .loc 4 46 0
 569 00a6 FFF7FEFF 	 bl flushTX
  47:../nRF24L01+.c **** }
 570              	 .loc 4 47 0
 571 00aa BD46     	 mov sp,r7
 572 00ac 06B0     	 add sp,sp,#24
 573              	 
 574 00ae 80BD     	 pop {r7,pc}
 575              	.L26:
 576              	 .align 2
 577              	.L25:
 578 00b0 00000000 	 .word SPI_MASTER_0
 579 00b4 00000000 	 .word SPI_CE
 580 00b8 FE3F0000 	 .word 16382
 581              	 .cfi_endproc
 582              	.LFE246:
 584              	 .section .text.Send_Word,"ax",%progbits
 585              	 .align 2
 586              	 .global Send_Word
 587              	 .code 16
 588              	 .thumb_func
 590              	Send_Word:
 591              	.LFB247:
  48:../nRF24L01+.c **** void Send_Word(char* data){
 592              	 .loc 4 48 0
 593              	 .cfi_startproc
 594 0000 80B5     	 push {r7,lr}
 595              	.LCFI29:
 596              	 .cfi_def_cfa_offset 8
 597              	 .cfi_offset 7,-8
 598              	 .cfi_offset 14,-4
 599 0002 88B0     	 sub sp,sp,#32
 600              	.LCFI30:
 601              	 .cfi_def_cfa_offset 40
 602 0004 00AF     	 add r7,sp,#0
 603              	.LCFI31:
 604              	 .cfi_def_cfa_register 7
 605 0006 7860     	 str r0,[r7,#4]
  49:../nRF24L01+.c **** 	uint8_t len = Max(sizeof(data),32);
 606              	 .loc 4 49 0
 607 0008 0B23     	 mov r3,#11
 608 000a FB18     	 add r3,r7,r3
 609 000c 2022     	 mov r2,#32
 610 000e 1A70     	 strb r2,[r3]
  50:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 611              	 .loc 4 50 0
 612 0010 304B     	 ldr r3,.L38
 613 0012 181C     	 mov r0,r3
 614 0014 0021     	 mov r1,#0
 615 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
  51:../nRF24L01+.c **** 	SPI_MASTER_TransmitWord(&SPI_MASTER_0, W_TX_PAYLOAD);
 616              	 .loc 4 51 0
 617 001a 2E4B     	 ldr r3,.L38
 618 001c 181C     	 mov r0,r3
 619 001e A021     	 mov r1,#160
 620 0020 FFF7FEFF 	 bl SPI_MASTER_TransmitWord
 621              	.LBB7:
  52:../nRF24L01+.c **** 	for(int  i = 0 ; i < len;i++)
 622              	 .loc 4 52 0
 623 0024 0023     	 mov r3,#0
 624 0026 FB61     	 str r3,[r7,#28]
 625 0028 0CE0     	 b .L28
 626              	.L29:
  53:../nRF24L01+.c **** 		SPI_MASTER_TransmitWord(&SPI_MASTER_0, data[i]);
 627              	 .loc 4 53 0 discriminator 3
 628 002a FB69     	 ldr r3,[r7,#28]
 629 002c 7A68     	 ldr r2,[r7,#4]
 630 002e D318     	 add r3,r2,r3
 631 0030 1B78     	 ldrb r3,[r3]
 632 0032 9BB2     	 uxth r3,r3
 633 0034 274A     	 ldr r2,.L38
 634 0036 101C     	 mov r0,r2
 635 0038 191C     	 mov r1,r3
 636 003a FFF7FEFF 	 bl SPI_MASTER_TransmitWord
  52:../nRF24L01+.c **** 	for(int  i = 0 ; i < len;i++)
 637              	 .loc 4 52 0 discriminator 3
 638 003e FB69     	 ldr r3,[r7,#28]
 639 0040 0133     	 add r3,r3,#1
 640 0042 FB61     	 str r3,[r7,#28]
 641              	.L28:
  52:../nRF24L01+.c **** 	for(int  i = 0 ; i < len;i++)
 642              	 .loc 4 52 0 is_stmt 0 discriminator 1
 643 0044 0B23     	 mov r3,#11
 644 0046 FB18     	 add r3,r7,r3
 645 0048 1A78     	 ldrb r2,[r3]
 646 004a FB69     	 ldr r3,[r7,#28]
 647 004c 9A42     	 cmp r2,r3
 648 004e ECDC     	 bgt .L29
 649              	.LBE7:
 650              	.LBB8:
  54:../nRF24L01+.c **** 	for(int  i = len ; i < 32;i++)
 651              	 .loc 4 54 0 is_stmt 1
 652 0050 0B23     	 mov r3,#11
 653 0052 FB18     	 add r3,r7,r3
 654 0054 1B78     	 ldrb r3,[r3]
 655 0056 BB61     	 str r3,[r7,#24]
 656 0058 07E0     	 b .L30
 657              	.L31:
  55:../nRF24L01+.c **** 		SPI_MASTER_TransmitWord(&SPI_MASTER_0, 0);
 658              	 .loc 4 55 0 discriminator 3
 659 005a 1E4B     	 ldr r3,.L38
 660 005c 181C     	 mov r0,r3
 661 005e 0021     	 mov r1,#0
 662 0060 FFF7FEFF 	 bl SPI_MASTER_TransmitWord
  54:../nRF24L01+.c **** 	for(int  i = len ; i < 32;i++)
 663              	 .loc 4 54 0 discriminator 3
 664 0064 BB69     	 ldr r3,[r7,#24]
 665 0066 0133     	 add r3,r3,#1
 666 0068 BB61     	 str r3,[r7,#24]
 667              	.L30:
  54:../nRF24L01+.c **** 	for(int  i = len ; i < 32;i++)
 668              	 .loc 4 54 0 is_stmt 0 discriminator 1
 669 006a BB69     	 ldr r3,[r7,#24]
 670 006c 1F2B     	 cmp r3,#31
 671 006e F4DD     	 ble .L31
 672              	.LBE8:
  56:../nRF24L01+.c **** 
  57:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 673              	 .loc 4 57 0 is_stmt 1
 674 0070 184B     	 ldr r3,.L38
 675 0072 181C     	 mov r0,r3
 676 0074 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
  58:../nRF24L01+.c **** 	DIGITAL_IO_SetOutputHigh(&SPI_CE);
 677              	 .loc 4 58 0
 678 0078 174B     	 ldr r3,.L38+4
 679 007a 181C     	 mov r0,r3
 680 007c FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 681              	.LBB9:
  59:../nRF24L01+.c **** 
  60:../nRF24L01+.c **** 	//while(!Is_TX_DS()) //;| !Is_MAX_RT());
  61:../nRF24L01+.c **** 
  62:../nRF24L01+.c **** 	for(int i = 0 ; i < 0x1FF;i++); //delay 10us
 682              	 .loc 4 62 0
 683 0080 0023     	 mov r3,#0
 684 0082 7B61     	 str r3,[r7,#20]
 685 0084 02E0     	 b .L32
 686              	.L33:
 687              	 .loc 4 62 0 is_stmt 0 discriminator 3
 688 0086 7B69     	 ldr r3,[r7,#20]
 689 0088 0133     	 add r3,r3,#1
 690 008a 7B61     	 str r3,[r7,#20]
 691              	.L32:
 692              	 .loc 4 62 0 discriminator 1
 693 008c 7A69     	 ldr r2,[r7,#20]
 694 008e FF23     	 mov r3,#255
 695 0090 5B00     	 lsl r3,r3,#1
 696 0092 9A42     	 cmp r2,r3
 697 0094 F7DD     	 ble .L33
 698              	.LBE9:
  63:../nRF24L01+.c **** 	DIGITAL_IO_SetOutputLow(&SPI_CE);
 699              	 .loc 4 63 0 is_stmt 1
 700 0096 104B     	 ldr r3,.L38+4
 701 0098 181C     	 mov r0,r3
 702 009a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 703              	.LBB10:
  64:../nRF24L01+.c **** 	for(int i = 0 ; i < 0x3FFF;i++); //delay 10us
 704              	 .loc 4 64 0
 705 009e 0023     	 mov r3,#0
 706 00a0 3B61     	 str r3,[r7,#16]
 707 00a2 02E0     	 b .L34
 708              	.L35:
 709              	 .loc 4 64 0 is_stmt 0 discriminator 3
 710 00a4 3B69     	 ldr r3,[r7,#16]
 711 00a6 0133     	 add r3,r3,#1
 712 00a8 3B61     	 str r3,[r7,#16]
 713              	.L34:
 714              	 .loc 4 64 0 discriminator 1
 715 00aa 3B69     	 ldr r3,[r7,#16]
 716 00ac 0B4A     	 ldr r2,.L38+8
 717 00ae 9342     	 cmp r3,r2
 718 00b0 F8DD     	 ble .L35
 719              	.LBE10:
 720              	.LBB11:
  65:../nRF24L01+.c **** 	for(int i = 0 ; i < 0x3FFF;i++); //delay
 721              	 .loc 4 65 0 is_stmt 1
 722 00b2 0023     	 mov r3,#0
 723 00b4 FB60     	 str r3,[r7,#12]
 724 00b6 02E0     	 b .L36
 725              	.L37:
 726              	 .loc 4 65 0 is_stmt 0 discriminator 3
 727 00b8 FB68     	 ldr r3,[r7,#12]
 728 00ba 0133     	 add r3,r3,#1
 729 00bc FB60     	 str r3,[r7,#12]
 730              	.L36:
 731              	 .loc 4 65 0 discriminator 1
 732 00be FB68     	 ldr r3,[r7,#12]
 733 00c0 064A     	 ldr r2,.L38+8
 734 00c2 9342     	 cmp r3,r2
 735 00c4 F8DD     	 ble .L37
 736              	.LBE11:
  66:../nRF24L01+.c **** 	resetStatus();
 737              	 .loc 4 66 0 is_stmt 1
 738 00c6 FFF7FEFF 	 bl resetStatus
  67:../nRF24L01+.c **** 	flushTX();
 739              	 .loc 4 67 0
 740 00ca FFF7FEFF 	 bl flushTX
  68:../nRF24L01+.c **** 	//for(int i = 0 ; i < 0x3FFF;i++); //delay
  69:../nRF24L01+.c **** 	//for(int i = 0 ; i < 0x3FFF;i++); //delay
  70:../nRF24L01+.c **** }
 741              	 .loc 4 70 0
 742 00ce BD46     	 mov sp,r7
 743 00d0 08B0     	 add sp,sp,#32
 744              	 
 745 00d2 80BD     	 pop {r7,pc}
 746              	.L39:
 747              	 .align 2
 748              	.L38:
 749 00d4 00000000 	 .word SPI_MASTER_0
 750 00d8 00000000 	 .word SPI_CE
 751 00dc FE3F0000 	 .word 16382
 752              	 .cfi_endproc
 753              	.LFE247:
 755              	 .section .text.setChannel,"ax",%progbits
 756              	 .align 2
 757              	 .global setChannel
 758              	 .code 16
 759              	 .thumb_func
 761              	setChannel:
 762              	.LFB248:
  71:../nRF24L01+.c **** 
  72:../nRF24L01+.c **** void setChannel(uint8_t ch){
 763              	 .loc 4 72 0
 764              	 .cfi_startproc
 765 0000 80B5     	 push {r7,lr}
 766              	.LCFI32:
 767              	 .cfi_def_cfa_offset 8
 768              	 .cfi_offset 7,-8
 769              	 .cfi_offset 14,-4
 770 0002 82B0     	 sub sp,sp,#8
 771              	.LCFI33:
 772              	 .cfi_def_cfa_offset 16
 773 0004 00AF     	 add r7,sp,#0
 774              	.LCFI34:
 775              	 .cfi_def_cfa_register 7
 776 0006 021C     	 mov r2,r0
 777 0008 FB1D     	 add r3,r7,#7
 778 000a 1A70     	 strb r2,[r3]
  73:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | RFCH);
 779              	 .loc 4 73 0
 780 000c 0F4B     	 ldr r3,.L41
 781 000e 2522     	 mov r2,#37
 782 0010 1A70     	 strb r2,[r3]
  74:../nRF24L01+.c **** 	NRF24SendData [1] = (ch);
 783              	 .loc 4 74 0
 784 0012 0E4B     	 ldr r3,.L41
 785 0014 FA1D     	 add r2,r7,#7
 786 0016 1278     	 ldrb r2,[r2]
 787 0018 5A70     	 strb r2,[r3,#1]
  75:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 788              	 .loc 4 75 0
 789 001a 0D4B     	 ldr r3,.L41+4
 790 001c 181C     	 mov r0,r3
 791 001e 0021     	 mov r1,#0
 792 0020 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
  76:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 793              	 .loc 4 76 0
 794 0024 0A49     	 ldr r1,.L41+4
 795 0026 094A     	 ldr r2,.L41
 796 0028 0A4B     	 ldr r3,.L41+8
 797 002a 081C     	 mov r0,r1
 798 002c 111C     	 mov r1,r2
 799 002e 1A1C     	 mov r2,r3
 800 0030 0223     	 mov r3,#2
 801 0032 FFF7FEFF 	 bl SPI_MASTER_Transfer
  77:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 802              	 .loc 4 77 0
 803 0036 064B     	 ldr r3,.L41+4
 804 0038 181C     	 mov r0,r3
 805 003a FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
  78:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 806              	 .loc 4 78 0
 807 003e 054B     	 ldr r3,.L41+8
 808 0040 1A78     	 ldrb r2,[r3]
 809 0042 054B     	 ldr r3,.L41+12
 810 0044 1A70     	 strb r2,[r3]
  79:../nRF24L01+.c **** }
 811              	 .loc 4 79 0
 812 0046 BD46     	 mov sp,r7
 813 0048 02B0     	 add sp,sp,#8
 814              	 
 815 004a 80BD     	 pop {r7,pc}
 816              	.L42:
 817              	 .align 2
 818              	.L41:
 819 004c 00000000 	 .word NRF24SendData
 820 0050 00000000 	 .word SPI_MASTER_0
 821 0054 00000000 	 .word NRF24ReadData
 822 0058 00000000 	 .word Status_reg
 823              	 .cfi_endproc
 824              	.LFE248:
 826              	 .section .text.getChannel,"ax",%progbits
 827              	 .align 2
 828              	 .global getChannel
 829              	 .code 16
 830              	 .thumb_func
 832              	getChannel:
 833              	.LFB249:
  80:../nRF24L01+.c **** uint8_t getChannel(void){
 834              	 .loc 4 80 0
 835              	 .cfi_startproc
 836 0000 80B5     	 push {r7,lr}
 837              	.LCFI35:
 838              	 .cfi_def_cfa_offset 8
 839              	 .cfi_offset 7,-8
 840              	 .cfi_offset 14,-4
 841 0002 00AF     	 add r7,sp,#0
 842              	.LCFI36:
 843              	 .cfi_def_cfa_register 7
  81:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | RFCH);
 844              	 .loc 4 81 0
 845 0004 104B     	 ldr r3,.L45
 846 0006 0522     	 mov r2,#5
 847 0008 1A70     	 strb r2,[r3]
  82:../nRF24L01+.c **** 	NRF24SendData [1] = (RF24_NOP);
 848              	 .loc 4 82 0
 849 000a 0F4B     	 ldr r3,.L45
 850 000c FF22     	 mov r2,#255
 851 000e 5A70     	 strb r2,[r3,#1]
  83:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 852              	 .loc 4 83 0
 853 0010 0E4B     	 ldr r3,.L45+4
 854 0012 181C     	 mov r0,r3
 855 0014 0021     	 mov r1,#0
 856 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
  84:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 857              	 .loc 4 84 0
 858 001a 0C49     	 ldr r1,.L45+4
 859 001c 0A4A     	 ldr r2,.L45
 860 001e 0C4B     	 ldr r3,.L45+8
 861 0020 081C     	 mov r0,r1
 862 0022 111C     	 mov r1,r2
 863 0024 1A1C     	 mov r2,r3
 864 0026 0223     	 mov r3,#2
 865 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
  85:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 866              	 .loc 4 85 0
 867 002c 074B     	 ldr r3,.L45+4
 868 002e 181C     	 mov r0,r3
 869 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
  86:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 870              	 .loc 4 86 0
 871 0034 064B     	 ldr r3,.L45+8
 872 0036 1A78     	 ldrb r2,[r3]
 873 0038 064B     	 ldr r3,.L45+12
 874 003a 1A70     	 strb r2,[r3]
  87:../nRF24L01+.c **** 	return NRF24ReadData[1];
 875              	 .loc 4 87 0
 876 003c 044B     	 ldr r3,.L45+8
 877 003e 5B78     	 ldrb r3,[r3,#1]
  88:../nRF24L01+.c **** }
 878              	 .loc 4 88 0
 879 0040 181C     	 mov r0,r3
 880 0042 BD46     	 mov sp,r7
 881              	 
 882 0044 80BD     	 pop {r7,pc}
 883              	.L46:
 884 0046 C046     	 .align 2
 885              	.L45:
 886 0048 00000000 	 .word NRF24SendData
 887 004c 00000000 	 .word SPI_MASTER_0
 888 0050 00000000 	 .word NRF24ReadData
 889 0054 00000000 	 .word Status_reg
 890              	 .cfi_endproc
 891              	.LFE249:
 893              	 .section .text.setRetries,"ax",%progbits
 894              	 .align 2
 895              	 .global setRetries
 896              	 .code 16
 897              	 .thumb_func
 899              	setRetries:
 900              	.LFB250:
  89:../nRF24L01+.c **** 
  90:../nRF24L01+.c **** void setRetries(uint8_t AutoTransmitDelay, uint8_t AutoTransmitCount){
 901              	 .loc 4 90 0
 902              	 .cfi_startproc
 903 0000 80B5     	 push {r7,lr}
 904              	.LCFI37:
 905              	 .cfi_def_cfa_offset 8
 906              	 .cfi_offset 7,-8
 907              	 .cfi_offset 14,-4
 908 0002 82B0     	 sub sp,sp,#8
 909              	.LCFI38:
 910              	 .cfi_def_cfa_offset 16
 911 0004 00AF     	 add r7,sp,#0
 912              	.LCFI39:
 913              	 .cfi_def_cfa_register 7
 914 0006 021C     	 mov r2,r0
 915 0008 FB1D     	 add r3,r7,#7
 916 000a 1A70     	 strb r2,[r3]
 917 000c BB1D     	 add r3,r7,#6
 918 000e 0A1C     	 add r2,r1,#0
 919 0010 1A70     	 strb r2,[r3]
  91:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | SETUP_RETR);
 920              	 .loc 4 91 0
 921 0012 1A4B     	 ldr r3,.L51
 922 0014 2422     	 mov r2,#36
 923 0016 1A70     	 strb r2,[r3]
  92:../nRF24L01+.c **** 	NRF24SendData [1] = (_DS(Min(AutoTransmitDelay,15),4) | Min(AutoTransmitCount,15));
 924              	 .loc 4 92 0
 925 0018 FB1D     	 add r3,r7,#7
 926 001a 1B78     	 ldrb r3,[r3]
 927 001c 0E2B     	 cmp r3,#14
 928 001e 04D8     	 bhi .L48
 929              	 .loc 4 92 0 is_stmt 0 discriminator 1
 930 0020 FB1D     	 add r3,r7,#7
 931 0022 1B78     	 ldrb r3,[r3]
 932 0024 1B01     	 lsl r3,r3,#4
 933 0026 D9B2     	 uxtb r1,r3
 934 0028 00E0     	 b .L49
 935              	.L48:
 936              	 .loc 4 92 0 discriminator 2
 937 002a F021     	 mov r1,#240
 938              	.L49:
 939              	 .loc 4 92 0 discriminator 4
 940 002c BB1D     	 add r3,r7,#6
 941 002e 1B78     	 ldrb r3,[r3]
 942 0030 DAB2     	 uxtb r2,r3
 943 0032 0F2A     	 cmp r2,#15
 944 0034 00D9     	 bls .L50
 945 0036 0F23     	 mov r3,#15
 946              	.L50:
 947 0038 DBB2     	 uxtb r3,r3
 948 003a DBB2     	 uxtb r3,r3
 949 003c 0A1C     	 add r2,r1,#0
 950 003e 1343     	 orr r3,r2
 951 0040 DBB2     	 uxtb r3,r3
 952 0042 DAB2     	 uxtb r2,r3
 953 0044 0D4B     	 ldr r3,.L51
 954 0046 5A70     	 strb r2,[r3,#1]
  93:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 955              	 .loc 4 93 0 is_stmt 1 discriminator 4
 956 0048 0D4B     	 ldr r3,.L51+4
 957 004a 181C     	 mov r0,r3
 958 004c 0021     	 mov r1,#0
 959 004e FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
  94:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 960              	 .loc 4 94 0 discriminator 4
 961 0052 0B49     	 ldr r1,.L51+4
 962 0054 094A     	 ldr r2,.L51
 963 0056 0B4B     	 ldr r3,.L51+8
 964 0058 081C     	 mov r0,r1
 965 005a 111C     	 mov r1,r2
 966 005c 1A1C     	 mov r2,r3
 967 005e 0223     	 mov r3,#2
 968 0060 FFF7FEFF 	 bl SPI_MASTER_Transfer
  95:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 969              	 .loc 4 95 0 discriminator 4
 970 0064 064B     	 ldr r3,.L51+4
 971 0066 181C     	 mov r0,r3
 972 0068 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
  96:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 973              	 .loc 4 96 0 discriminator 4
 974 006c 054B     	 ldr r3,.L51+8
 975 006e 1A78     	 ldrb r2,[r3]
 976 0070 054B     	 ldr r3,.L51+12
 977 0072 1A70     	 strb r2,[r3]
  97:../nRF24L01+.c **** }
 978              	 .loc 4 97 0 discriminator 4
 979 0074 BD46     	 mov sp,r7
 980 0076 02B0     	 add sp,sp,#8
 981              	 
 982 0078 80BD     	 pop {r7,pc}
 983              	.L52:
 984 007a C046     	 .align 2
 985              	.L51:
 986 007c 00000000 	 .word NRF24SendData
 987 0080 00000000 	 .word SPI_MASTER_0
 988 0084 00000000 	 .word NRF24ReadData
 989 0088 00000000 	 .word Status_reg
 990              	 .cfi_endproc
 991              	.LFE250:
 993              	 .section .text.getRetriesDelay,"ax",%progbits
 994              	 .align 2
 995              	 .global getRetriesDelay
 996              	 .code 16
 997              	 .thumb_func
 999              	getRetriesDelay:
 1000              	.LFB251:
  98:../nRF24L01+.c **** uint8_t getRetriesDelay(void){
 1001              	 .loc 4 98 0
 1002              	 .cfi_startproc
 1003 0000 80B5     	 push {r7,lr}
 1004              	.LCFI40:
 1005              	 .cfi_def_cfa_offset 8
 1006              	 .cfi_offset 7,-8
 1007              	 .cfi_offset 14,-4
 1008 0002 00AF     	 add r7,sp,#0
 1009              	.LCFI41:
 1010              	 .cfi_def_cfa_register 7
  99:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | SETUP_RETR);
 1011              	 .loc 4 99 0
 1012 0004 114B     	 ldr r3,.L55
 1013 0006 0422     	 mov r2,#4
 1014 0008 1A70     	 strb r2,[r3]
 100:../nRF24L01+.c **** 	NRF24SendData [1] = (RF24_NOP);
 1015              	 .loc 4 100 0
 1016 000a 104B     	 ldr r3,.L55
 1017 000c FF22     	 mov r2,#255
 1018 000e 5A70     	 strb r2,[r3,#1]
 101:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1019              	 .loc 4 101 0
 1020 0010 0F4B     	 ldr r3,.L55+4
 1021 0012 181C     	 mov r0,r3
 1022 0014 0021     	 mov r1,#0
 1023 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 102:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1024              	 .loc 4 102 0
 1025 001a 0D49     	 ldr r1,.L55+4
 1026 001c 0B4A     	 ldr r2,.L55
 1027 001e 0D4B     	 ldr r3,.L55+8
 1028 0020 081C     	 mov r0,r1
 1029 0022 111C     	 mov r1,r2
 1030 0024 1A1C     	 mov r2,r3
 1031 0026 0223     	 mov r3,#2
 1032 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 103:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1033              	 .loc 4 103 0
 1034 002c 084B     	 ldr r3,.L55+4
 1035 002e 181C     	 mov r0,r3
 1036 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 104:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1037              	 .loc 4 104 0
 1038 0034 074B     	 ldr r3,.L55+8
 1039 0036 1A78     	 ldrb r2,[r3]
 1040 0038 074B     	 ldr r3,.L55+12
 1041 003a 1A70     	 strb r2,[r3]
 105:../nRF24L01+.c **** 	return _DSn(NRF24ReadData[1],4);
 1042              	 .loc 4 105 0
 1043 003c 054B     	 ldr r3,.L55+8
 1044 003e 5B78     	 ldrb r3,[r3,#1]
 1045 0040 1B09     	 lsr r3,r3,#4
 1046 0042 DBB2     	 uxtb r3,r3
 106:../nRF24L01+.c **** }
 1047              	 .loc 4 106 0
 1048 0044 181C     	 mov r0,r3
 1049 0046 BD46     	 mov sp,r7
 1050              	 
 1051 0048 80BD     	 pop {r7,pc}
 1052              	.L56:
 1053 004a C046     	 .align 2
 1054              	.L55:
 1055 004c 00000000 	 .word NRF24SendData
 1056 0050 00000000 	 .word SPI_MASTER_0
 1057 0054 00000000 	 .word NRF24ReadData
 1058 0058 00000000 	 .word Status_reg
 1059              	 .cfi_endproc
 1060              	.LFE251:
 1062              	 .section .text.getRetriesCount,"ax",%progbits
 1063              	 .align 2
 1064              	 .global getRetriesCount
 1065              	 .code 16
 1066              	 .thumb_func
 1068              	getRetriesCount:
 1069              	.LFB252:
 107:../nRF24L01+.c **** uint8_t getRetriesCount(void){
 1070              	 .loc 4 107 0
 1071              	 .cfi_startproc
 1072 0000 80B5     	 push {r7,lr}
 1073              	.LCFI42:
 1074              	 .cfi_def_cfa_offset 8
 1075              	 .cfi_offset 7,-8
 1076              	 .cfi_offset 14,-4
 1077 0002 00AF     	 add r7,sp,#0
 1078              	.LCFI43:
 1079              	 .cfi_def_cfa_register 7
 108:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | SETUP_RETR);
 1080              	 .loc 4 108 0
 1081 0004 114B     	 ldr r3,.L59
 1082 0006 0422     	 mov r2,#4
 1083 0008 1A70     	 strb r2,[r3]
 109:../nRF24L01+.c **** 	NRF24SendData [1] = (RF24_NOP);
 1084              	 .loc 4 109 0
 1085 000a 104B     	 ldr r3,.L59
 1086 000c FF22     	 mov r2,#255
 1087 000e 5A70     	 strb r2,[r3,#1]
 110:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1088              	 .loc 4 110 0
 1089 0010 0F4B     	 ldr r3,.L59+4
 1090 0012 181C     	 mov r0,r3
 1091 0014 0021     	 mov r1,#0
 1092 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 111:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1093              	 .loc 4 111 0
 1094 001a 0D49     	 ldr r1,.L59+4
 1095 001c 0B4A     	 ldr r2,.L59
 1096 001e 0D4B     	 ldr r3,.L59+8
 1097 0020 081C     	 mov r0,r1
 1098 0022 111C     	 mov r1,r2
 1099 0024 1A1C     	 mov r2,r3
 1100 0026 0223     	 mov r3,#2
 1101 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 112:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1102              	 .loc 4 112 0
 1103 002c 084B     	 ldr r3,.L59+4
 1104 002e 181C     	 mov r0,r3
 1105 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 113:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1106              	 .loc 4 113 0
 1107 0034 074B     	 ldr r3,.L59+8
 1108 0036 1A78     	 ldrb r2,[r3]
 1109 0038 074B     	 ldr r3,.L59+12
 1110 003a 1A70     	 strb r2,[r3]
 114:../nRF24L01+.c **** 	return _AndLow4(NRF24ReadData[1]);
 1111              	 .loc 4 114 0
 1112 003c 054B     	 ldr r3,.L59+8
 1113 003e 5B78     	 ldrb r3,[r3,#1]
 1114 0040 0F22     	 mov r2,#15
 1115 0042 1340     	 and r3,r2
 1116 0044 DBB2     	 uxtb r3,r3
 115:../nRF24L01+.c **** }
 1117              	 .loc 4 115 0
 1118 0046 181C     	 mov r0,r3
 1119 0048 BD46     	 mov sp,r7
 1120              	 
 1121 004a 80BD     	 pop {r7,pc}
 1122              	.L60:
 1123              	 .align 2
 1124              	.L59:
 1125 004c 00000000 	 .word NRF24SendData
 1126 0050 00000000 	 .word SPI_MASTER_0
 1127 0054 00000000 	 .word NRF24ReadData
 1128 0058 00000000 	 .word Status_reg
 1129              	 .cfi_endproc
 1130              	.LFE252:
 1132              	 .section .text.setRadiation,"ax",%progbits
 1133              	 .align 2
 1134              	 .global setRadiation
 1135              	 .code 16
 1136              	 .thumb_func
 1138              	setRadiation:
 1139              	.LFB253:
 116:../nRF24L01+.c **** 
 117:../nRF24L01+.c **** void setRadiation (uint8_t RFpwerMode, uint8_t RFspeedMode){
 1140              	 .loc 4 117 0
 1141              	 .cfi_startproc
 1142 0000 80B5     	 push {r7,lr}
 1143              	.LCFI44:
 1144              	 .cfi_def_cfa_offset 8
 1145              	 .cfi_offset 7,-8
 1146              	 .cfi_offset 14,-4
 1147 0002 82B0     	 sub sp,sp,#8
 1148              	.LCFI45:
 1149              	 .cfi_def_cfa_offset 16
 1150 0004 00AF     	 add r7,sp,#0
 1151              	.LCFI46:
 1152              	 .cfi_def_cfa_register 7
 1153 0006 021C     	 mov r2,r0
 1154 0008 FB1D     	 add r3,r7,#7
 1155 000a 1A70     	 strb r2,[r3]
 1156 000c BB1D     	 add r3,r7,#6
 1157 000e 0A1C     	 add r2,r1,#0
 1158 0010 1A70     	 strb r2,[r3]
 118:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | RF_SETUP);
 1159              	 .loc 4 118 0
 1160 0012 194B     	 ldr r3,.L62
 1161 0014 2622     	 mov r2,#38
 1162 0016 1A70     	 strb r2,[r3]
 119:../nRF24L01+.c **** 	NRF24SendData [1] = _DS(RFpwerMode, 1) | _DS(RFspeedMode & 2,4) | _DS(RFspeedMode & 1,3);
 1163              	 .loc 4 119 0
 1164 0018 FB1D     	 add r3,r7,#7
 1165 001a 1B78     	 ldrb r3,[r3]
 1166 001c 5B00     	 lsl r3,r3,#1
 1167 001e DAB2     	 uxtb r2,r3
 1168 0020 BB1D     	 add r3,r7,#6
 1169 0022 1B78     	 ldrb r3,[r3]
 1170 0024 191C     	 add r1,r3,#0
 1171 0026 2023     	 mov r3,#32
 1172 0028 0B40     	 and r3,r1
 1173 002a DBB2     	 uxtb r3,r3
 1174 002c 1343     	 orr r3,r2
 1175 002e DAB2     	 uxtb r2,r3
 1176 0030 BB1D     	 add r3,r7,#6
 1177 0032 1B78     	 ldrb r3,[r3]
 1178 0034 191C     	 add r1,r3,#0
 1179 0036 0823     	 mov r3,#8
 1180 0038 0B40     	 and r3,r1
 1181 003a DBB2     	 uxtb r3,r3
 1182 003c 1343     	 orr r3,r2
 1183 003e DBB2     	 uxtb r3,r3
 1184 0040 DAB2     	 uxtb r2,r3
 1185 0042 0D4B     	 ldr r3,.L62
 1186 0044 5A70     	 strb r2,[r3,#1]
 120:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1187              	 .loc 4 120 0
 1188 0046 0D4B     	 ldr r3,.L62+4
 1189 0048 181C     	 mov r0,r3
 1190 004a 0021     	 mov r1,#0
 1191 004c FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 121:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1192              	 .loc 4 121 0
 1193 0050 0A49     	 ldr r1,.L62+4
 1194 0052 094A     	 ldr r2,.L62
 1195 0054 0A4B     	 ldr r3,.L62+8
 1196 0056 081C     	 mov r0,r1
 1197 0058 111C     	 mov r1,r2
 1198 005a 1A1C     	 mov r2,r3
 1199 005c 0223     	 mov r3,#2
 1200 005e FFF7FEFF 	 bl SPI_MASTER_Transfer
 122:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1201              	 .loc 4 122 0
 1202 0062 064B     	 ldr r3,.L62+4
 1203 0064 181C     	 mov r0,r3
 1204 0066 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 123:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1205              	 .loc 4 123 0
 1206 006a 054B     	 ldr r3,.L62+8
 1207 006c 1A78     	 ldrb r2,[r3]
 1208 006e 054B     	 ldr r3,.L62+12
 1209 0070 1A70     	 strb r2,[r3]
 124:../nRF24L01+.c **** }
 1210              	 .loc 4 124 0
 1211 0072 BD46     	 mov sp,r7
 1212 0074 02B0     	 add sp,sp,#8
 1213              	 
 1214 0076 80BD     	 pop {r7,pc}
 1215              	.L63:
 1216              	 .align 2
 1217              	.L62:
 1218 0078 00000000 	 .word NRF24SendData
 1219 007c 00000000 	 .word SPI_MASTER_0
 1220 0080 00000000 	 .word NRF24ReadData
 1221 0084 00000000 	 .word Status_reg
 1222              	 .cfi_endproc
 1223              	.LFE253:
 1225              	 .section .text.getRadiation,"ax",%progbits
 1226              	 .align 2
 1227              	 .global getRadiation
 1228              	 .code 16
 1229              	 .thumb_func
 1231              	getRadiation:
 1232              	.LFB254:
 125:../nRF24L01+.c **** uint8_t getRadiation(void){
 1233              	 .loc 4 125 0
 1234              	 .cfi_startproc
 1235 0000 80B5     	 push {r7,lr}
 1236              	.LCFI47:
 1237              	 .cfi_def_cfa_offset 8
 1238              	 .cfi_offset 7,-8
 1239              	 .cfi_offset 14,-4
 1240 0002 00AF     	 add r7,sp,#0
 1241              	.LCFI48:
 1242              	 .cfi_def_cfa_register 7
 126:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | RF_SETUP);
 1243              	 .loc 4 126 0
 1244 0004 104B     	 ldr r3,.L66
 1245 0006 0622     	 mov r2,#6
 1246 0008 1A70     	 strb r2,[r3]
 127:../nRF24L01+.c **** 	NRF24SendData [1] = (RF24_NOP);
 1247              	 .loc 4 127 0
 1248 000a 0F4B     	 ldr r3,.L66
 1249 000c FF22     	 mov r2,#255
 1250 000e 5A70     	 strb r2,[r3,#1]
 128:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1251              	 .loc 4 128 0
 1252 0010 0E4B     	 ldr r3,.L66+4
 1253 0012 181C     	 mov r0,r3
 1254 0014 0021     	 mov r1,#0
 1255 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 129:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1256              	 .loc 4 129 0
 1257 001a 0C49     	 ldr r1,.L66+4
 1258 001c 0A4A     	 ldr r2,.L66
 1259 001e 0C4B     	 ldr r3,.L66+8
 1260 0020 081C     	 mov r0,r1
 1261 0022 111C     	 mov r1,r2
 1262 0024 1A1C     	 mov r2,r3
 1263 0026 0223     	 mov r3,#2
 1264 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 130:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1265              	 .loc 4 130 0
 1266 002c 074B     	 ldr r3,.L66+4
 1267 002e 181C     	 mov r0,r3
 1268 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 131:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1269              	 .loc 4 131 0
 1270 0034 064B     	 ldr r3,.L66+8
 1271 0036 1A78     	 ldrb r2,[r3]
 1272 0038 064B     	 ldr r3,.L66+12
 1273 003a 1A70     	 strb r2,[r3]
 132:../nRF24L01+.c **** 	return NRF24ReadData[1];
 1274              	 .loc 4 132 0
 1275 003c 044B     	 ldr r3,.L66+8
 1276 003e 5B78     	 ldrb r3,[r3,#1]
 133:../nRF24L01+.c **** }
 1277              	 .loc 4 133 0
 1278 0040 181C     	 mov r0,r3
 1279 0042 BD46     	 mov sp,r7
 1280              	 
 1281 0044 80BD     	 pop {r7,pc}
 1282              	.L67:
 1283 0046 C046     	 .align 2
 1284              	.L66:
 1285 0048 00000000 	 .word NRF24SendData
 1286 004c 00000000 	 .word SPI_MASTER_0
 1287 0050 00000000 	 .word NRF24ReadData
 1288 0054 00000000 	 .word Status_reg
 1289              	 .cfi_endproc
 1290              	.LFE254:
 1292              	 .section .text.setAddressWidth,"ax",%progbits
 1293              	 .align 2
 1294              	 .global setAddressWidth
 1295              	 .code 16
 1296              	 .thumb_func
 1298              	setAddressWidth:
 1299              	.LFB255:
 134:../nRF24L01+.c **** 
 135:../nRF24L01+.c **** void setAddressWidth(uint8_t width){
 1300              	 .loc 4 135 0
 1301              	 .cfi_startproc
 1302 0000 80B5     	 push {r7,lr}
 1303              	.LCFI49:
 1304              	 .cfi_def_cfa_offset 8
 1305              	 .cfi_offset 7,-8
 1306              	 .cfi_offset 14,-4
 1307 0002 82B0     	 sub sp,sp,#8
 1308              	.LCFI50:
 1309              	 .cfi_def_cfa_offset 16
 1310 0004 00AF     	 add r7,sp,#0
 1311              	.LCFI51:
 1312              	 .cfi_def_cfa_register 7
 1313 0006 021C     	 mov r2,r0
 1314 0008 FB1D     	 add r3,r7,#7
 1315 000a 1A70     	 strb r2,[r3]
 136:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | SETUP_AW);
 1316              	 .loc 4 136 0
 1317 000c 184B     	 ldr r3,.L73
 1318 000e 2322     	 mov r2,#35
 1319 0010 1A70     	 strb r2,[r3]
 137:../nRF24L01+.c **** 	NRF24SendData [1] = Max(Min(3,width),5) - 2;
 1320              	 .loc 4 137 0
 1321 0012 FB1D     	 add r3,r7,#7
 1322 0014 1B78     	 ldrb r3,[r3]
 1323 0016 032B     	 cmp r3,#3
 1324 0018 0ED8     	 bhi .L69
 1325              	 .loc 4 137 0 is_stmt 0 discriminator 1
 1326 001a FB1D     	 add r3,r7,#7
 1327 001c 1B78     	 ldrb r3,[r3]
 1328 001e 052B     	 cmp r3,#5
 1329 0020 0ADD     	 ble .L69
 1330              	 .loc 4 137 0 discriminator 3
 1331 0022 FB1D     	 add r3,r7,#7
 1332 0024 1B78     	 ldrb r3,[r3]
 1333 0026 032B     	 cmp r3,#3
 1334 0028 04D8     	 bhi .L70
 1335              	 .loc 4 137 0 discriminator 5
 1336 002a FB1D     	 add r3,r7,#7
 1337 002c 1B78     	 ldrb r3,[r3]
 1338 002e 023B     	 sub r3,r3,#2
 1339 0030 DBB2     	 uxtb r3,r3
 1340 0032 02E0     	 b .L72
 1341              	.L70:
 1342              	 .loc 4 137 0 discriminator 6
 1343 0034 0123     	 mov r3,#1
 1344 0036 00E0     	 b .L72
 1345              	.L69:
 1346              	 .loc 4 137 0 discriminator 4
 1347 0038 0323     	 mov r3,#3
 1348              	.L72:
 1349              	 .loc 4 137 0 discriminator 10
 1350 003a 0D4A     	 ldr r2,.L73
 1351 003c 5370     	 strb r3,[r2,#1]
 138:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1352              	 .loc 4 138 0 is_stmt 1 discriminator 10
 1353 003e 0D4B     	 ldr r3,.L73+4
 1354 0040 181C     	 mov r0,r3
 1355 0042 0021     	 mov r1,#0
 1356 0044 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 139:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1357              	 .loc 4 139 0 discriminator 10
 1358 0048 0A49     	 ldr r1,.L73+4
 1359 004a 094A     	 ldr r2,.L73
 1360 004c 0A4B     	 ldr r3,.L73+8
 1361 004e 081C     	 mov r0,r1
 1362 0050 111C     	 mov r1,r2
 1363 0052 1A1C     	 mov r2,r3
 1364 0054 0223     	 mov r3,#2
 1365 0056 FFF7FEFF 	 bl SPI_MASTER_Transfer
 140:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1366              	 .loc 4 140 0 discriminator 10
 1367 005a 064B     	 ldr r3,.L73+4
 1368 005c 181C     	 mov r0,r3
 1369 005e FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 141:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1370              	 .loc 4 141 0 discriminator 10
 1371 0062 054B     	 ldr r3,.L73+8
 1372 0064 1A78     	 ldrb r2,[r3]
 1373 0066 054B     	 ldr r3,.L73+12
 1374 0068 1A70     	 strb r2,[r3]
 142:../nRF24L01+.c **** }
 1375              	 .loc 4 142 0 discriminator 10
 1376 006a BD46     	 mov sp,r7
 1377 006c 02B0     	 add sp,sp,#8
 1378              	 
 1379 006e 80BD     	 pop {r7,pc}
 1380              	.L74:
 1381              	 .align 2
 1382              	.L73:
 1383 0070 00000000 	 .word NRF24SendData
 1384 0074 00000000 	 .word SPI_MASTER_0
 1385 0078 00000000 	 .word NRF24ReadData
 1386 007c 00000000 	 .word Status_reg
 1387              	 .cfi_endproc
 1388              	.LFE255:
 1390              	 .section .text.getAddressWidth,"ax",%progbits
 1391              	 .align 2
 1392              	 .global getAddressWidth
 1393              	 .code 16
 1394              	 .thumb_func
 1396              	getAddressWidth:
 1397              	.LFB256:
 143:../nRF24L01+.c **** uint8_t getAddressWidth(void){
 1398              	 .loc 4 143 0
 1399              	 .cfi_startproc
 1400 0000 80B5     	 push {r7,lr}
 1401              	.LCFI52:
 1402              	 .cfi_def_cfa_offset 8
 1403              	 .cfi_offset 7,-8
 1404              	 .cfi_offset 14,-4
 1405 0002 00AF     	 add r7,sp,#0
 1406              	.LCFI53:
 1407              	 .cfi_def_cfa_register 7
 144:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | SETUP_AW);
 1408              	 .loc 4 144 0
 1409 0004 124B     	 ldr r3,.L77
 1410 0006 0322     	 mov r2,#3
 1411 0008 1A70     	 strb r2,[r3]
 145:../nRF24L01+.c **** 	NRF24SendData [1] = (RF24_NOP);
 1412              	 .loc 4 145 0
 1413 000a 114B     	 ldr r3,.L77
 1414 000c FF22     	 mov r2,#255
 1415 000e 5A70     	 strb r2,[r3,#1]
 146:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1416              	 .loc 4 146 0
 1417 0010 104B     	 ldr r3,.L77+4
 1418 0012 181C     	 mov r0,r3
 1419 0014 0021     	 mov r1,#0
 1420 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 147:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1421              	 .loc 4 147 0
 1422 001a 0E49     	 ldr r1,.L77+4
 1423 001c 0C4A     	 ldr r2,.L77
 1424 001e 0E4B     	 ldr r3,.L77+8
 1425 0020 081C     	 mov r0,r1
 1426 0022 111C     	 mov r1,r2
 1427 0024 1A1C     	 mov r2,r3
 1428 0026 0223     	 mov r3,#2
 1429 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 148:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1430              	 .loc 4 148 0
 1431 002c 094B     	 ldr r3,.L77+4
 1432 002e 181C     	 mov r0,r3
 1433 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 149:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1434              	 .loc 4 149 0
 1435 0034 084B     	 ldr r3,.L77+8
 1436 0036 1A78     	 ldrb r2,[r3]
 1437 0038 084B     	 ldr r3,.L77+12
 1438 003a 1A70     	 strb r2,[r3]
 150:../nRF24L01+.c **** 	return (NRF24ReadData[1] & 3) + 2; // 2 is added cu
 1439              	 .loc 4 150 0
 1440 003c 064B     	 ldr r3,.L77+8
 1441 003e 5B78     	 ldrb r3,[r3,#1]
 1442 0040 0322     	 mov r2,#3
 1443 0042 1340     	 and r3,r2
 1444 0044 DBB2     	 uxtb r3,r3
 1445 0046 0233     	 add r3,r3,#2
 1446 0048 DBB2     	 uxtb r3,r3
 151:../nRF24L01+.c **** }
 1447              	 .loc 4 151 0
 1448 004a 181C     	 mov r0,r3
 1449 004c BD46     	 mov sp,r7
 1450              	 
 1451 004e 80BD     	 pop {r7,pc}
 1452              	.L78:
 1453              	 .align 2
 1454              	.L77:
 1455 0050 00000000 	 .word NRF24SendData
 1456 0054 00000000 	 .word SPI_MASTER_0
 1457 0058 00000000 	 .word NRF24ReadData
 1458 005c 00000000 	 .word Status_reg
 1459              	 .cfi_endproc
 1460              	.LFE256:
 1462              	 .section .text.setFeatures,"ax",%progbits
 1463              	 .align 2
 1464              	 .global setFeatures
 1465              	 .code 16
 1466              	 .thumb_func
 1468              	setFeatures:
 1469              	.LFB257:
 152:../nRF24L01+.c **** 
 153:../nRF24L01+.c **** void setFeatures(uint8_t val){
 1470              	 .loc 4 153 0
 1471              	 .cfi_startproc
 1472 0000 80B5     	 push {r7,lr}
 1473              	.LCFI54:
 1474              	 .cfi_def_cfa_offset 8
 1475              	 .cfi_offset 7,-8
 1476              	 .cfi_offset 14,-4
 1477 0002 82B0     	 sub sp,sp,#8
 1478              	.LCFI55:
 1479              	 .cfi_def_cfa_offset 16
 1480 0004 00AF     	 add r7,sp,#0
 1481              	.LCFI56:
 1482              	 .cfi_def_cfa_register 7
 1483 0006 021C     	 mov r2,r0
 1484 0008 FB1D     	 add r3,r7,#7
 1485 000a 1A70     	 strb r2,[r3]
 154:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | FEATURE);
 1486              	 .loc 4 154 0
 1487 000c 144B     	 ldr r3,.L82
 1488 000e 3D22     	 mov r2,#61
 1489 0010 1A70     	 strb r2,[r3]
 155:../nRF24L01+.c **** 	NRF24SendData [1] = Max(Min(0,val),3);
 1490              	 .loc 4 155 0
 1491 0012 FB1D     	 add r3,r7,#7
 1492 0014 1B78     	 ldrb r3,[r3]
 1493 0016 002B     	 cmp r3,#0
 1494 0018 05D1     	 bne .L80
 1495              	 .loc 4 155 0 is_stmt 0 discriminator 1
 1496 001a FB1D     	 add r3,r7,#7
 1497 001c 1B78     	 ldrb r3,[r3]
 1498 001e 032B     	 cmp r3,#3
 1499 0020 01DD     	 ble .L80
 1500              	 .loc 4 155 0 discriminator 3
 1501 0022 0022     	 mov r2,#0
 1502 0024 00E0     	 b .L81
 1503              	.L80:
 1504              	 .loc 4 155 0 discriminator 4
 1505 0026 0322     	 mov r2,#3
 1506              	.L81:
 1507              	 .loc 4 155 0 discriminator 6
 1508 0028 0D4B     	 ldr r3,.L82
 1509 002a 5A70     	 strb r2,[r3,#1]
 156:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1510              	 .loc 4 156 0 is_stmt 1 discriminator 6
 1511 002c 0D4B     	 ldr r3,.L82+4
 1512 002e 181C     	 mov r0,r3
 1513 0030 0021     	 mov r1,#0
 1514 0032 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 157:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1515              	 .loc 4 157 0 discriminator 6
 1516 0036 0B49     	 ldr r1,.L82+4
 1517 0038 094A     	 ldr r2,.L82
 1518 003a 0B4B     	 ldr r3,.L82+8
 1519 003c 081C     	 mov r0,r1
 1520 003e 111C     	 mov r1,r2
 1521 0040 1A1C     	 mov r2,r3
 1522 0042 0223     	 mov r3,#2
 1523 0044 FFF7FEFF 	 bl SPI_MASTER_Transfer
 158:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1524              	 .loc 4 158 0 discriminator 6
 1525 0048 064B     	 ldr r3,.L82+4
 1526 004a 181C     	 mov r0,r3
 1527 004c FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 159:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1528              	 .loc 4 159 0 discriminator 6
 1529 0050 054B     	 ldr r3,.L82+8
 1530 0052 1A78     	 ldrb r2,[r3]
 1531 0054 054B     	 ldr r3,.L82+12
 1532 0056 1A70     	 strb r2,[r3]
 160:../nRF24L01+.c **** }
 1533              	 .loc 4 160 0 discriminator 6
 1534 0058 BD46     	 mov sp,r7
 1535 005a 02B0     	 add sp,sp,#8
 1536              	 
 1537 005c 80BD     	 pop {r7,pc}
 1538              	.L83:
 1539 005e C046     	 .align 2
 1540              	.L82:
 1541 0060 00000000 	 .word NRF24SendData
 1542 0064 00000000 	 .word SPI_MASTER_0
 1543 0068 00000000 	 .word NRF24ReadData
 1544 006c 00000000 	 .word Status_reg
 1545              	 .cfi_endproc
 1546              	.LFE257:
 1548              	 .section .text.getFeatures,"ax",%progbits
 1549              	 .align 2
 1550              	 .global getFeatures
 1551              	 .code 16
 1552              	 .thumb_func
 1554              	getFeatures:
 1555              	.LFB258:
 161:../nRF24L01+.c **** uint8_t getFeatures(){
 1556              	 .loc 4 161 0
 1557              	 .cfi_startproc
 1558 0000 80B5     	 push {r7,lr}
 1559              	.LCFI57:
 1560              	 .cfi_def_cfa_offset 8
 1561              	 .cfi_offset 7,-8
 1562              	 .cfi_offset 14,-4
 1563 0002 00AF     	 add r7,sp,#0
 1564              	.LCFI58:
 1565              	 .cfi_def_cfa_register 7
 162:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | FEATURE);
 1566              	 .loc 4 162 0
 1567 0004 104B     	 ldr r3,.L86
 1568 0006 1D22     	 mov r2,#29
 1569 0008 1A70     	 strb r2,[r3]
 163:../nRF24L01+.c **** 	NRF24SendData [1] = RF24_NOP;
 1570              	 .loc 4 163 0
 1571 000a 0F4B     	 ldr r3,.L86
 1572 000c FF22     	 mov r2,#255
 1573 000e 5A70     	 strb r2,[r3,#1]
 164:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1574              	 .loc 4 164 0
 1575 0010 0E4B     	 ldr r3,.L86+4
 1576 0012 181C     	 mov r0,r3
 1577 0014 0021     	 mov r1,#0
 1578 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 165:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1579              	 .loc 4 165 0
 1580 001a 0C49     	 ldr r1,.L86+4
 1581 001c 0A4A     	 ldr r2,.L86
 1582 001e 0C4B     	 ldr r3,.L86+8
 1583 0020 081C     	 mov r0,r1
 1584 0022 111C     	 mov r1,r2
 1585 0024 1A1C     	 mov r2,r3
 1586 0026 0223     	 mov r3,#2
 1587 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 166:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1588              	 .loc 4 166 0
 1589 002c 074B     	 ldr r3,.L86+4
 1590 002e 181C     	 mov r0,r3
 1591 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 167:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1592              	 .loc 4 167 0
 1593 0034 064B     	 ldr r3,.L86+8
 1594 0036 1A78     	 ldrb r2,[r3]
 1595 0038 064B     	 ldr r3,.L86+12
 1596 003a 1A70     	 strb r2,[r3]
 168:../nRF24L01+.c **** 	return NRF24ReadData[1];
 1597              	 .loc 4 168 0
 1598 003c 044B     	 ldr r3,.L86+8
 1599 003e 5B78     	 ldrb r3,[r3,#1]
 169:../nRF24L01+.c **** }
 1600              	 .loc 4 169 0
 1601 0040 181C     	 mov r0,r3
 1602 0042 BD46     	 mov sp,r7
 1603              	 
 1604 0044 80BD     	 pop {r7,pc}
 1605              	.L87:
 1606 0046 C046     	 .align 2
 1607              	.L86:
 1608 0048 00000000 	 .word NRF24SendData
 1609 004c 00000000 	 .word SPI_MASTER_0
 1610 0050 00000000 	 .word NRF24ReadData
 1611 0054 00000000 	 .word Status_reg
 1612              	 .cfi_endproc
 1613              	.LFE258:
 1615              	 .section .text.disableDynamicPayLoads,"ax",%progbits
 1616              	 .align 2
 1617              	 .global disableDynamicPayLoads
 1618              	 .code 16
 1619              	 .thumb_func
 1621              	disableDynamicPayLoads:
 1622              	.LFB259:
 170:../nRF24L01+.c **** 
 171:../nRF24L01+.c **** void disableDynamicPayLoads(){
 1623              	 .loc 4 171 0
 1624              	 .cfi_startproc
 1625 0000 80B5     	 push {r7,lr}
 1626              	.LCFI59:
 1627              	 .cfi_def_cfa_offset 8
 1628              	 .cfi_offset 7,-8
 1629              	 .cfi_offset 14,-4
 1630 0002 00AF     	 add r7,sp,#0
 1631              	.LCFI60:
 1632              	 .cfi_def_cfa_register 7
 172:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | FEATURE);
 1633              	 .loc 4 172 0
 1634 0004 124B     	 ldr r3,.L89
 1635 0006 3D22     	 mov r2,#61
 1636 0008 1A70     	 strb r2,[r3]
 173:../nRF24L01+.c **** 	NRF24SendData [1] = getFeatures() & 0b11111101;
 1637              	 .loc 4 173 0
 1638 000a FFF7FEFF 	 bl getFeatures
 1639 000e 031C     	 mov r3,r0
 1640 0010 1A1C     	 mov r2,r3
 1641 0012 0223     	 mov r3,#2
 1642 0014 9A43     	 bic r2,r3
 1643 0016 131C     	 mov r3,r2
 1644 0018 DAB2     	 uxtb r2,r3
 1645 001a 0D4B     	 ldr r3,.L89
 1646 001c 5A70     	 strb r2,[r3,#1]
 174:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1647              	 .loc 4 174 0
 1648 001e 0D4B     	 ldr r3,.L89+4
 1649 0020 181C     	 mov r0,r3
 1650 0022 0021     	 mov r1,#0
 1651 0024 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 175:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1652              	 .loc 4 175 0
 1653 0028 0A49     	 ldr r1,.L89+4
 1654 002a 094A     	 ldr r2,.L89
 1655 002c 0A4B     	 ldr r3,.L89+8
 1656 002e 081C     	 mov r0,r1
 1657 0030 111C     	 mov r1,r2
 1658 0032 1A1C     	 mov r2,r3
 1659 0034 0223     	 mov r3,#2
 1660 0036 FFF7FEFF 	 bl SPI_MASTER_Transfer
 176:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1661              	 .loc 4 176 0
 1662 003a 064B     	 ldr r3,.L89+4
 1663 003c 181C     	 mov r0,r3
 1664 003e FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 177:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1665              	 .loc 4 177 0
 1666 0042 054B     	 ldr r3,.L89+8
 1667 0044 1A78     	 ldrb r2,[r3]
 1668 0046 054B     	 ldr r3,.L89+12
 1669 0048 1A70     	 strb r2,[r3]
 178:../nRF24L01+.c **** }
 1670              	 .loc 4 178 0
 1671 004a BD46     	 mov sp,r7
 1672              	 
 1673 004c 80BD     	 pop {r7,pc}
 1674              	.L90:
 1675 004e C046     	 .align 2
 1676              	.L89:
 1677 0050 00000000 	 .word NRF24SendData
 1678 0054 00000000 	 .word SPI_MASTER_0
 1679 0058 00000000 	 .word NRF24ReadData
 1680 005c 00000000 	 .word Status_reg
 1681              	 .cfi_endproc
 1682              	.LFE259:
 1684              	 .section .text.enableDynamicPayLoads,"ax",%progbits
 1685              	 .align 2
 1686              	 .global enableDynamicPayLoads
 1687              	 .code 16
 1688              	 .thumb_func
 1690              	enableDynamicPayLoads:
 1691              	.LFB260:
 179:../nRF24L01+.c **** void enableDynamicPayLoads(){
 1692              	 .loc 4 179 0
 1693              	 .cfi_startproc
 1694 0000 80B5     	 push {r7,lr}
 1695              	.LCFI61:
 1696              	 .cfi_def_cfa_offset 8
 1697              	 .cfi_offset 7,-8
 1698              	 .cfi_offset 14,-4
 1699 0002 00AF     	 add r7,sp,#0
 1700              	.LCFI62:
 1701              	 .cfi_def_cfa_register 7
 180:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | FEATURE);
 1702              	 .loc 4 180 0
 1703 0004 114B     	 ldr r3,.L92
 1704 0006 3D22     	 mov r2,#61
 1705 0008 1A70     	 strb r2,[r3]
 181:../nRF24L01+.c **** 	NRF24SendData [1] = getFeatures() | 0b00000010;
 1706              	 .loc 4 181 0
 1707 000a FFF7FEFF 	 bl getFeatures
 1708 000e 031C     	 mov r3,r0
 1709 0010 1A1C     	 mov r2,r3
 1710 0012 0223     	 mov r3,#2
 1711 0014 1343     	 orr r3,r2
 1712 0016 DAB2     	 uxtb r2,r3
 1713 0018 0C4B     	 ldr r3,.L92
 1714 001a 5A70     	 strb r2,[r3,#1]
 182:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1715              	 .loc 4 182 0
 1716 001c 0C4B     	 ldr r3,.L92+4
 1717 001e 181C     	 mov r0,r3
 1718 0020 0021     	 mov r1,#0
 1719 0022 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 183:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1720              	 .loc 4 183 0
 1721 0026 0A49     	 ldr r1,.L92+4
 1722 0028 084A     	 ldr r2,.L92
 1723 002a 0A4B     	 ldr r3,.L92+8
 1724 002c 081C     	 mov r0,r1
 1725 002e 111C     	 mov r1,r2
 1726 0030 1A1C     	 mov r2,r3
 1727 0032 0223     	 mov r3,#2
 1728 0034 FFF7FEFF 	 bl SPI_MASTER_Transfer
 184:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1729              	 .loc 4 184 0
 1730 0038 054B     	 ldr r3,.L92+4
 1731 003a 181C     	 mov r0,r3
 1732 003c FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 185:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1733              	 .loc 4 185 0
 1734 0040 044B     	 ldr r3,.L92+8
 1735 0042 1A78     	 ldrb r2,[r3]
 1736 0044 044B     	 ldr r3,.L92+12
 1737 0046 1A70     	 strb r2,[r3]
 186:../nRF24L01+.c **** }
 1738              	 .loc 4 186 0
 1739 0048 BD46     	 mov sp,r7
 1740              	 
 1741 004a 80BD     	 pop {r7,pc}
 1742              	.L93:
 1743              	 .align 2
 1744              	.L92:
 1745 004c 00000000 	 .word NRF24SendData
 1746 0050 00000000 	 .word SPI_MASTER_0
 1747 0054 00000000 	 .word NRF24ReadData
 1748 0058 00000000 	 .word Status_reg
 1749              	 .cfi_endproc
 1750              	.LFE260:
 1752              	 .section .text.enableAutoACK,"ax",%progbits
 1753              	 .align 2
 1754              	 .global enableAutoACK
 1755              	 .code 16
 1756              	 .thumb_func
 1758              	enableAutoACK:
 1759              	.LFB261:
 187:../nRF24L01+.c **** 
 188:../nRF24L01+.c **** 
 189:../nRF24L01+.c **** void enableAutoACK(){ // all pipes
 1760              	 .loc 4 189 0
 1761              	 .cfi_startproc
 1762 0000 80B5     	 push {r7,lr}
 1763              	.LCFI63:
 1764              	 .cfi_def_cfa_offset 8
 1765              	 .cfi_offset 7,-8
 1766              	 .cfi_offset 14,-4
 1767 0002 00AF     	 add r7,sp,#0
 1768              	.LCFI64:
 1769              	 .cfi_def_cfa_register 7
 190:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | ENAA);
 1770              	 .loc 4 190 0
 1771 0004 0E4B     	 ldr r3,.L95
 1772 0006 2122     	 mov r2,#33
 1773 0008 1A70     	 strb r2,[r3]
 191:../nRF24L01+.c **** 	NRF24SendData [1] = 0x3F;
 1774              	 .loc 4 191 0
 1775 000a 0D4B     	 ldr r3,.L95
 1776 000c 3F22     	 mov r2,#63
 1777 000e 5A70     	 strb r2,[r3,#1]
 192:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1778              	 .loc 4 192 0
 1779 0010 0C4B     	 ldr r3,.L95+4
 1780 0012 181C     	 mov r0,r3
 1781 0014 0021     	 mov r1,#0
 1782 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 193:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1783              	 .loc 4 193 0
 1784 001a 0A49     	 ldr r1,.L95+4
 1785 001c 084A     	 ldr r2,.L95
 1786 001e 0A4B     	 ldr r3,.L95+8
 1787 0020 081C     	 mov r0,r1
 1788 0022 111C     	 mov r1,r2
 1789 0024 1A1C     	 mov r2,r3
 1790 0026 0223     	 mov r3,#2
 1791 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 194:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1792              	 .loc 4 194 0
 1793 002c 054B     	 ldr r3,.L95+4
 1794 002e 181C     	 mov r0,r3
 1795 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 195:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1796              	 .loc 4 195 0
 1797 0034 044B     	 ldr r3,.L95+8
 1798 0036 1A78     	 ldrb r2,[r3]
 1799 0038 044B     	 ldr r3,.L95+12
 1800 003a 1A70     	 strb r2,[r3]
 196:../nRF24L01+.c **** }
 1801              	 .loc 4 196 0
 1802 003c BD46     	 mov sp,r7
 1803              	 
 1804 003e 80BD     	 pop {r7,pc}
 1805              	.L96:
 1806              	 .align 2
 1807              	.L95:
 1808 0040 00000000 	 .word NRF24SendData
 1809 0044 00000000 	 .word SPI_MASTER_0
 1810 0048 00000000 	 .word NRF24ReadData
 1811 004c 00000000 	 .word Status_reg
 1812              	 .cfi_endproc
 1813              	.LFE261:
 1815              	 .section .text.enableRXpipe,"ax",%progbits
 1816              	 .align 2
 1817              	 .global enableRXpipe
 1818              	 .code 16
 1819              	 .thumb_func
 1821              	enableRXpipe:
 1822              	.LFB262:
 197:../nRF24L01+.c **** 
 198:../nRF24L01+.c **** 
 199:../nRF24L01+.c **** void enableRXpipe(uint8_t pipeNum){
 1823              	 .loc 4 199 0
 1824              	 .cfi_startproc
 1825 0000 80B5     	 push {r7,lr}
 1826              	.LCFI65:
 1827              	 .cfi_def_cfa_offset 8
 1828              	 .cfi_offset 7,-8
 1829              	 .cfi_offset 14,-4
 1830 0002 82B0     	 sub sp,sp,#8
 1831              	.LCFI66:
 1832              	 .cfi_def_cfa_offset 16
 1833 0004 00AF     	 add r7,sp,#0
 1834              	.LCFI67:
 1835              	 .cfi_def_cfa_register 7
 1836 0006 021C     	 mov r2,r0
 1837 0008 FB1D     	 add r3,r7,#7
 1838 000a 1A70     	 strb r2,[r3]
 200:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | EN_RXADDR);
 1839              	 .loc 4 200 0
 1840 000c 154B     	 ldr r3,.L98
 1841 000e 2222     	 mov r2,#34
 1842 0010 1A70     	 strb r2,[r3]
 201:../nRF24L01+.c **** 	NRF24SendData [1] = getRXpipesEnabled() | _DS(1,pipeNum);
 1843              	 .loc 4 201 0
 1844 0012 FFF7FEFF 	 bl getRXpipesEnabled
 1845 0016 031C     	 mov r3,r0
 1846 0018 D9B2     	 uxtb r1,r3
 1847 001a FB1D     	 add r3,r7,#7
 1848 001c 1B78     	 ldrb r3,[r3]
 1849 001e 0122     	 mov r2,#1
 1850 0020 9A40     	 lsl r2,r2,r3
 1851 0022 131C     	 mov r3,r2
 1852 0024 DBB2     	 uxtb r3,r3
 1853 0026 0A1C     	 add r2,r1,#0
 1854 0028 1343     	 orr r3,r2
 1855 002a DBB2     	 uxtb r3,r3
 1856 002c DAB2     	 uxtb r2,r3
 1857 002e 0D4B     	 ldr r3,.L98
 1858 0030 5A70     	 strb r2,[r3,#1]
 202:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1859              	 .loc 4 202 0
 1860 0032 0D4B     	 ldr r3,.L98+4
 1861 0034 181C     	 mov r0,r3
 1862 0036 0021     	 mov r1,#0
 1863 0038 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 203:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1864              	 .loc 4 203 0
 1865 003c 0A49     	 ldr r1,.L98+4
 1866 003e 094A     	 ldr r2,.L98
 1867 0040 0A4B     	 ldr r3,.L98+8
 1868 0042 081C     	 mov r0,r1
 1869 0044 111C     	 mov r1,r2
 1870 0046 1A1C     	 mov r2,r3
 1871 0048 0223     	 mov r3,#2
 1872 004a FFF7FEFF 	 bl SPI_MASTER_Transfer
 204:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1873              	 .loc 4 204 0
 1874 004e 064B     	 ldr r3,.L98+4
 1875 0050 181C     	 mov r0,r3
 1876 0052 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 205:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1877              	 .loc 4 205 0
 1878 0056 054B     	 ldr r3,.L98+8
 1879 0058 1A78     	 ldrb r2,[r3]
 1880 005a 054B     	 ldr r3,.L98+12
 1881 005c 1A70     	 strb r2,[r3]
 206:../nRF24L01+.c **** }
 1882              	 .loc 4 206 0
 1883 005e BD46     	 mov sp,r7
 1884 0060 02B0     	 add sp,sp,#8
 1885              	 
 1886 0062 80BD     	 pop {r7,pc}
 1887              	.L99:
 1888              	 .align 2
 1889              	.L98:
 1890 0064 00000000 	 .word NRF24SendData
 1891 0068 00000000 	 .word SPI_MASTER_0
 1892 006c 00000000 	 .word NRF24ReadData
 1893 0070 00000000 	 .word Status_reg
 1894              	 .cfi_endproc
 1895              	.LFE262:
 1897              	 .section .text.getRXpipesEnabled,"ax",%progbits
 1898              	 .align 2
 1899              	 .global getRXpipesEnabled
 1900              	 .code 16
 1901              	 .thumb_func
 1903              	getRXpipesEnabled:
 1904              	.LFB263:
 207:../nRF24L01+.c **** uint8_t getRXpipesEnabled(void){
 1905              	 .loc 4 207 0
 1906              	 .cfi_startproc
 1907 0000 80B5     	 push {r7,lr}
 1908              	.LCFI68:
 1909              	 .cfi_def_cfa_offset 8
 1910              	 .cfi_offset 7,-8
 1911              	 .cfi_offset 14,-4
 1912 0002 00AF     	 add r7,sp,#0
 1913              	.LCFI69:
 1914              	 .cfi_def_cfa_register 7
 208:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | EN_RXADDR);
 1915              	 .loc 4 208 0
 1916 0004 104B     	 ldr r3,.L102
 1917 0006 0222     	 mov r2,#2
 1918 0008 1A70     	 strb r2,[r3]
 209:../nRF24L01+.c **** 	NRF24SendData [1] = RF24_NOP;
 1919              	 .loc 4 209 0
 1920 000a 0F4B     	 ldr r3,.L102
 1921 000c FF22     	 mov r2,#255
 1922 000e 5A70     	 strb r2,[r3,#1]
 210:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 1923              	 .loc 4 210 0
 1924 0010 0E4B     	 ldr r3,.L102+4
 1925 0012 181C     	 mov r0,r3
 1926 0014 0021     	 mov r1,#0
 1927 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 211:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 1928              	 .loc 4 211 0
 1929 001a 0C49     	 ldr r1,.L102+4
 1930 001c 0A4A     	 ldr r2,.L102
 1931 001e 0C4B     	 ldr r3,.L102+8
 1932 0020 081C     	 mov r0,r1
 1933 0022 111C     	 mov r1,r2
 1934 0024 1A1C     	 mov r2,r3
 1935 0026 0223     	 mov r3,#2
 1936 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 212:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 1937              	 .loc 4 212 0
 1938 002c 074B     	 ldr r3,.L102+4
 1939 002e 181C     	 mov r0,r3
 1940 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 213:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 1941              	 .loc 4 213 0
 1942 0034 064B     	 ldr r3,.L102+8
 1943 0036 1A78     	 ldrb r2,[r3]
 1944 0038 064B     	 ldr r3,.L102+12
 1945 003a 1A70     	 strb r2,[r3]
 214:../nRF24L01+.c **** 	return NRF24ReadData[1];
 1946              	 .loc 4 214 0
 1947 003c 044B     	 ldr r3,.L102+8
 1948 003e 5B78     	 ldrb r3,[r3,#1]
 215:../nRF24L01+.c **** }
 1949              	 .loc 4 215 0
 1950 0040 181C     	 mov r0,r3
 1951 0042 BD46     	 mov sp,r7
 1952              	 
 1953 0044 80BD     	 pop {r7,pc}
 1954              	.L103:
 1955 0046 C046     	 .align 2
 1956              	.L102:
 1957 0048 00000000 	 .word NRF24SendData
 1958 004c 00000000 	 .word SPI_MASTER_0
 1959 0050 00000000 	 .word NRF24ReadData
 1960 0054 00000000 	 .word Status_reg
 1961              	 .cfi_endproc
 1962              	.LFE263:
 1964              	 .section .text.setPayloadSizeAllPipes,"ax",%progbits
 1965              	 .align 2
 1966              	 .global setPayloadSizeAllPipes
 1967              	 .code 16
 1968              	 .thumb_func
 1970              	setPayloadSizeAllPipes:
 1971              	.LFB264:
 216:../nRF24L01+.c **** 
 217:../nRF24L01+.c **** void setPayloadSizeAllPipes(uint8_t size){
 1972              	 .loc 4 217 0
 1973              	 .cfi_startproc
 1974 0000 80B5     	 push {r7,lr}
 1975              	.LCFI70:
 1976              	 .cfi_def_cfa_offset 8
 1977              	 .cfi_offset 7,-8
 1978              	 .cfi_offset 14,-4
 1979 0002 84B0     	 sub sp,sp,#16
 1980              	.LCFI71:
 1981              	 .cfi_def_cfa_offset 24
 1982 0004 00AF     	 add r7,sp,#0
 1983              	.LCFI72:
 1984              	 .cfi_def_cfa_register 7
 1985 0006 021C     	 mov r2,r0
 1986 0008 FB1D     	 add r3,r7,#7
 1987 000a 1A70     	 strb r2,[r3]
 1988              	.LBB12:
 218:../nRF24L01+.c **** 	for(int i = 0; i < 6 ; i++){
 1989              	 .loc 4 218 0
 1990 000c 0023     	 mov r3,#0
 1991 000e FB60     	 str r3,[r7,#12]
 1992 0010 28E0     	 b .L105
 1993              	.L106:
 219:../nRF24L01+.c **** 		NRF24SendData [0] = (W_REGISTER | (RX_PW_P0 + i));
 1994              	 .loc 4 219 0 discriminator 3
 1995 0012 FB68     	 ldr r3,[r7,#12]
 1996 0014 DBB2     	 uxtb r3,r3
 1997 0016 1133     	 add r3,r3,#17
 1998 0018 DBB2     	 uxtb r3,r3
 1999 001a DBB2     	 uxtb r3,r3
 2000 001c 1A1C     	 add r2,r3,#0
 2001 001e 2023     	 mov r3,#32
 2002 0020 1343     	 orr r3,r2
 2003 0022 DBB2     	 uxtb r3,r3
 2004 0024 DAB2     	 uxtb r2,r3
 2005 0026 124B     	 ldr r3,.L107
 2006 0028 1A70     	 strb r2,[r3]
 220:../nRF24L01+.c **** 		NRF24SendData [1] = size;
 2007              	 .loc 4 220 0 discriminator 3
 2008 002a 114B     	 ldr r3,.L107
 2009 002c FA1D     	 add r2,r7,#7
 2010 002e 1278     	 ldrb r2,[r2]
 2011 0030 5A70     	 strb r2,[r3,#1]
 221:../nRF24L01+.c **** 		SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2012              	 .loc 4 221 0 discriminator 3
 2013 0032 104B     	 ldr r3,.L107+4
 2014 0034 181C     	 mov r0,r3
 2015 0036 0021     	 mov r1,#0
 2016 0038 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 222:../nRF24L01+.c **** 		SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2017              	 .loc 4 222 0 discriminator 3
 2018 003c 0D49     	 ldr r1,.L107+4
 2019 003e 0C4A     	 ldr r2,.L107
 2020 0040 0D4B     	 ldr r3,.L107+8
 2021 0042 081C     	 mov r0,r1
 2022 0044 111C     	 mov r1,r2
 2023 0046 1A1C     	 mov r2,r3
 2024 0048 0223     	 mov r3,#2
 2025 004a FFF7FEFF 	 bl SPI_MASTER_Transfer
 223:../nRF24L01+.c **** 		SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2026              	 .loc 4 223 0 discriminator 3
 2027 004e 094B     	 ldr r3,.L107+4
 2028 0050 181C     	 mov r0,r3
 2029 0052 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 224:../nRF24L01+.c **** 		Status_reg = NRF24ReadData[0];
 2030              	 .loc 4 224 0 discriminator 3
 2031 0056 084B     	 ldr r3,.L107+8
 2032 0058 1A78     	 ldrb r2,[r3]
 2033 005a 084B     	 ldr r3,.L107+12
 2034 005c 1A70     	 strb r2,[r3]
 218:../nRF24L01+.c **** 		NRF24SendData [0] = (W_REGISTER | (RX_PW_P0 + i));
 2035              	 .loc 4 218 0 discriminator 3
 2036 005e FB68     	 ldr r3,[r7,#12]
 2037 0060 0133     	 add r3,r3,#1
 2038 0062 FB60     	 str r3,[r7,#12]
 2039              	.L105:
 218:../nRF24L01+.c **** 		NRF24SendData [0] = (W_REGISTER | (RX_PW_P0 + i));
 2040              	 .loc 4 218 0 is_stmt 0 discriminator 1
 2041 0064 FB68     	 ldr r3,[r7,#12]
 2042 0066 052B     	 cmp r3,#5
 2043 0068 D3DD     	 ble .L106
 2044              	.LBE12:
 225:../nRF24L01+.c **** 	}
 226:../nRF24L01+.c **** }
 2045              	 .loc 4 226 0 is_stmt 1
 2046 006a BD46     	 mov sp,r7
 2047 006c 04B0     	 add sp,sp,#16
 2048              	 
 2049 006e 80BD     	 pop {r7,pc}
 2050              	.L108:
 2051              	 .align 2
 2052              	.L107:
 2053 0070 00000000 	 .word NRF24SendData
 2054 0074 00000000 	 .word SPI_MASTER_0
 2055 0078 00000000 	 .word NRF24ReadData
 2056 007c 00000000 	 .word Status_reg
 2057              	 .cfi_endproc
 2058              	.LFE264:
 2060              	 .section .text.setPayloadSize,"ax",%progbits
 2061              	 .align 2
 2062              	 .global setPayloadSize
 2063              	 .code 16
 2064              	 .thumb_func
 2066              	setPayloadSize:
 2067              	.LFB265:
 227:../nRF24L01+.c **** void setPayloadSize(uint8_t size,uint8_t pipeNum){
 2068              	 .loc 4 227 0
 2069              	 .cfi_startproc
 2070 0000 80B5     	 push {r7,lr}
 2071              	.LCFI73:
 2072              	 .cfi_def_cfa_offset 8
 2073              	 .cfi_offset 7,-8
 2074              	 .cfi_offset 14,-4
 2075 0002 82B0     	 sub sp,sp,#8
 2076              	.LCFI74:
 2077              	 .cfi_def_cfa_offset 16
 2078 0004 00AF     	 add r7,sp,#0
 2079              	.LCFI75:
 2080              	 .cfi_def_cfa_register 7
 2081 0006 021C     	 mov r2,r0
 2082 0008 FB1D     	 add r3,r7,#7
 2083 000a 1A70     	 strb r2,[r3]
 2084 000c BB1D     	 add r3,r7,#6
 2085 000e 0A1C     	 add r2,r1,#0
 2086 0010 1A70     	 strb r2,[r3]
 228:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | (RX_PW_P0 + Min(pipeNum,5)));
 2087              	 .loc 4 228 0
 2088 0012 BB1D     	 add r3,r7,#6
 2089 0014 1B78     	 ldrb r3,[r3]
 2090 0016 042B     	 cmp r3,#4
 2091 0018 0AD8     	 bhi .L110
 2092              	 .loc 4 228 0 is_stmt 0 discriminator 1
 2093 001a BB1D     	 add r3,r7,#6
 2094 001c 1B78     	 ldrb r3,[r3]
 2095 001e 1133     	 add r3,r3,#17
 2096 0020 DBB2     	 uxtb r3,r3
 2097 0022 DBB2     	 uxtb r3,r3
 2098 0024 1A1C     	 add r2,r3,#0
 2099 0026 2023     	 mov r3,#32
 2100 0028 1343     	 orr r3,r2
 2101 002a DBB2     	 uxtb r3,r3
 2102 002c DAB2     	 uxtb r2,r3
 2103 002e 00E0     	 b .L111
 2104              	.L110:
 2105              	 .loc 4 228 0 discriminator 2
 2106 0030 3622     	 mov r2,#54
 2107              	.L111:
 2108              	 .loc 4 228 0 discriminator 4
 2109 0032 0F4B     	 ldr r3,.L112
 2110 0034 1A70     	 strb r2,[r3]
 229:../nRF24L01+.c **** 	NRF24SendData [1] = size;
 2111              	 .loc 4 229 0 is_stmt 1 discriminator 4
 2112 0036 0E4B     	 ldr r3,.L112
 2113 0038 FA1D     	 add r2,r7,#7
 2114 003a 1278     	 ldrb r2,[r2]
 2115 003c 5A70     	 strb r2,[r3,#1]
 230:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2116              	 .loc 4 230 0 discriminator 4
 2117 003e 0D4B     	 ldr r3,.L112+4
 2118 0040 181C     	 mov r0,r3
 2119 0042 0021     	 mov r1,#0
 2120 0044 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 231:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2121              	 .loc 4 231 0 discriminator 4
 2122 0048 0A49     	 ldr r1,.L112+4
 2123 004a 094A     	 ldr r2,.L112
 2124 004c 0A4B     	 ldr r3,.L112+8
 2125 004e 081C     	 mov r0,r1
 2126 0050 111C     	 mov r1,r2
 2127 0052 1A1C     	 mov r2,r3
 2128 0054 0223     	 mov r3,#2
 2129 0056 FFF7FEFF 	 bl SPI_MASTER_Transfer
 232:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2130              	 .loc 4 232 0 discriminator 4
 2131 005a 064B     	 ldr r3,.L112+4
 2132 005c 181C     	 mov r0,r3
 2133 005e FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 233:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2134              	 .loc 4 233 0 discriminator 4
 2135 0062 054B     	 ldr r3,.L112+8
 2136 0064 1A78     	 ldrb r2,[r3]
 2137 0066 054B     	 ldr r3,.L112+12
 2138 0068 1A70     	 strb r2,[r3]
 234:../nRF24L01+.c **** }
 2139              	 .loc 4 234 0 discriminator 4
 2140 006a BD46     	 mov sp,r7
 2141 006c 02B0     	 add sp,sp,#8
 2142              	 
 2143 006e 80BD     	 pop {r7,pc}
 2144              	.L113:
 2145              	 .align 2
 2146              	.L112:
 2147 0070 00000000 	 .word NRF24SendData
 2148 0074 00000000 	 .word SPI_MASTER_0
 2149 0078 00000000 	 .word NRF24ReadData
 2150 007c 00000000 	 .word Status_reg
 2151              	 .cfi_endproc
 2152              	.LFE265:
 2154              	 .section .text.setRxPipeAddress,"ax",%progbits
 2155              	 .align 2
 2156              	 .global setRxPipeAddress
 2157              	 .code 16
 2158              	 .thumb_func
 2160              	setRxPipeAddress:
 2161              	.LFB266:
 235:../nRF24L01+.c **** 
 236:../nRF24L01+.c **** void setRxPipeAddress(uint8_t pipe ,char* address, uint8_t size){
 2162              	 .loc 4 236 0
 2163              	 .cfi_startproc
 2164 0000 90B5     	 push {r4,r7,lr}
 2165              	.LCFI76:
 2166              	 .cfi_def_cfa_offset 12
 2167              	 .cfi_offset 4,-12
 2168              	 .cfi_offset 7,-8
 2169              	 .cfi_offset 14,-4
 2170 0002 85B0     	 sub sp,sp,#20
 2171              	.LCFI77:
 2172              	 .cfi_def_cfa_offset 32
 2173 0004 00AF     	 add r7,sp,#0
 2174              	.LCFI78:
 2175              	 .cfi_def_cfa_register 7
 2176 0006 3960     	 str r1,[r7]
 2177 0008 111C     	 mov r1,r2
 2178 000a FB1D     	 add r3,r7,#7
 2179 000c 021C     	 add r2,r0,#0
 2180 000e 1A70     	 strb r2,[r3]
 2181 0010 BB1D     	 add r3,r7,#6
 2182 0012 0A1C     	 add r2,r1,#0
 2183 0014 1A70     	 strb r2,[r3]
 237:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | (RX_ADDR_P0 + Min(pipe,5)));
 2184              	 .loc 4 237 0
 2185 0016 FB1D     	 add r3,r7,#7
 2186 0018 1B78     	 ldrb r3,[r3]
 2187 001a 042B     	 cmp r3,#4
 2188 001c 0AD8     	 bhi .L115
 2189              	 .loc 4 237 0 is_stmt 0 discriminator 1
 2190 001e FB1D     	 add r3,r7,#7
 2191 0020 1B78     	 ldrb r3,[r3]
 2192 0022 0A33     	 add r3,r3,#10
 2193 0024 DBB2     	 uxtb r3,r3
 2194 0026 DBB2     	 uxtb r3,r3
 2195 0028 1A1C     	 add r2,r3,#0
 2196 002a 2023     	 mov r3,#32
 2197 002c 1343     	 orr r3,r2
 2198 002e DBB2     	 uxtb r3,r3
 2199 0030 DAB2     	 uxtb r2,r3
 2200 0032 00E0     	 b .L116
 2201              	.L115:
 2202              	 .loc 4 237 0 discriminator 2
 2203 0034 2F22     	 mov r2,#47
 2204              	.L116:
 2205              	 .loc 4 237 0 discriminator 4
 2206 0036 1F4B     	 ldr r3,.L119
 2207 0038 1A70     	 strb r2,[r3]
 2208              	.LBB13:
 238:../nRF24L01+.c **** 	for(uint8_t i = 0; i < size; i++)
 2209              	 .loc 4 238 0 is_stmt 1 discriminator 4
 2210 003a 0F23     	 mov r3,#15
 2211 003c FB18     	 add r3,r7,r3
 2212 003e 0022     	 mov r2,#0
 2213 0040 1A70     	 strb r2,[r3]
 2214 0042 12E0     	 b .L117
 2215              	.L118:
 239:../nRF24L01+.c **** 		NRF24SendData [1+i] = address[i];
 2216              	 .loc 4 239 0 discriminator 3
 2217 0044 0F23     	 mov r3,#15
 2218 0046 FB18     	 add r3,r7,r3
 2219 0048 1B78     	 ldrb r3,[r3]
 2220 004a 0133     	 add r3,r3,#1
 2221 004c 0F22     	 mov r2,#15
 2222 004e BA18     	 add r2,r7,r2
 2223 0050 1278     	 ldrb r2,[r2]
 2224 0052 3968     	 ldr r1,[r7]
 2225 0054 8A18     	 add r2,r1,r2
 2226 0056 1178     	 ldrb r1,[r2]
 2227 0058 164A     	 ldr r2,.L119
 2228 005a D154     	 strb r1,[r2,r3]
 238:../nRF24L01+.c **** 	for(uint8_t i = 0; i < size; i++)
 2229              	 .loc 4 238 0 discriminator 3
 2230 005c 0F23     	 mov r3,#15
 2231 005e FB18     	 add r3,r7,r3
 2232 0060 1A78     	 ldrb r2,[r3]
 2233 0062 0F23     	 mov r3,#15
 2234 0064 FB18     	 add r3,r7,r3
 2235 0066 0132     	 add r2,r2,#1
 2236 0068 1A70     	 strb r2,[r3]
 2237              	.L117:
 238:../nRF24L01+.c **** 	for(uint8_t i = 0; i < size; i++)
 2238              	 .loc 4 238 0 is_stmt 0 discriminator 1
 2239 006a 0F23     	 mov r3,#15
 2240 006c FA18     	 add r2,r7,r3
 2241 006e BB1D     	 add r3,r7,#6
 2242 0070 1278     	 ldrb r2,[r2]
 2243 0072 1B78     	 ldrb r3,[r3]
 2244 0074 9A42     	 cmp r2,r3
 2245 0076 E5D3     	 bcc .L118
 2246              	.LBE13:
 240:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2247              	 .loc 4 240 0 is_stmt 1
 2248 0078 0F4B     	 ldr r3,.L119+4
 2249 007a 181C     	 mov r0,r3
 2250 007c 0021     	 mov r1,#0
 2251 007e FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 241:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, size + 1);
 2252              	 .loc 4 241 0
 2253 0082 BB1D     	 add r3,r7,#6
 2254 0084 1B78     	 ldrb r3,[r3]
 2255 0086 0133     	 add r3,r3,#1
 2256 0088 1C1C     	 mov r4,r3
 2257 008a 0B49     	 ldr r1,.L119+4
 2258 008c 094A     	 ldr r2,.L119
 2259 008e 0B4B     	 ldr r3,.L119+8
 2260 0090 081C     	 mov r0,r1
 2261 0092 111C     	 mov r1,r2
 2262 0094 1A1C     	 mov r2,r3
 2263 0096 231C     	 mov r3,r4
 2264 0098 FFF7FEFF 	 bl SPI_MASTER_Transfer
 242:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2265              	 .loc 4 242 0
 2266 009c 064B     	 ldr r3,.L119+4
 2267 009e 181C     	 mov r0,r3
 2268 00a0 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 243:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2269              	 .loc 4 243 0
 2270 00a4 054B     	 ldr r3,.L119+8
 2271 00a6 1A78     	 ldrb r2,[r3]
 2272 00a8 054B     	 ldr r3,.L119+12
 2273 00aa 1A70     	 strb r2,[r3]
 244:../nRF24L01+.c **** }
 2274              	 .loc 4 244 0
 2275 00ac BD46     	 mov sp,r7
 2276 00ae 05B0     	 add sp,sp,#20
 2277              	 
 2278 00b0 90BD     	 pop {r4,r7,pc}
 2279              	.L120:
 2280 00b2 C046     	 .align 2
 2281              	.L119:
 2282 00b4 00000000 	 .word NRF24SendData
 2283 00b8 00000000 	 .word SPI_MASTER_0
 2284 00bc 00000000 	 .word NRF24ReadData
 2285 00c0 00000000 	 .word Status_reg
 2286              	 .cfi_endproc
 2287              	.LFE266:
 2289              	 .section .text.setTxPipeAddress,"ax",%progbits
 2290              	 .align 2
 2291              	 .global setTxPipeAddress
 2292              	 .code 16
 2293              	 .thumb_func
 2295              	setTxPipeAddress:
 2296              	.LFB267:
 245:../nRF24L01+.c **** void setTxPipeAddress(char* address, uint8_t size){
 2297              	 .loc 4 245 0
 2298              	 .cfi_startproc
 2299 0000 90B5     	 push {r4,r7,lr}
 2300              	.LCFI79:
 2301              	 .cfi_def_cfa_offset 12
 2302              	 .cfi_offset 4,-12
 2303              	 .cfi_offset 7,-8
 2304              	 .cfi_offset 14,-4
 2305 0002 85B0     	 sub sp,sp,#20
 2306              	.LCFI80:
 2307              	 .cfi_def_cfa_offset 32
 2308 0004 00AF     	 add r7,sp,#0
 2309              	.LCFI81:
 2310              	 .cfi_def_cfa_register 7
 2311 0006 7860     	 str r0,[r7,#4]
 2312 0008 0A1C     	 mov r2,r1
 2313 000a FB1C     	 add r3,r7,#3
 2314 000c 1A70     	 strb r2,[r3]
 246:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | TXADDR);
 2315              	 .loc 4 246 0
 2316 000e 1F4B     	 ldr r3,.L124
 2317 0010 3022     	 mov r2,#48
 2318 0012 1A70     	 strb r2,[r3]
 2319              	.LBB14:
 247:../nRF24L01+.c **** 	for(uint8_t i = 0; i < size; i++)
 2320              	 .loc 4 247 0
 2321 0014 0F23     	 mov r3,#15
 2322 0016 FB18     	 add r3,r7,r3
 2323 0018 0022     	 mov r2,#0
 2324 001a 1A70     	 strb r2,[r3]
 2325 001c 12E0     	 b .L122
 2326              	.L123:
 248:../nRF24L01+.c **** 		NRF24SendData [1+i] = address[i];
 2327              	 .loc 4 248 0 discriminator 3
 2328 001e 0F23     	 mov r3,#15
 2329 0020 FB18     	 add r3,r7,r3
 2330 0022 1B78     	 ldrb r3,[r3]
 2331 0024 0133     	 add r3,r3,#1
 2332 0026 0F22     	 mov r2,#15
 2333 0028 BA18     	 add r2,r7,r2
 2334 002a 1278     	 ldrb r2,[r2]
 2335 002c 7968     	 ldr r1,[r7,#4]
 2336 002e 8A18     	 add r2,r1,r2
 2337 0030 1178     	 ldrb r1,[r2]
 2338 0032 164A     	 ldr r2,.L124
 2339 0034 D154     	 strb r1,[r2,r3]
 247:../nRF24L01+.c **** 	for(uint8_t i = 0; i < size; i++)
 2340              	 .loc 4 247 0 discriminator 3
 2341 0036 0F23     	 mov r3,#15
 2342 0038 FB18     	 add r3,r7,r3
 2343 003a 1A78     	 ldrb r2,[r3]
 2344 003c 0F23     	 mov r3,#15
 2345 003e FB18     	 add r3,r7,r3
 2346 0040 0132     	 add r2,r2,#1
 2347 0042 1A70     	 strb r2,[r3]
 2348              	.L122:
 247:../nRF24L01+.c **** 	for(uint8_t i = 0; i < size; i++)
 2349              	 .loc 4 247 0 is_stmt 0 discriminator 1
 2350 0044 0F23     	 mov r3,#15
 2351 0046 FA18     	 add r2,r7,r3
 2352 0048 FB1C     	 add r3,r7,#3
 2353 004a 1278     	 ldrb r2,[r2]
 2354 004c 1B78     	 ldrb r3,[r3]
 2355 004e 9A42     	 cmp r2,r3
 2356 0050 E5D3     	 bcc .L123
 2357              	.LBE14:
 249:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2358              	 .loc 4 249 0 is_stmt 1
 2359 0052 0F4B     	 ldr r3,.L124+4
 2360 0054 181C     	 mov r0,r3
 2361 0056 0021     	 mov r1,#0
 2362 0058 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 250:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, size + 1);
 2363              	 .loc 4 250 0
 2364 005c FB1C     	 add r3,r7,#3
 2365 005e 1B78     	 ldrb r3,[r3]
 2366 0060 0133     	 add r3,r3,#1
 2367 0062 1C1C     	 mov r4,r3
 2368 0064 0A49     	 ldr r1,.L124+4
 2369 0066 094A     	 ldr r2,.L124
 2370 0068 0A4B     	 ldr r3,.L124+8
 2371 006a 081C     	 mov r0,r1
 2372 006c 111C     	 mov r1,r2
 2373 006e 1A1C     	 mov r2,r3
 2374 0070 231C     	 mov r3,r4
 2375 0072 FFF7FEFF 	 bl SPI_MASTER_Transfer
 251:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2376              	 .loc 4 251 0
 2377 0076 064B     	 ldr r3,.L124+4
 2378 0078 181C     	 mov r0,r3
 2379 007a FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 252:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2380              	 .loc 4 252 0
 2381 007e 054B     	 ldr r3,.L124+8
 2382 0080 1A78     	 ldrb r2,[r3]
 2383 0082 054B     	 ldr r3,.L124+12
 2384 0084 1A70     	 strb r2,[r3]
 253:../nRF24L01+.c **** }
 2385              	 .loc 4 253 0
 2386 0086 BD46     	 mov sp,r7
 2387 0088 05B0     	 add sp,sp,#20
 2388              	 
 2389 008a 90BD     	 pop {r4,r7,pc}
 2390              	.L125:
 2391              	 .align 2
 2392              	.L124:
 2393 008c 00000000 	 .word NRF24SendData
 2394 0090 00000000 	 .word SPI_MASTER_0
 2395 0094 00000000 	 .word NRF24ReadData
 2396 0098 00000000 	 .word Status_reg
 2397              	 .cfi_endproc
 2398              	.LFE267:
 2400              	 .section .text.resetStatus,"ax",%progbits
 2401              	 .align 2
 2402              	 .global resetStatus
 2403              	 .code 16
 2404              	 .thumb_func
 2406              	resetStatus:
 2407              	.LFB268:
 254:../nRF24L01+.c **** 
 255:../nRF24L01+.c **** void resetStatus(){
 2408              	 .loc 4 255 0
 2409              	 .cfi_startproc
 2410 0000 80B5     	 push {r7,lr}
 2411              	.LCFI82:
 2412              	 .cfi_def_cfa_offset 8
 2413              	 .cfi_offset 7,-8
 2414              	 .cfi_offset 14,-4
 2415 0002 00AF     	 add r7,sp,#0
 2416              	.LCFI83:
 2417              	 .cfi_def_cfa_register 7
 256:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | NRF_STATUS);
 2418              	 .loc 4 256 0
 2419 0004 0E4B     	 ldr r3,.L127
 2420 0006 2722     	 mov r2,#39
 2421 0008 1A70     	 strb r2,[r3]
 257:../nRF24L01+.c **** 	NRF24SendData [1] = 0b01111110;
 2422              	 .loc 4 257 0
 2423 000a 0D4B     	 ldr r3,.L127
 2424 000c 7E22     	 mov r2,#126
 2425 000e 5A70     	 strb r2,[r3,#1]
 258:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2426              	 .loc 4 258 0
 2427 0010 0C4B     	 ldr r3,.L127+4
 2428 0012 181C     	 mov r0,r3
 2429 0014 0021     	 mov r1,#0
 2430 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 259:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2431              	 .loc 4 259 0
 2432 001a 0A49     	 ldr r1,.L127+4
 2433 001c 084A     	 ldr r2,.L127
 2434 001e 0A4B     	 ldr r3,.L127+8
 2435 0020 081C     	 mov r0,r1
 2436 0022 111C     	 mov r1,r2
 2437 0024 1A1C     	 mov r2,r3
 2438 0026 0223     	 mov r3,#2
 2439 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 260:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2440              	 .loc 4 260 0
 2441 002c 054B     	 ldr r3,.L127+4
 2442 002e 181C     	 mov r0,r3
 2443 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 261:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2444              	 .loc 4 261 0
 2445 0034 044B     	 ldr r3,.L127+8
 2446 0036 1A78     	 ldrb r2,[r3]
 2447 0038 044B     	 ldr r3,.L127+12
 2448 003a 1A70     	 strb r2,[r3]
 262:../nRF24L01+.c **** }
 2449              	 .loc 4 262 0
 2450 003c BD46     	 mov sp,r7
 2451              	 
 2452 003e 80BD     	 pop {r7,pc}
 2453              	.L128:
 2454              	 .align 2
 2455              	.L127:
 2456 0040 00000000 	 .word NRF24SendData
 2457 0044 00000000 	 .word SPI_MASTER_0
 2458 0048 00000000 	 .word NRF24ReadData
 2459 004c 00000000 	 .word Status_reg
 2460              	 .cfi_endproc
 2461              	.LFE268:
 2463              	 .section .text.Is_TX_FIFO_full,"ax",%progbits
 2464              	 .align 2
 2465              	 .global Is_TX_FIFO_full
 2466              	 .code 16
 2467              	 .thumb_func
 2469              	Is_TX_FIFO_full:
 2470              	.LFB269:
 263:../nRF24L01+.c **** bool Is_TX_FIFO_full(void){
 2471              	 .loc 4 263 0
 2472              	 .cfi_startproc
 2473 0000 80B5     	 push {r7,lr}
 2474              	.LCFI84:
 2475              	 .cfi_def_cfa_offset 8
 2476              	 .cfi_offset 7,-8
 2477              	 .cfi_offset 14,-4
 2478 0002 00AF     	 add r7,sp,#0
 2479              	.LCFI85:
 2480              	 .cfi_def_cfa_register 7
 264:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | NRF_STATUS);
 2481              	 .loc 4 264 0
 2482 0004 134B     	 ldr r3,.L131
 2483 0006 0722     	 mov r2,#7
 2484 0008 1A70     	 strb r2,[r3]
 265:../nRF24L01+.c **** 	NRF24SendData [1] = RF24_NOP;
 2485              	 .loc 4 265 0
 2486 000a 124B     	 ldr r3,.L131
 2487 000c FF22     	 mov r2,#255
 2488 000e 5A70     	 strb r2,[r3,#1]
 266:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2489              	 .loc 4 266 0
 2490 0010 114B     	 ldr r3,.L131+4
 2491 0012 181C     	 mov r0,r3
 2492 0014 0021     	 mov r1,#0
 2493 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 267:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2494              	 .loc 4 267 0
 2495 001a 0F49     	 ldr r1,.L131+4
 2496 001c 0D4A     	 ldr r2,.L131
 2497 001e 0F4B     	 ldr r3,.L131+8
 2498 0020 081C     	 mov r0,r1
 2499 0022 111C     	 mov r1,r2
 2500 0024 1A1C     	 mov r2,r3
 2501 0026 0223     	 mov r3,#2
 2502 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 268:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2503              	 .loc 4 268 0
 2504 002c 0A4B     	 ldr r3,.L131+4
 2505 002e 181C     	 mov r0,r3
 2506 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 269:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2507              	 .loc 4 269 0
 2508 0034 094B     	 ldr r3,.L131+8
 2509 0036 1A78     	 ldrb r2,[r3]
 2510 0038 094B     	 ldr r3,.L131+12
 2511 003a 1A70     	 strb r2,[r3]
 270:../nRF24L01+.c **** 	return NRF24ReadData[1] & 1;
 2512              	 .loc 4 270 0
 2513 003c 074B     	 ldr r3,.L131+8
 2514 003e 5B78     	 ldrb r3,[r3,#1]
 2515 0040 1A1C     	 mov r2,r3
 2516 0042 0123     	 mov r3,#1
 2517 0044 1340     	 and r3,r2
 2518 0046 5A1E     	 sub r2,r3,#1
 2519 0048 9341     	 sbc r3,r3,r2
 2520 004a DBB2     	 uxtb r3,r3
 271:../nRF24L01+.c **** }
 2521              	 .loc 4 271 0
 2522 004c 181C     	 mov r0,r3
 2523 004e BD46     	 mov sp,r7
 2524              	 
 2525 0050 80BD     	 pop {r7,pc}
 2526              	.L132:
 2527 0052 C046     	 .align 2
 2528              	.L131:
 2529 0054 00000000 	 .word NRF24SendData
 2530 0058 00000000 	 .word SPI_MASTER_0
 2531 005c 00000000 	 .word NRF24ReadData
 2532 0060 00000000 	 .word Status_reg
 2533              	 .cfi_endproc
 2534              	.LFE269:
 2536              	 .section .text.RX_Data_PipeNum_Payload_Available,"ax",%progbits
 2537              	 .align 2
 2538              	 .global RX_Data_PipeNum_Payload_Available
 2539              	 .code 16
 2540              	 .thumb_func
 2542              	RX_Data_PipeNum_Payload_Available:
 2543              	.LFB270:
 272:../nRF24L01+.c **** uint8_t RX_Data_PipeNum_Payload_Available(void){
 2544              	 .loc 4 272 0
 2545              	 .cfi_startproc
 2546 0000 80B5     	 push {r7,lr}
 2547              	.LCFI86:
 2548              	 .cfi_def_cfa_offset 8
 2549              	 .cfi_offset 7,-8
 2550              	 .cfi_offset 14,-4
 2551 0002 00AF     	 add r7,sp,#0
 2552              	.LCFI87:
 2553              	 .cfi_def_cfa_register 7
 273:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | NRF_STATUS);
 2554              	 .loc 4 273 0
 2555 0004 124B     	 ldr r3,.L135
 2556 0006 0722     	 mov r2,#7
 2557 0008 1A70     	 strb r2,[r3]
 274:../nRF24L01+.c **** 	NRF24SendData [1] = RF24_NOP;
 2558              	 .loc 4 274 0
 2559 000a 114B     	 ldr r3,.L135
 2560 000c FF22     	 mov r2,#255
 2561 000e 5A70     	 strb r2,[r3,#1]
 275:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2562              	 .loc 4 275 0
 2563 0010 104B     	 ldr r3,.L135+4
 2564 0012 181C     	 mov r0,r3
 2565 0014 0021     	 mov r1,#0
 2566 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 276:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2567              	 .loc 4 276 0
 2568 001a 0E49     	 ldr r1,.L135+4
 2569 001c 0C4A     	 ldr r2,.L135
 2570 001e 0E4B     	 ldr r3,.L135+8
 2571 0020 081C     	 mov r0,r1
 2572 0022 111C     	 mov r1,r2
 2573 0024 1A1C     	 mov r2,r3
 2574 0026 0223     	 mov r3,#2
 2575 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 277:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2576              	 .loc 4 277 0
 2577 002c 094B     	 ldr r3,.L135+4
 2578 002e 181C     	 mov r0,r3
 2579 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 278:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2580              	 .loc 4 278 0
 2581 0034 084B     	 ldr r3,.L135+8
 2582 0036 1A78     	 ldrb r2,[r3]
 2583 0038 084B     	 ldr r3,.L135+12
 2584 003a 1A70     	 strb r2,[r3]
 279:../nRF24L01+.c **** 	return _DSn(NRF24ReadData[1],1) & 7;
 2585              	 .loc 4 279 0
 2586 003c 064B     	 ldr r3,.L135+8
 2587 003e 5B78     	 ldrb r3,[r3,#1]
 2588 0040 5B08     	 lsr r3,r3,#1
 2589 0042 DBB2     	 uxtb r3,r3
 2590 0044 0722     	 mov r2,#7
 2591 0046 1340     	 and r3,r2
 2592 0048 DBB2     	 uxtb r3,r3
 280:../nRF24L01+.c **** }
 2593              	 .loc 4 280 0
 2594 004a 181C     	 mov r0,r3
 2595 004c BD46     	 mov sp,r7
 2596              	 
 2597 004e 80BD     	 pop {r7,pc}
 2598              	.L136:
 2599              	 .align 2
 2600              	.L135:
 2601 0050 00000000 	 .word NRF24SendData
 2602 0054 00000000 	 .word SPI_MASTER_0
 2603 0058 00000000 	 .word NRF24ReadData
 2604 005c 00000000 	 .word Status_reg
 2605              	 .cfi_endproc
 2606              	.LFE270:
 2608              	 .section .text.Is_RX_DR,"ax",%progbits
 2609              	 .align 2
 2610              	 .global Is_RX_DR
 2611              	 .code 16
 2612              	 .thumb_func
 2614              	Is_RX_DR:
 2615              	.LFB271:
 281:../nRF24L01+.c **** bool Is_RX_DR(void){
 2616              	 .loc 4 281 0
 2617              	 .cfi_startproc
 2618 0000 80B5     	 push {r7,lr}
 2619              	.LCFI88:
 2620              	 .cfi_def_cfa_offset 8
 2621              	 .cfi_offset 7,-8
 2622              	 .cfi_offset 14,-4
 2623 0002 00AF     	 add r7,sp,#0
 2624              	.LCFI89:
 2625              	 .cfi_def_cfa_register 7
 282:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | NRF_STATUS);
 2626              	 .loc 4 282 0
 2627 0004 144B     	 ldr r3,.L139
 2628 0006 0722     	 mov r2,#7
 2629 0008 1A70     	 strb r2,[r3]
 283:../nRF24L01+.c **** 	NRF24SendData [1] = RF24_NOP;
 2630              	 .loc 4 283 0
 2631 000a 134B     	 ldr r3,.L139
 2632 000c FF22     	 mov r2,#255
 2633 000e 5A70     	 strb r2,[r3,#1]
 284:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2634              	 .loc 4 284 0
 2635 0010 124B     	 ldr r3,.L139+4
 2636 0012 181C     	 mov r0,r3
 2637 0014 0021     	 mov r1,#0
 2638 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 285:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2639              	 .loc 4 285 0
 2640 001a 1049     	 ldr r1,.L139+4
 2641 001c 0E4A     	 ldr r2,.L139
 2642 001e 104B     	 ldr r3,.L139+8
 2643 0020 081C     	 mov r0,r1
 2644 0022 111C     	 mov r1,r2
 2645 0024 1A1C     	 mov r2,r3
 2646 0026 0223     	 mov r3,#2
 2647 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 286:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2648              	 .loc 4 286 0
 2649 002c 0B4B     	 ldr r3,.L139+4
 2650 002e 181C     	 mov r0,r3
 2651 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 287:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2652              	 .loc 4 287 0
 2653 0034 0A4B     	 ldr r3,.L139+8
 2654 0036 1A78     	 ldrb r2,[r3]
 2655 0038 0A4B     	 ldr r3,.L139+12
 2656 003a 1A70     	 strb r2,[r3]
 288:../nRF24L01+.c **** 	return _DSn(NRF24ReadData[1],6) & 1;
 2657              	 .loc 4 288 0
 2658 003c 084B     	 ldr r3,.L139+8
 2659 003e 5B78     	 ldrb r3,[r3,#1]
 2660 0040 9B09     	 lsr r3,r3,#6
 2661 0042 DBB2     	 uxtb r3,r3
 2662 0044 1A1C     	 mov r2,r3
 2663 0046 0123     	 mov r3,#1
 2664 0048 1340     	 and r3,r2
 2665 004a 5A1E     	 sub r2,r3,#1
 2666 004c 9341     	 sbc r3,r3,r2
 2667 004e DBB2     	 uxtb r3,r3
 289:../nRF24L01+.c **** }
 2668              	 .loc 4 289 0
 2669 0050 181C     	 mov r0,r3
 2670 0052 BD46     	 mov sp,r7
 2671              	 
 2672 0054 80BD     	 pop {r7,pc}
 2673              	.L140:
 2674 0056 C046     	 .align 2
 2675              	.L139:
 2676 0058 00000000 	 .word NRF24SendData
 2677 005c 00000000 	 .word SPI_MASTER_0
 2678 0060 00000000 	 .word NRF24ReadData
 2679 0064 00000000 	 .word Status_reg
 2680              	 .cfi_endproc
 2681              	.LFE271:
 2683              	 .section .text.Is_TX_DS,"ax",%progbits
 2684              	 .align 2
 2685              	 .global Is_TX_DS
 2686              	 .code 16
 2687              	 .thumb_func
 2689              	Is_TX_DS:
 2690              	.LFB272:
 290:../nRF24L01+.c **** bool Is_TX_DS(void){
 2691              	 .loc 4 290 0
 2692              	 .cfi_startproc
 2693 0000 80B5     	 push {r7,lr}
 2694              	.LCFI90:
 2695              	 .cfi_def_cfa_offset 8
 2696              	 .cfi_offset 7,-8
 2697              	 .cfi_offset 14,-4
 2698 0002 00AF     	 add r7,sp,#0
 2699              	.LCFI91:
 2700              	 .cfi_def_cfa_register 7
 291:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | NRF_STATUS);
 2701              	 .loc 4 291 0
 2702 0004 144B     	 ldr r3,.L143
 2703 0006 0722     	 mov r2,#7
 2704 0008 1A70     	 strb r2,[r3]
 292:../nRF24L01+.c **** 	NRF24SendData [1] = RF24_NOP;
 2705              	 .loc 4 292 0
 2706 000a 134B     	 ldr r3,.L143
 2707 000c FF22     	 mov r2,#255
 2708 000e 5A70     	 strb r2,[r3,#1]
 293:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2709              	 .loc 4 293 0
 2710 0010 124B     	 ldr r3,.L143+4
 2711 0012 181C     	 mov r0,r3
 2712 0014 0021     	 mov r1,#0
 2713 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 294:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2714              	 .loc 4 294 0
 2715 001a 1049     	 ldr r1,.L143+4
 2716 001c 0E4A     	 ldr r2,.L143
 2717 001e 104B     	 ldr r3,.L143+8
 2718 0020 081C     	 mov r0,r1
 2719 0022 111C     	 mov r1,r2
 2720 0024 1A1C     	 mov r2,r3
 2721 0026 0223     	 mov r3,#2
 2722 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 295:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2723              	 .loc 4 295 0
 2724 002c 0B4B     	 ldr r3,.L143+4
 2725 002e 181C     	 mov r0,r3
 2726 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 296:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2727              	 .loc 4 296 0
 2728 0034 0A4B     	 ldr r3,.L143+8
 2729 0036 1A78     	 ldrb r2,[r3]
 2730 0038 0A4B     	 ldr r3,.L143+12
 2731 003a 1A70     	 strb r2,[r3]
 297:../nRF24L01+.c **** 	return _DSn(NRF24ReadData[1],5) & 1;
 2732              	 .loc 4 297 0
 2733 003c 084B     	 ldr r3,.L143+8
 2734 003e 5B78     	 ldrb r3,[r3,#1]
 2735 0040 5B09     	 lsr r3,r3,#5
 2736 0042 DBB2     	 uxtb r3,r3
 2737 0044 1A1C     	 mov r2,r3
 2738 0046 0123     	 mov r3,#1
 2739 0048 1340     	 and r3,r2
 2740 004a 5A1E     	 sub r2,r3,#1
 2741 004c 9341     	 sbc r3,r3,r2
 2742 004e DBB2     	 uxtb r3,r3
 298:../nRF24L01+.c **** }
 2743              	 .loc 4 298 0
 2744 0050 181C     	 mov r0,r3
 2745 0052 BD46     	 mov sp,r7
 2746              	 
 2747 0054 80BD     	 pop {r7,pc}
 2748              	.L144:
 2749 0056 C046     	 .align 2
 2750              	.L143:
 2751 0058 00000000 	 .word NRF24SendData
 2752 005c 00000000 	 .word SPI_MASTER_0
 2753 0060 00000000 	 .word NRF24ReadData
 2754 0064 00000000 	 .word Status_reg
 2755              	 .cfi_endproc
 2756              	.LFE272:
 2758              	 .section .text.Is_MAX_RT,"ax",%progbits
 2759              	 .align 2
 2760              	 .global Is_MAX_RT
 2761              	 .code 16
 2762              	 .thumb_func
 2764              	Is_MAX_RT:
 2765              	.LFB273:
 299:../nRF24L01+.c **** bool Is_MAX_RT(void){
 2766              	 .loc 4 299 0
 2767              	 .cfi_startproc
 2768 0000 80B5     	 push {r7,lr}
 2769              	.LCFI92:
 2770              	 .cfi_def_cfa_offset 8
 2771              	 .cfi_offset 7,-8
 2772              	 .cfi_offset 14,-4
 2773 0002 00AF     	 add r7,sp,#0
 2774              	.LCFI93:
 2775              	 .cfi_def_cfa_register 7
 300:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | NRF_STATUS);
 2776              	 .loc 4 300 0
 2777 0004 144B     	 ldr r3,.L147
 2778 0006 0722     	 mov r2,#7
 2779 0008 1A70     	 strb r2,[r3]
 301:../nRF24L01+.c **** 	NRF24SendData [1] = RF24_NOP;
 2780              	 .loc 4 301 0
 2781 000a 134B     	 ldr r3,.L147
 2782 000c FF22     	 mov r2,#255
 2783 000e 5A70     	 strb r2,[r3,#1]
 302:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2784              	 .loc 4 302 0
 2785 0010 124B     	 ldr r3,.L147+4
 2786 0012 181C     	 mov r0,r3
 2787 0014 0021     	 mov r1,#0
 2788 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 303:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2789              	 .loc 4 303 0
 2790 001a 1049     	 ldr r1,.L147+4
 2791 001c 0E4A     	 ldr r2,.L147
 2792 001e 104B     	 ldr r3,.L147+8
 2793 0020 081C     	 mov r0,r1
 2794 0022 111C     	 mov r1,r2
 2795 0024 1A1C     	 mov r2,r3
 2796 0026 0223     	 mov r3,#2
 2797 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 304:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2798              	 .loc 4 304 0
 2799 002c 0B4B     	 ldr r3,.L147+4
 2800 002e 181C     	 mov r0,r3
 2801 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 305:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2802              	 .loc 4 305 0
 2803 0034 0A4B     	 ldr r3,.L147+8
 2804 0036 1A78     	 ldrb r2,[r3]
 2805 0038 0A4B     	 ldr r3,.L147+12
 2806 003a 1A70     	 strb r2,[r3]
 306:../nRF24L01+.c **** 	return _DSn(NRF24ReadData[1],4) & 1;
 2807              	 .loc 4 306 0
 2808 003c 084B     	 ldr r3,.L147+8
 2809 003e 5B78     	 ldrb r3,[r3,#1]
 2810 0040 1B09     	 lsr r3,r3,#4
 2811 0042 DBB2     	 uxtb r3,r3
 2812 0044 1A1C     	 mov r2,r3
 2813 0046 0123     	 mov r3,#1
 2814 0048 1340     	 and r3,r2
 2815 004a 5A1E     	 sub r2,r3,#1
 2816 004c 9341     	 sbc r3,r3,r2
 2817 004e DBB2     	 uxtb r3,r3
 307:../nRF24L01+.c **** }
 2818              	 .loc 4 307 0
 2819 0050 181C     	 mov r0,r3
 2820 0052 BD46     	 mov sp,r7
 2821              	 
 2822 0054 80BD     	 pop {r7,pc}
 2823              	.L148:
 2824 0056 C046     	 .align 2
 2825              	.L147:
 2826 0058 00000000 	 .word NRF24SendData
 2827 005c 00000000 	 .word SPI_MASTER_0
 2828 0060 00000000 	 .word NRF24ReadData
 2829 0064 00000000 	 .word Status_reg
 2830              	 .cfi_endproc
 2831              	.LFE273:
 2833              	 .section .text.flushTX,"ax",%progbits
 2834              	 .align 2
 2835              	 .global flushTX
 2836              	 .code 16
 2837              	 .thumb_func
 2839              	flushTX:
 2840              	.LFB274:
 308:../nRF24L01+.c **** 
 309:../nRF24L01+.c **** void flushTX(){
 2841              	 .loc 4 309 0
 2842              	 .cfi_startproc
 2843 0000 80B5     	 push {r7,lr}
 2844              	.LCFI94:
 2845              	 .cfi_def_cfa_offset 8
 2846              	 .cfi_offset 7,-8
 2847              	 .cfi_offset 14,-4
 2848 0002 00AF     	 add r7,sp,#0
 2849              	.LCFI95:
 2850              	 .cfi_def_cfa_register 7
 310:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | FLUSH_TX);
 2851              	 .loc 4 310 0
 2852 0004 0E4B     	 ldr r3,.L150
 2853 0006 E122     	 mov r2,#225
 2854 0008 1A70     	 strb r2,[r3]
 311:../nRF24L01+.c **** 	NRF24SendData [1] = RF24_NOP;
 2855              	 .loc 4 311 0
 2856 000a 0D4B     	 ldr r3,.L150
 2857 000c FF22     	 mov r2,#255
 2858 000e 5A70     	 strb r2,[r3,#1]
 312:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2859              	 .loc 4 312 0
 2860 0010 0C4B     	 ldr r3,.L150+4
 2861 0012 181C     	 mov r0,r3
 2862 0014 0021     	 mov r1,#0
 2863 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 313:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2864              	 .loc 4 313 0
 2865 001a 0A49     	 ldr r1,.L150+4
 2866 001c 084A     	 ldr r2,.L150
 2867 001e 0A4B     	 ldr r3,.L150+8
 2868 0020 081C     	 mov r0,r1
 2869 0022 111C     	 mov r1,r2
 2870 0024 1A1C     	 mov r2,r3
 2871 0026 0223     	 mov r3,#2
 2872 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 314:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2873              	 .loc 4 314 0
 2874 002c 054B     	 ldr r3,.L150+4
 2875 002e 181C     	 mov r0,r3
 2876 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 315:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2877              	 .loc 4 315 0
 2878 0034 044B     	 ldr r3,.L150+8
 2879 0036 1A78     	 ldrb r2,[r3]
 2880 0038 044B     	 ldr r3,.L150+12
 2881 003a 1A70     	 strb r2,[r3]
 316:../nRF24L01+.c **** }
 2882              	 .loc 4 316 0
 2883 003c BD46     	 mov sp,r7
 2884              	 
 2885 003e 80BD     	 pop {r7,pc}
 2886              	.L151:
 2887              	 .align 2
 2888              	.L150:
 2889 0040 00000000 	 .word NRF24SendData
 2890 0044 00000000 	 .word SPI_MASTER_0
 2891 0048 00000000 	 .word NRF24ReadData
 2892 004c 00000000 	 .word Status_reg
 2893              	 .cfi_endproc
 2894              	.LFE274:
 2896              	 .section .text.flushRX,"ax",%progbits
 2897              	 .align 2
 2898              	 .global flushRX
 2899              	 .code 16
 2900              	 .thumb_func
 2902              	flushRX:
 2903              	.LFB275:
 317:../nRF24L01+.c **** void flushRX(){
 2904              	 .loc 4 317 0
 2905              	 .cfi_startproc
 2906 0000 80B5     	 push {r7,lr}
 2907              	.LCFI96:
 2908              	 .cfi_def_cfa_offset 8
 2909              	 .cfi_offset 7,-8
 2910              	 .cfi_offset 14,-4
 2911 0002 00AF     	 add r7,sp,#0
 2912              	.LCFI97:
 2913              	 .cfi_def_cfa_register 7
 318:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | FLUSH_RX);
 2914              	 .loc 4 318 0
 2915 0004 0E4B     	 ldr r3,.L153
 2916 0006 E222     	 mov r2,#226
 2917 0008 1A70     	 strb r2,[r3]
 319:../nRF24L01+.c **** 	NRF24SendData [1] = RF24_NOP;
 2918              	 .loc 4 319 0
 2919 000a 0D4B     	 ldr r3,.L153
 2920 000c FF22     	 mov r2,#255
 2921 000e 5A70     	 strb r2,[r3,#1]
 320:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2922              	 .loc 4 320 0
 2923 0010 0C4B     	 ldr r3,.L153+4
 2924 0012 181C     	 mov r0,r3
 2925 0014 0021     	 mov r1,#0
 2926 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 321:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2927              	 .loc 4 321 0
 2928 001a 0A49     	 ldr r1,.L153+4
 2929 001c 084A     	 ldr r2,.L153
 2930 001e 0A4B     	 ldr r3,.L153+8
 2931 0020 081C     	 mov r0,r1
 2932 0022 111C     	 mov r1,r2
 2933 0024 1A1C     	 mov r2,r3
 2934 0026 0223     	 mov r3,#2
 2935 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 322:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 2936              	 .loc 4 322 0
 2937 002c 054B     	 ldr r3,.L153+4
 2938 002e 181C     	 mov r0,r3
 2939 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 323:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 2940              	 .loc 4 323 0
 2941 0034 044B     	 ldr r3,.L153+8
 2942 0036 1A78     	 ldrb r2,[r3]
 2943 0038 044B     	 ldr r3,.L153+12
 2944 003a 1A70     	 strb r2,[r3]
 324:../nRF24L01+.c **** }
 2945              	 .loc 4 324 0
 2946 003c BD46     	 mov sp,r7
 2947              	 
 2948 003e 80BD     	 pop {r7,pc}
 2949              	.L154:
 2950              	 .align 2
 2951              	.L153:
 2952 0040 00000000 	 .word NRF24SendData
 2953 0044 00000000 	 .word SPI_MASTER_0
 2954 0048 00000000 	 .word NRF24ReadData
 2955 004c 00000000 	 .word Status_reg
 2956              	 .cfi_endproc
 2957              	.LFE275:
 2959              	 .section .text.PowerUP,"ax",%progbits
 2960              	 .align 2
 2961              	 .global PowerUP
 2962              	 .code 16
 2963              	 .thumb_func
 2965              	PowerUP:
 2966              	.LFB276:
 325:../nRF24L01+.c **** 
 326:../nRF24L01+.c **** void PowerUP(void){
 2967              	 .loc 4 326 0
 2968              	 .cfi_startproc
 2969 0000 80B5     	 push {r7,lr}
 2970              	.LCFI98:
 2971              	 .cfi_def_cfa_offset 8
 2972              	 .cfi_offset 7,-8
 2973              	 .cfi_offset 14,-4
 2974 0002 82B0     	 sub sp,sp,#8
 2975              	.LCFI99:
 2976              	 .cfi_def_cfa_offset 16
 2977 0004 00AF     	 add r7,sp,#0
 2978              	.LCFI100:
 2979              	 .cfi_def_cfa_register 7
 327:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | NRF_CONFIG);
 2980              	 .loc 4 327 0
 2981 0006 144B     	 ldr r3,.L158
 2982 0008 2022     	 mov r2,#32
 2983 000a 1A70     	 strb r2,[r3]
 328:../nRF24L01+.c **** 	NRF24SendData [1] = _BV(MASK_RX_DR) | _BV(MASK_TX_DS) | _BV(MASK_MAX_RT) | _BV(EN_CRC) | _BV(CRCO)
 2984              	 .loc 4 328 0
 2985 000c 124B     	 ldr r3,.L158
 2986 000e FE22     	 mov r2,#254
 2987 0010 5A70     	 strb r2,[r3,#1]
 329:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 2988              	 .loc 4 329 0
 2989 0012 124B     	 ldr r3,.L158+4
 2990 0014 181C     	 mov r0,r3
 2991 0016 0021     	 mov r1,#0
 2992 0018 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 330:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 2993              	 .loc 4 330 0
 2994 001c 0F49     	 ldr r1,.L158+4
 2995 001e 0E4A     	 ldr r2,.L158
 2996 0020 0F4B     	 ldr r3,.L158+8
 2997 0022 081C     	 mov r0,r1
 2998 0024 111C     	 mov r1,r2
 2999 0026 1A1C     	 mov r2,r3
 3000 0028 0223     	 mov r3,#2
 3001 002a FFF7FEFF 	 bl SPI_MASTER_Transfer
 331:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 3002              	 .loc 4 331 0
 3003 002e 0B4B     	 ldr r3,.L158+4
 3004 0030 181C     	 mov r0,r3
 3005 0032 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 332:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 3006              	 .loc 4 332 0
 3007 0036 0A4B     	 ldr r3,.L158+8
 3008 0038 1A78     	 ldrb r2,[r3]
 3009 003a 0A4B     	 ldr r3,.L158+12
 3010 003c 1A70     	 strb r2,[r3]
 3011              	.LBB15:
 333:../nRF24L01+.c **** 	for(int i = 0 ; i < 0x3FFF;i++); //delay
 3012              	 .loc 4 333 0
 3013 003e 0023     	 mov r3,#0
 3014 0040 7B60     	 str r3,[r7,#4]
 3015 0042 02E0     	 b .L156
 3016              	.L157:
 3017              	 .loc 4 333 0 is_stmt 0 discriminator 3
 3018 0044 7B68     	 ldr r3,[r7,#4]
 3019 0046 0133     	 add r3,r3,#1
 3020 0048 7B60     	 str r3,[r7,#4]
 3021              	.L156:
 3022              	 .loc 4 333 0 discriminator 1
 3023 004a 7B68     	 ldr r3,[r7,#4]
 3024 004c 064A     	 ldr r2,.L158+16
 3025 004e 9342     	 cmp r3,r2
 3026 0050 F8DD     	 ble .L157
 3027              	.LBE15:
 334:../nRF24L01+.c **** }
 3028              	 .loc 4 334 0 is_stmt 1
 3029 0052 BD46     	 mov sp,r7
 3030 0054 02B0     	 add sp,sp,#8
 3031              	 
 3032 0056 80BD     	 pop {r7,pc}
 3033              	.L159:
 3034              	 .align 2
 3035              	.L158:
 3036 0058 00000000 	 .word NRF24SendData
 3037 005c 00000000 	 .word SPI_MASTER_0
 3038 0060 00000000 	 .word NRF24ReadData
 3039 0064 00000000 	 .word Status_reg
 3040 0068 FE3F0000 	 .word 16382
 3041              	 .cfi_endproc
 3042              	.LFE276:
 3044              	 .section .text.TX_Mode,"ax",%progbits
 3045              	 .align 2
 3046              	 .global TX_Mode
 3047              	 .code 16
 3048              	 .thumb_func
 3050              	TX_Mode:
 3051              	.LFB277:
 335:../nRF24L01+.c **** void TX_Mode(void){
 3052              	 .loc 4 335 0
 3053              	 .cfi_startproc
 3054 0000 80B5     	 push {r7,lr}
 3055              	.LCFI101:
 3056              	 .cfi_def_cfa_offset 8
 3057              	 .cfi_offset 7,-8
 3058              	 .cfi_offset 14,-4
 3059 0002 00AF     	 add r7,sp,#0
 3060              	.LCFI102:
 3061              	 .cfi_def_cfa_register 7
 336:../nRF24L01+.c **** 	NRF24SendData [0] = (W_REGISTER | NRF_CONFIG);
 3062              	 .loc 4 336 0
 3063 0004 114B     	 ldr r3,.L161
 3064 0006 2022     	 mov r2,#32
 3065 0008 1A70     	 strb r2,[r3]
 337:../nRF24L01+.c **** 	NRF24SendData [1] = getConfigRegister() | _BV(PRIM_RX) ;
 3066              	 .loc 4 337 0
 3067 000a FFF7FEFF 	 bl getConfigRegister
 3068 000e 031C     	 mov r3,r0
 3069 0010 1A1C     	 mov r2,r3
 3070 0012 0123     	 mov r3,#1
 3071 0014 1343     	 orr r3,r2
 3072 0016 DAB2     	 uxtb r2,r3
 3073 0018 0C4B     	 ldr r3,.L161
 3074 001a 5A70     	 strb r2,[r3,#1]
 338:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 3075              	 .loc 4 338 0
 3076 001c 0C4B     	 ldr r3,.L161+4
 3077 001e 181C     	 mov r0,r3
 3078 0020 0021     	 mov r1,#0
 3079 0022 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 339:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 3080              	 .loc 4 339 0
 3081 0026 0A49     	 ldr r1,.L161+4
 3082 0028 084A     	 ldr r2,.L161
 3083 002a 0A4B     	 ldr r3,.L161+8
 3084 002c 081C     	 mov r0,r1
 3085 002e 111C     	 mov r1,r2
 3086 0030 1A1C     	 mov r2,r3
 3087 0032 0223     	 mov r3,#2
 3088 0034 FFF7FEFF 	 bl SPI_MASTER_Transfer
 340:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 3089              	 .loc 4 340 0
 3090 0038 054B     	 ldr r3,.L161+4
 3091 003a 181C     	 mov r0,r3
 3092 003c FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 341:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 3093              	 .loc 4 341 0
 3094 0040 044B     	 ldr r3,.L161+8
 3095 0042 1A78     	 ldrb r2,[r3]
 3096 0044 044B     	 ldr r3,.L161+12
 3097 0046 1A70     	 strb r2,[r3]
 342:../nRF24L01+.c **** }
 3098              	 .loc 4 342 0
 3099 0048 BD46     	 mov sp,r7
 3100              	 
 3101 004a 80BD     	 pop {r7,pc}
 3102              	.L162:
 3103              	 .align 2
 3104              	.L161:
 3105 004c 00000000 	 .word NRF24SendData
 3106 0050 00000000 	 .word SPI_MASTER_0
 3107 0054 00000000 	 .word NRF24ReadData
 3108 0058 00000000 	 .word Status_reg
 3109              	 .cfi_endproc
 3110              	.LFE277:
 3112              	 .section .text.getConfigRegister,"ax",%progbits
 3113              	 .align 2
 3114              	 .global getConfigRegister
 3115              	 .code 16
 3116              	 .thumb_func
 3118              	getConfigRegister:
 3119              	.LFB278:
 343:../nRF24L01+.c **** uint8_t getConfigRegister(void){
 3120              	 .loc 4 343 0
 3121              	 .cfi_startproc
 3122 0000 80B5     	 push {r7,lr}
 3123              	.LCFI103:
 3124              	 .cfi_def_cfa_offset 8
 3125              	 .cfi_offset 7,-8
 3126              	 .cfi_offset 14,-4
 3127 0002 00AF     	 add r7,sp,#0
 3128              	.LCFI104:
 3129              	 .cfi_def_cfa_register 7
 344:../nRF24L01+.c **** 	NRF24SendData [0] = (R_REGISTER | NRF_CONFIG);
 3130              	 .loc 4 344 0
 3131 0004 124B     	 ldr r3,.L165
 3132 0006 0022     	 mov r2,#0
 3133 0008 1A70     	 strb r2,[r3]
 345:../nRF24L01+.c **** 	NRF24SendData [1] = RF24_NOP;
 3134              	 .loc 4 345 0
 3135 000a 114B     	 ldr r3,.L165
 3136 000c FF22     	 mov r2,#255
 3137 000e 5A70     	 strb r2,[r3,#1]
 346:../nRF24L01+.c **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_0);
 3138              	 .loc 4 346 0
 3139 0010 104B     	 ldr r3,.L165+4
 3140 0012 181C     	 mov r0,r3
 3141 0014 0021     	 mov r1,#0
 3142 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
 347:../nRF24L01+.c **** 	SPI_MASTER_Transfer(&SPI_MASTER_0, NRF24SendData, NRF24ReadData, 2);
 3143              	 .loc 4 347 0
 3144 001a 0E49     	 ldr r1,.L165+4
 3145 001c 0C4A     	 ldr r2,.L165
 3146 001e 0E4B     	 ldr r3,.L165+8
 3147 0020 081C     	 mov r0,r1
 3148 0022 111C     	 mov r1,r2
 3149 0024 1A1C     	 mov r2,r3
 3150 0026 0223     	 mov r3,#2
 3151 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
 348:../nRF24L01+.c **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
 3152              	 .loc 4 348 0
 3153 002c 094B     	 ldr r3,.L165+4
 3154 002e 181C     	 mov r0,r3
 3155 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
 349:../nRF24L01+.c **** 	Status_reg = NRF24ReadData[0];
 3156              	 .loc 4 349 0
 3157 0034 084B     	 ldr r3,.L165+8
 3158 0036 1A78     	 ldrb r2,[r3]
 3159 0038 084B     	 ldr r3,.L165+12
 3160 003a 1A70     	 strb r2,[r3]
 350:../nRF24L01+.c **** 	Config_Regiter = NRF24ReadData[1];
 3161              	 .loc 4 350 0
 3162 003c 064B     	 ldr r3,.L165+8
 3163 003e 5A78     	 ldrb r2,[r3,#1]
 3164 0040 074B     	 ldr r3,.L165+16
 3165 0042 1A70     	 strb r2,[r3]
 351:../nRF24L01+.c **** 	return Config_Regiter;
 3166              	 .loc 4 351 0
 3167 0044 064B     	 ldr r3,.L165+16
 3168 0046 1B78     	 ldrb r3,[r3]
 352:../nRF24L01+.c **** }
 3169              	 .loc 4 352 0
 3170 0048 181C     	 mov r0,r3
 3171 004a BD46     	 mov sp,r7
 3172              	 
 3173 004c 80BD     	 pop {r7,pc}
 3174              	.L166:
 3175 004e C046     	 .align 2
 3176              	.L165:
 3177 0050 00000000 	 .word NRF24SendData
 3178 0054 00000000 	 .word SPI_MASTER_0
 3179 0058 00000000 	 .word NRF24ReadData
 3180 005c 00000000 	 .word Status_reg
 3181 0060 00000000 	 .word Config_Regiter
 3182              	 .cfi_endproc
 3183              	.LFE278:
 3185              	 .text
 3186              	.Letext0:
 3187              	 .file 5 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3188              	 .file 6 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3189              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc1_gpio.h"
 3190              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_usic.h"
 3191              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_spi.h"
 3192              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Include/cmsis_gcc.h"
 3193              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 3194              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER/spi_master_extern.h"
 3195              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 3196              	 .file 14 "../nRF24L01+.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nRF24L01+.c
    {standard input}:18     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:22     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:58     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:62     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:98     .text.SPI_MASTER_EnableSlaveSelectSignal:00000000 $t
    {standard input}:102    .text.SPI_MASTER_EnableSlaveSelectSignal:00000000 SPI_MASTER_EnableSlaveSelectSignal
    {standard input}:145    .text.SPI_MASTER_DisableSlaveSelectSignal:00000000 $t
    {standard input}:149    .text.SPI_MASTER_DisableSlaveSelectSignal:00000000 SPI_MASTER_DisableSlaveSelectSignal
    {standard input}:179    .text.SPI_MASTER_TransmitWord:00000000 $t
    {standard input}:183    .text.SPI_MASTER_TransmitWord:00000000 SPI_MASTER_TransmitWord
    {standard input}:223    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:227    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:261    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:265    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
                            *COM*:00000020 NRF24SendData
                            *COM*:00000020 NRF24ReadData
                            *COM*:00000001 Config_Regiter
                            *COM*:00000001 Status_reg
    {standard input}:302    .rodata:00000000 $d
    {standard input}:306    .text.Init_RF24:00000000 $t
    {standard input}:311    .text.Init_RF24:00000000 Init_RF24
    {standard input}:761    .text.setChannel:00000000 setChannel
    {standard input}:899    .text.setRetries:00000000 setRetries
    {standard input}:1138   .text.setRadiation:00000000 setRadiation
    {standard input}:1298   .text.setAddressWidth:00000000 setAddressWidth
    {standard input}:1468   .text.setFeatures:00000000 setFeatures
    {standard input}:1758   .text.enableAutoACK:00000000 enableAutoACK
    {standard input}:1821   .text.enableRXpipe:00000000 enableRXpipe
    {standard input}:2066   .text.setPayloadSize:00000000 setPayloadSize
    {standard input}:2160   .text.setRxPipeAddress:00000000 setRxPipeAddress
    {standard input}:2295   .text.setTxPipeAddress:00000000 setTxPipeAddress
    {standard input}:2406   .text.resetStatus:00000000 resetStatus
    {standard input}:2839   .text.flushTX:00000000 flushTX
    {standard input}:2902   .text.flushRX:00000000 flushRX
    {standard input}:2965   .text.PowerUP:00000000 PowerUP
    {standard input}:397    .text.Init_RF24:0000007c $d
    {standard input}:407    .text.TestCom:00000000 $t
    {standard input}:412    .text.TestCom:00000000 TestCom
    {standard input}:590    .text.Send_Word:00000000 Send_Word
    {standard input}:435    .text.TestCom:00000010 $d
    {standard input}:440    .text.Send_OneByte:00000000 $t
    {standard input}:445    .text.Send_OneByte:00000000 Send_OneByte
    {standard input}:578    .text.Send_OneByte:000000b0 $d
    {standard input}:585    .text.Send_Word:00000000 $t
    {standard input}:749    .text.Send_Word:000000d4 $d
    {standard input}:756    .text.setChannel:00000000 $t
    {standard input}:819    .text.setChannel:0000004c $d
    {standard input}:827    .text.getChannel:00000000 $t
    {standard input}:832    .text.getChannel:00000000 getChannel
    {standard input}:886    .text.getChannel:00000048 $d
    {standard input}:894    .text.setRetries:00000000 $t
    {standard input}:986    .text.setRetries:0000007c $d
    {standard input}:994    .text.getRetriesDelay:00000000 $t
    {standard input}:999    .text.getRetriesDelay:00000000 getRetriesDelay
    {standard input}:1055   .text.getRetriesDelay:0000004c $d
    {standard input}:1063   .text.getRetriesCount:00000000 $t
    {standard input}:1068   .text.getRetriesCount:00000000 getRetriesCount
    {standard input}:1125   .text.getRetriesCount:0000004c $d
    {standard input}:1133   .text.setRadiation:00000000 $t
    {standard input}:1218   .text.setRadiation:00000078 $d
    {standard input}:1226   .text.getRadiation:00000000 $t
    {standard input}:1231   .text.getRadiation:00000000 getRadiation
    {standard input}:1285   .text.getRadiation:00000048 $d
    {standard input}:1293   .text.setAddressWidth:00000000 $t
    {standard input}:1383   .text.setAddressWidth:00000070 $d
    {standard input}:1391   .text.getAddressWidth:00000000 $t
    {standard input}:1396   .text.getAddressWidth:00000000 getAddressWidth
    {standard input}:1455   .text.getAddressWidth:00000050 $d
    {standard input}:1463   .text.setFeatures:00000000 $t
    {standard input}:1541   .text.setFeatures:00000060 $d
    {standard input}:1549   .text.getFeatures:00000000 $t
    {standard input}:1554   .text.getFeatures:00000000 getFeatures
    {standard input}:1608   .text.getFeatures:00000048 $d
    {standard input}:1616   .text.disableDynamicPayLoads:00000000 $t
    {standard input}:1621   .text.disableDynamicPayLoads:00000000 disableDynamicPayLoads
    {standard input}:1677   .text.disableDynamicPayLoads:00000050 $d
    {standard input}:1685   .text.enableDynamicPayLoads:00000000 $t
    {standard input}:1690   .text.enableDynamicPayLoads:00000000 enableDynamicPayLoads
    {standard input}:1745   .text.enableDynamicPayLoads:0000004c $d
    {standard input}:1753   .text.enableAutoACK:00000000 $t
    {standard input}:1808   .text.enableAutoACK:00000040 $d
    {standard input}:1816   .text.enableRXpipe:00000000 $t
    {standard input}:1903   .text.getRXpipesEnabled:00000000 getRXpipesEnabled
    {standard input}:1890   .text.enableRXpipe:00000064 $d
    {standard input}:1898   .text.getRXpipesEnabled:00000000 $t
    {standard input}:1957   .text.getRXpipesEnabled:00000048 $d
    {standard input}:1965   .text.setPayloadSizeAllPipes:00000000 $t
    {standard input}:1970   .text.setPayloadSizeAllPipes:00000000 setPayloadSizeAllPipes
    {standard input}:2053   .text.setPayloadSizeAllPipes:00000070 $d
    {standard input}:2061   .text.setPayloadSize:00000000 $t
    {standard input}:2147   .text.setPayloadSize:00000070 $d
    {standard input}:2155   .text.setRxPipeAddress:00000000 $t
    {standard input}:2282   .text.setRxPipeAddress:000000b4 $d
    {standard input}:2290   .text.setTxPipeAddress:00000000 $t
    {standard input}:2393   .text.setTxPipeAddress:0000008c $d
    {standard input}:2401   .text.resetStatus:00000000 $t
    {standard input}:2456   .text.resetStatus:00000040 $d
    {standard input}:2464   .text.Is_TX_FIFO_full:00000000 $t
    {standard input}:2469   .text.Is_TX_FIFO_full:00000000 Is_TX_FIFO_full
    {standard input}:2529   .text.Is_TX_FIFO_full:00000054 $d
    {standard input}:2537   .text.RX_Data_PipeNum_Payload_Available:00000000 $t
    {standard input}:2542   .text.RX_Data_PipeNum_Payload_Available:00000000 RX_Data_PipeNum_Payload_Available
    {standard input}:2601   .text.RX_Data_PipeNum_Payload_Available:00000050 $d
    {standard input}:2609   .text.Is_RX_DR:00000000 $t
    {standard input}:2614   .text.Is_RX_DR:00000000 Is_RX_DR
    {standard input}:2676   .text.Is_RX_DR:00000058 $d
    {standard input}:2684   .text.Is_TX_DS:00000000 $t
    {standard input}:2689   .text.Is_TX_DS:00000000 Is_TX_DS
    {standard input}:2751   .text.Is_TX_DS:00000058 $d
    {standard input}:2759   .text.Is_MAX_RT:00000000 $t
    {standard input}:2764   .text.Is_MAX_RT:00000000 Is_MAX_RT
    {standard input}:2826   .text.Is_MAX_RT:00000058 $d
    {standard input}:2834   .text.flushTX:00000000 $t
    {standard input}:2889   .text.flushTX:00000040 $d
    {standard input}:2897   .text.flushRX:00000000 $t
    {standard input}:2952   .text.flushRX:00000040 $d
    {standard input}:2960   .text.PowerUP:00000000 $t
    {standard input}:3036   .text.PowerUP:00000058 $d
    {standard input}:3045   .text.TX_Mode:00000000 $t
    {standard input}:3050   .text.TX_Mode:00000000 TX_Mode
    {standard input}:3118   .text.getConfigRegister:00000000 getConfigRegister
    {standard input}:3105   .text.TX_Mode:0000004c $d
    {standard input}:3113   .text.getConfigRegister:00000000 $t
    {standard input}:3177   .text.getConfigRegister:00000050 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SPI_CH_EnableSlaveSelect
XMC_SPI_CH_DisableSlaveSelect
XMC_SPI_CH_Transmit
SPI_MASTER_0
SPI_CE
SPI_MASTER_Transfer
