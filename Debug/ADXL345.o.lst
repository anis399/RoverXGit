   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "ADXL345.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.SPI_MASTER_EnableSlaveSelectSignal,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	SPI_MASTER_EnableSlaveSelectSignal:
  23              	.LFB182:
  24              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER/spi_master.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @file spi_master.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @date 2016-06-20
   4:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * NOTE:
   6:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   8:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @cond
   9:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  10:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI_MASTER v4.3.30 - Configures the properties of USIC channel to support SPI mode of communicat
  11:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  13:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * All rights reserved.
  14:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  15:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * following conditions are met:
  17:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  18:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   disclaimer.
  20:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  24:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   products derived from this software without specific prior written permission.
  26:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  27:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  35:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  38:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Change History
  40:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * --------------
  41:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  42:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-16:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Initial version<br>
  44:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  45:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-20:
  46:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Added 'SPI_MASTER_INPUT_INVALID' in SPI_MASTER_INPUT_t to support dynamic mode change from
  47:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       as well<br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-05-08:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_SetBaudRate() and SPI_MASTER_Transfer() are added<br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - C++ guard applied to API section only<br>
  52:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - File guard updated according to the guidelines<br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "SPI_MASTER_STATUS_BUFFER_INVALID" is added in SPI_MASTER_STATUS_t enum<br>
  54:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "leading_trailing_delay" is added in APP config structure<br>
  55:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "tx_data_dummy" is added in Dynamic config structure to support SPI_MASTER_Transfer() API<
  56:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - XMC_ASSERT() are for NULL handle check in inline APIs<br>
  57:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_lTransmitHandler(), SPI_MASTER_lReceiveHandler(), SPI_MASTER_lProtocolHandler()
  58:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       spi_master_conf.c file<br>
  59:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  60:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-06-20:
  61:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - For SPI_MASTER_Transfer(), SPI_MASTER_Receive(), SPI_MASTER_Transmit() APIs, the input dat
  62:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       from 16-bit to 8-bit.
  63:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - word_length fields is added in SPI_MASTER_DYNAMIC_CONFIG_t, to support runtime change.
  64:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Abort API are updated to return the status.
  65:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-07-07:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - DYNAMIC_CONFIG_t is renamed as RUNTIME_t
  68:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  69:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-09-30:
  70:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - New SPI_MASTER_STATUS_MODE_MISMATCH item is added in SPI_MASTER_STATUS_t
  71:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  72:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-08:
  73:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_DMA_MAXCOUNT is exposed to the user.
  74:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - dx0_input_half_duplex is added to support while changing the mode to half duplex mode.
  75:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_IsTxBusy() and SPI_MASTER_IsRxBusy() APIs are added to return the current state
  76:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Documentation update.
  77:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  78:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-14:
  79:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - new variable "spi_master_config_mode" to store the actual mode generated during initialisa
  80:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2016-04-07:
  82:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - runtime variable are made as volatile.
  83:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  84:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2021-01-08:
  85:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Modified check for minimum XMCLib version
  86:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  87:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcond
  88:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  89:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
  90:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
  91:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #ifndef SPI_MASTER_H
  92:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_H
  93:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
  94:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * HEADER FILES
  95:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  96:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_gpio.h"
  97:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_scu.h"
  98:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_spi.h"
  99:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "DAVE_Common.h"
 100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "spi_master_conf.h"
 101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #include "GLOBAL_DMA/global_dma.h"
 104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * MACROS
 108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_MAJOR_VERSION 2
 110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_MINOR_VERSION 1
 111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_PATCH_VERSION 6
 112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if !((XMC_LIB_MAJOR_VERSION > SPI_MASTER_XMC_LIB_MAJOR_VERSION) ||\
 114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****       ((XMC_LIB_MAJOR_VERSION == SPI_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > SPI_
 115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****       ((XMC_LIB_MAJOR_VERSION == SPI_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == SPI
 116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #error "SPI_MASTER requires XMC Peripheral Library v2.1.6 or higher"
 117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /*
 120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Represents the maximum data size for DMA transaction*/
 121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_DMA_MAXCOUNT (4095U)
 122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * ENUMS
 124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_enumerations
 127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Return status of the SPI_MASTER APP
 131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_STATUS
 133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_SUCCESS = 0U,   /**< Status success */
 135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_FAILURE,        /**< Status failure */
 136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUSY,           /**< Busy state */
 137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUFFER_INVALID,  /**< If input buffer and length is invalid */
 138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_MODE_MISMATCH   /**< API invoked by a handle configured with different mode.
 139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                          e.g, If SPI_MASTER_StartTransmitDMA is invoked for an inst
 140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                          which has transmit mode configured as "Interrupt", will
 141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                          return this status.*/
 142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_STATUS_t;
 143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Service ID for Transmit, Receive and Parity events
 146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SR_ID
 148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_0 = 0U, /**< SR-0 */
 150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_1,      /**< SR-1 */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_2,      /**< SR-2 */
 152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_3,      /**< SR-3 */
 153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_4,      /**< SR-4 */
 154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_5       /**< SR-5 */
 155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SR_ID_t;
 156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Slave select signals
 159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SS_SIGNAL
 161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_0 = 0U, /**< Slave select 0 */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_1,      /**< Slave select 1 */
 164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_2,      /**< Slave select 2 */
 165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_3,      /**< Slave select 3 */
 166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_4,      /**< Slave select 4 */
 167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_5,      /**< Slave select 5 */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_6,      /**< Slave select 6 */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_7       /**< Slave select 7 */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SS_SIGNAL_t;
 171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum type which defines Receive input list
 174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_INPUT
 176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_A = 0U, /**< Input-A */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_B,      /**< Input-B */
 179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_C,      /**< Input-C */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_D,      /**< Input-D */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_E,      /**< Input-E */
 182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_F,      /**< Input-F */
 183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_G,      /**< Input-G */
 184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_INVALID /**< This is to check during mode switch */
 185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_INPUT_t;
 186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_TRANSFER_MODE
 191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_TRANSFER_MODE_t;
 196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef void (*SPI_MASTER_functionhandler)(void);
 201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef SPI_MASTER_STATUS_t (*SPI_MASTER_lInit_functionhandler)(void);
 202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** * DATA STRUCTURES
 205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** * @ingroup SPI_MASTER_datastructures
 208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** * @{
 209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Port pin selection for communication
 213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO
 215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_PORT_t* port;  /**< Reference to the port configuration */
 217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t pin;  /**< Selected pin */
 218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_t;
 219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Pin configuration for the selected pins
 222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO_CONFIG
 224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_CONFIG_t port_config;  /**< Properties of the port pin */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_HWCTRL_t hw_control;  /**<  hardware control characteristics of the pin */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_SLAVE_SELECT_t slave_select_ch;  /**<  Indicates the mapped slave select line  */
 228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_CONFIG_t;
 229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Configuration parameters of SPI_MASTER APP
 232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  typedef struct SPI_MASTER_CONFIG
 234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_CONFIG_t * const channel_config;         /**< Reference to SPI configuration structure
 236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_lInit_functionhandler fptr_spi_master_config;  /**< Function pointer to configure the 
 237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Port configuration */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_0_pin;               /**< Reference to mosi 0 pin */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_0_pin_config; /**< Reference to mosi 0 pin configurati
 241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_1_pin;               /**< Reference to mosi 1 pin */
 242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_1_pin_config; /**< Reference to mosi 1 pin configurati
 243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_2_pin;               /**< Reference to mosi 2 pin */
 244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_2_pin_config; /**< Reference to mosi 2 pin configurati
 245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_3_pin;               /**< Reference to mosi 3 pin */
 246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_3_pin_config; /**< Reference to mosi 3 pin configurati
 247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const sclk_out_pin;             /**< Reference to sclk out pin */
 248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const sclk_out_pin_config;/**< Reference to shift clock pin confi
 249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const slave_select_pin[8];      /**< Reference to slave select pin */
 250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const slave_select_pin_config[8]; /**< Reference to slave select 
 251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler tx_cbhandler;            /**< callback handler for end of transmission
 252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler rx_cbhandler;            /**< callback handler for end of reception */
 253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler parity_cbhandler;        /**< callback handler for end of parity error
 254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   /* FIFO configuration */
 255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t tx_fifo_size;               /**< Number of FIFO entries assigned to the t
 256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t rx_fifo_size;               /**< Number of FIFO entries assigned to the r
 257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Clock Settings */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t shift_clk_passive_level; /**< Baudrate Generator shift
 260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t transmit_mode;           /**< Indicates how the transmit mode is being
 261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t receive_mode;            /**< Indicates how the receive mode is being 
 262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_MODE_t  spi_master_config_mode;          /**< Defines the SPI transmit mode being used
 263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t slave_select_lines;                         /**< Number of slave select lines being used 
 264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t leading_trailing_delay;                     /**< Delay before and after each frame in ter
 265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t tx_sr;                           /**< Service request number assigned to trans
 266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t rx_sr;                           /**< Service request number assigned to recei
 267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t parity_sr;                       /**< Service request number assigned to recei
 268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_CONFIG_t;
 269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Structure to hold the dynamic variables for the SPI_MASTER communication.
 272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_RUNTIME
 274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t word_length;                              /**< Indicates the length of the data word */
 276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t tx_data_count;                            /**< Number of bytes of data to be transmitted
 277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t tx_data_index;                   /**< Index to the byte to be transmitted next 
 278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           buffer */
 279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t rx_data_count;                            /**< Number of bytes of data to be received*/
 280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t rx_data_index;                   /**< Indicates the number of bytes currently a
 281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           rx_data buffer */
 282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* rx_data;                                  /**< Pointer to the receive data buffer*/
 283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* tx_data;                                  /**< Pointer to the transmit data buffer*/
 284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile XMC_SPI_CH_MODE_t  spi_master_mode;       /**< Defines the SPI transmit mode being used 
 285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input;                      /**< DX0 input channel used for Rx input, This
 286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to full duplex mode */
 287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input_half_duplex;          /**< DX0 input channel used for Rx input, This
 288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to half duplex mode */
 289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_busy;                            /**< Status flag to indicate busy when a recep
 290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_busy;                            /**< Status flag to indicate busy when a trans
 291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_data_dummy;                      /**< Status flag to indicate, dummy data is be
 292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_data_dummy;                      /**< Status flag to indicate, receive data has
 293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           not */
 294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  } SPI_MASTER_RUNTIME_t;
 295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialization parameters of SPI_MASTER APP
 299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER
 301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
 302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_t* const channel; /**< Reference to SPI channel */
 303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_CONFIG_t * const config; /**< Reference to the SPI_MASTER configuration structur
 304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_RUNTIME_t * const runtime;  /**< Reference to SPI_MASTER dynamic configuration structu
 305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if ((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma;
 307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_tx_config; /**< Reference to the DMA configuration struc
 310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_rx_config; /**< Reference to the DMA configuration struc
 313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma_rx;
 314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_rx_number;
 315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_tx_number;
 318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_t;
 320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** * API Prototypes
 326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #ifdef __cplusplus
 328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** extern "C" {
 329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_apidoc
 332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Get SPI_MASTER APP version
 336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function can be used to check application software compatibility with a
 340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * specific version of the APP.
 341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_APP_VERSION_t app_version;
 349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   app_version = SPI_MASTER_GetAppVersion();
 353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if (app_version.major != 4U)
 355:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 356:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     // Probably, not the right version.
 357:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 358:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 359:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   while(1U)
 360:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 361:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 362:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   return 1;
 363:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 364:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 365:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** DAVE_APP_VERSION_t SPI_MASTER_GetAppVersion(void);
 367:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 368:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 369:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialize the SPI channel as per the configuration made in GUI.
 370:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 371:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return SPI_MASTER_STATUS_t: Status of SPI_MASTER driver initialization.\n
 372:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_SUCCESS - on successful initialization.\n
 373:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_FAILURE - if initialization fails.\n
 374:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 375:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 376:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Initializes IO pins used for the SPI_MASTER communication and configures USIC registers based on
 377:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * provided in the GUI. Calculates divider values PDIV and STEP for a precise baudrate. It also ena
 378:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt flags and service request values.
 379:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 380:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 381:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 382:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 383:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 384:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 385:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  int main(void)
 386:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  {
 387:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    DAVE_STATUS_t status;
 388:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 389:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 390:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 391:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(status == DAVE_STATUS_SUCCESS)
 392:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 393:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *        while(1U)
 394:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *        {
 395:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *        }
 396:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 397:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    else
 398:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 399:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 400:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 401:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 402:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 403:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 404:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     return 1U;
 405:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 406:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 407:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 408:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Init(SPI_MASTER_t* const handle);
 409:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 411:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the communication mode along with required port configuration.
 412:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 413:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 414:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param mode SPI working mode
 415:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 416:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 417:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of settings are successful\n
 418:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if mode is not supported by the selected pins\n
 419:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with transmit or receive operation\
 420:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 421:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 422:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 423:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * To change the mode of communication, it is advised to generate the code in Quad/Dual mode initia
 424:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the mode will be taken care by the APP.
 425:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <ul>
 426:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Quad mode, it is possible to change to other modes like Dual, Half 
 427:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Dual mode, it is possible to change to other modes like Half Duplex
 428:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for full-duplex mode, it is possible to change to Half Duplex only </li
 429:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * </ul>
 430:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * 
 431:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 432:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 433:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 434:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 435:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 436:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 437:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 438:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Precondition:
 439:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Configure the SPI_MASTER APP operation mode as 'Quad SPI'.
 440:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 441:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master device mode to Full duplex mode and starts sending 
 442:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 443:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 444:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 445:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 446:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 447:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 448:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 449:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 450:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 451:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 452:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 453:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 454:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    spi_status = SPI_MASTER_SetMode(&SPI_MASTER_0, XMC_SPI_CH_MODE_STANDARD);
 455:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 456:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 457:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 458:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 459:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 460:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 461:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 462:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 463:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 464:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 465:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 466:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 467:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 468:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 469:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 470:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 471:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 472:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetMode(SPI_MASTER_t* const handle, const XMC_SPI_CH_MODE_t mode);
 473:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 474:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 475:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the required baud rate during runtime.
 476:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 477:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 478:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param baud_rate required baud rate
 479:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 480:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 481:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of baud rate is successful\n
 482:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if updation is failed\n
 483:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with other operation\n
 484:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 485:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 486:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 487:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * While setting the baud rate to avoid noise of the port pins, all the pins are changed to input. 
 488:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * required baud again ports are initialised with the configured settings.
 489:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 490:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 491:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 492:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 493:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 494:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 495:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 496:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 497:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master baud rate to 9600 and starts sending the data store
 498:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 499:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 500:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 501:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 502:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 503:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 504:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 505:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint32_t baud_rate;
 506:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 507:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 508:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 509:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 510:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     baud_rate = 9600U;
 511:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 512:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     spi_status = SPI_MASTER_SetBaudRate(&SPI_MASTER_0, baud_rate);
 513:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 514:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 515:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 516:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 517:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 518:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 519:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 520:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 521:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 522:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 523:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 524:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 525:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 526:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 527:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 528:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 529:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 530:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetBaudRate(SPI_MASTER_t* const handle, const uint32_t baud_rate);
 531:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 532:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 533:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 534:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 535:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 536:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 537:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 538:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 539:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 540:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 541:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 542:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 543:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 544:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 545:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** * Transmits data using the SPI channel as a master device. Transmission is accomplished using the t
 546:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * as configured in the UI.<br>
 547:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 548:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure
 549:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 550:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed. If transmit FIFO is enabled, the trigger limit is set to 1.
 551:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * So the transmit interrupt will be generated when all the data in FIFO is moved out of FIFO.
 552:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The APP handle's runtime structure is used to store the data pointer, count, data index
 553:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * and status of transmission. This function only registers a data transmission request if
 554:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * there is no active transmission in progress. Actual data transmission happens in the transmit
 555:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt service routine. A trigger is generated for the transmit interrupt to start loading
 556:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data to the transmit buffer. If transmit FIFO is configured, the data is filled into the FIF
 557:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmit interrupt will be generated subsequently when the transmit FIFO is empty. At this
 558:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * point of time, if there is some more data to be transmitted, it is loaded to the FIFO again.
 559:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * When FIFO is not enabled, data is transmitted one byte at a time. On transmission of each byte
 560:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 561:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 562:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 563:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 564:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the completion of data transmission or use SPI_MASTER_IsTxBusy() API.<br>
 565:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 566:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. A DMA channel is configured to p
 567:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * data to the SPI channel transmit buffer. This removes the load off the CPU. This API will only c
 568:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * and enable the DMA channel by specifying the data buffer and count of bytes to transmit. Rest is
 569:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * care without the CPU's intervention. User can configure a callback function in the APP UI. When 
 570:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * transmission is complete, the callback function will be executed. FIFO will not be used in DMA m
 571:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Receive start interrupt is configured for triggering the DMA channel. So each byte is transmitte
 572:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the background through the DMA channel.
 573:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If the callback function is not configured, \a handle->runtime->tx_busy flag can be checked to
 574:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * verify if the transmission is complete.
 575:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct:</b><br>
 576:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be transmitted using polling method. Status flags are used to check if data can be tra
 577:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is tr
 578:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 579:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 580:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 581:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 582:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 583:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 584:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 585:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
 586:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 587:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 588:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 589:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 590:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 591:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 592:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 593:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 594:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 595:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 596:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 597:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
 598:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 599:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 600:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 601:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 602:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 603:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 604:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 605:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 606:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 607:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 608:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 609:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 610:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 611:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 612:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 613:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 614:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 615:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 616:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transmit(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_
 617:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 618:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 619:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 620:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 621:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 622:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 623:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 624:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 625:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 626:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 627:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 628:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 629:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 630:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received from the SPI slave synchronously. After the requested number of data bytes
 631:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 632:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data reception is accomplished using the receive mode selected in the UI.
 633:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 634:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Based on the UI configuration, either standard receive buffer(RBUF) or receive FIFO(OUT) is used
 635:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * for data reception. An interrupt is configured for reading received data from the bus. This func
 636:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * only registers a request to receive a number of data bytes from a USIC channel. If FIFO is
 637:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for reception, the FIFO limit is dynamically configured to optimally utilize the
 638:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * CPU load. Before starting data reception, the receive buffers are flushed. So only those data, r
 639:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 640:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 641:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 642:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 643:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 644:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 645:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 646:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 647:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. In this mode, a DMA channel is
 648:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for receiving data from standard receive buffer(RBUF) to the user buffer. By calling
 649:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * this API, the DMA channel destination address is configured to the user buffer and the channel i
 650:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * enabled. Receive FIFO will not be used when the receive mode is DMA.
 651:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Before starting data reception, the receive buffers are flushed. So only those data, received
 652:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 653:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 654:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 655:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 656:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 657:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 658:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 659:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct</b><br>
 660:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * In Direct receive mode, neither interrupt nor DMA is used. The API polls
 661:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the receive flag to read the received data and waits for all the requested number of bytes to
 662:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * be received. Based on FIFO configuration, either RBUF or OUT register is used for reading receiv
 663:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * data. Before starting data reception, the receive buffers are flushed. So only those data, recei
 664:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 665:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is re
 666:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 667:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 668:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 669:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 670:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 671:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 672:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 673:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 674:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Receives 10 bytes of data from slave.
 675:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 676:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 677:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 678:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 679:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 680:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 681:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 682:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 683:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 684:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 10U))
 685:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 686:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 687:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 688:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 689:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 690:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 691:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 692:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 693:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 694:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 695:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 696:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 697:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 698:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 699:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 700:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 701:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 702:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Receive(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_t
 703:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 704:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 705:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits and Receives the specified number of data words and execute the receive callbac
 706:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *        in GUI.
 707:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 708:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 709:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param tx_dataptr Pointer to data buffer which has to be send
 710:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param rx_dataptr Pointer to data buffer where the received data has to be stored.
 711:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read and write
 712:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 713:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 714:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS   : if transfer of data is successful\n
 715:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE   : if transfer of data is failed (or) in other than standard
 716:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if passed buffers are NULL pointers (or) length of d
 717:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 718:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 719:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmits and receives data simultaneously using the SPI channel as a master device. API is appl
 720:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Full duplex</> operation mode. Data transfer happens based on the individual modes configured
 721:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception.<br>
 722:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Two data pins MOSI and MISO will be used for receiving and transmitting data respectively. A cal
 723:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured to execute after completing the transfer when 'Interrupt' or 'DMA' mode is used. The 
 724:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * should be configured for <i>End of receive/transfer callback</i> in the 'Interrupt Settings' tab
 725:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed when the last word of data is received.
 726:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 727:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 728:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 729:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 730:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 731:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 732:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 733:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 734:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition: Operation mode should be 'Full Duplex"
 735:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 736:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits and Receives 10 bytes of data from slave in parallel.
 737:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 738:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 739:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 740:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 741:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 742:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t SendData[10] = {0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA};
 743:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 744:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 745:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 746:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 747:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 748:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transfer(&SPI_MASTER_0, SendData, ReadData, 10);
 749:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 750:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 751:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 752:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 753:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 754:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 755:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 756:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 757:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 758:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 759:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 760:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 761:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transfer(const SPI_MASTER_t *const handle,
 762:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* tx_dataptr,
 763:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* rx_dataptr,
 764:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint32_t count);
 765:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 766:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
 767:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 768:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 769:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 770:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 771:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 772:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 773:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 774:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 775:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 776:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 777:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH if receive mode is DMA.
 778:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 779:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 780:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * After receiving the specified number of words (word length configured), the user configured call
 781:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * is executed, if it is enabled. If a callback function is not configured on the APP UI, the user 
 782:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the status of rx_busy variable of the APP handle structure. Based on the UI configuration, eithe
 783:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * buffer or receive FIFO is used for data reception. An interrupt is configured for received data 
 784:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function only registers a request to receive a number of data bytes from a SPI channel. If FIFO 
 785:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.
 786:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_irq_flow_chart">Click her
 787:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 788:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 789:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 790:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 791:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 792:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 793:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 794:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 795:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 796:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 797:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 798:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 799:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 800:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 801:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 802:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 803:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartReceiveIRQ(&SPI_MASTER_0, ReadData, 10U))
 804:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 805:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 806:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 807:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 808:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, ReadData, 10U);
 809:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 810:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 811:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 812:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 813:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 814:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 815:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 816:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 817:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 818:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 819:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 820:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 821:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 822:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveIRQ(const SPI_MASTER_t *const handle, uint8_t* dataptr, 
 823:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 824:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 825:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_INTERRUPT_TRANSMIT_MODE == 1U)
 826:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 827:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 828:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 829:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 830:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 831:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 832:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 833:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 834:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 835:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 836:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if the data_ptr is NULL or count is 0. \n
 837:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is DMA.
 838:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 839:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 840:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 841:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. After transmitting the total dat
 842:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function is executed. If transmit FIFO is enabled, the trigger limit is set to 1. So the transmi
 843:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * generated when all the data in FIFO is moved from FIFO. The function uses APP handle's dynamic s
 844:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data pointer, count, data index and status of transmission. This function only registers a d
 845:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * request if there is no active transmission in progress. Actual data transmission happens in the 
 846:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * service routine. A trigger is generated for the transmit interrupt to start loading the data. If
 847:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured, the data is filled into the FIFO with trigger limit set to 1. Transmit interrupt wil
 848:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * when the transmit FIFO is empty. At this point of time, if there is some more data to be transmi
 849:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * to the FIFO again. When FIFO is not enabled, data is transmitted one byte at a time. On transmis
 850:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 851:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_irq_flow_chart">Click he
 852:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 853:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 854:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 855:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 856:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 857:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 858:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Pre-condition:
 859:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmit mode should be configured as "Interrupt".
 860:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 861:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" data to slave.
 862:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 863:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 864:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 865:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 866:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 867:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 868:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 869:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 870:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 871:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 872:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartTransmitIRQ(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_ST
 873:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 874:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 875:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 876:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 877:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 878:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 879:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 880:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 881:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 882:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 883:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 884:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 885:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 886:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 887:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 888:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 889:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 890:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 891:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitIRQ(const SPI_MASTER_t *const handle, uint8_t *addr, ui
 892:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 893:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 894:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 895:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 896:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 897:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for receiving data over SPI_MASTER channel using DMA.
 898:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 899:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 900:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  Pointer to SPI_MASTER_t handle structure
 901:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param data_ptr  Pointer to data of type uint8_t.
 902:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count  Total no of bytes to be received.\n
 903:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                \b Range: minimum= 1, maximum= 4096.
 904:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 905:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status for receive request.\n
 906:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 907:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a reception is in progress.\n
 908:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is
 909:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if receive mode is Interrupt \n
 910:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 911:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 912:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 913:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received,
 914:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 915:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 916:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 917:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 918:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 919:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 920:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 921:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * A maximum of 4096 bytes can be received in one API call. This limit is because of the DMA single
 922:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_dma_flow_chart">Click her
 923:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 924:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 925:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 926:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 927:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 928:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 929:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre condition:
 930:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Receive mode should be configured to "DMA"
 931:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Receive 10 bytes from slave.
 932:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 933:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 934:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
 935:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 936:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
 937:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t ReadData[10];
 938:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 939:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
 940:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
 941:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 942:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartReceiveDMA(&SPI_MASTER_0, ReadData, 10) == SPI_MASTER_STATUS_SUCCESS)
 943:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 944:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->rx_busy)
 945:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
 946:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
 947:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 948:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 949:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
 950:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 951:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 952:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
 953:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
 954:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
 955:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 956:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
 957:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
 958:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 959:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 960:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 961:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveDMA(const SPI_MASTER_t  *const handle, uint8_t *addr, ui
 962:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 963:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
 964:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 965:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 966:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for transmitting data over SPI_MASTER channel using DMA.
 967:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 968:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  SPI_MASTER APP handle pointer of type @ref SPI_MASTER_t
 969:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  data_ptr Pointer to data of type uint8_t.
 970:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count Total number of words to be transmitted.\n
 971:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \b Range: minimum= 1, maximum= 4096.
 972:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 973:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status of transmit request.\n
 974:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 975:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a transmission is in progress.\n
 976:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER__STATUS_BUFFER_INVALID if the data_ptr is NULL or count i
 977:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is Interrupt \n
 978:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 979:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 980:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * request is registered.
 981:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 982:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 983:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 984:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * is fully transmitted, the callback function will be executed.
 985:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function uses APP handle's runtime structure to store the status of transmission.
 986:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 987:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * data transmission happens through DMA channel. A maximum of 4095 bytes can be transmitted in one
 988:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * is because of the DMA single block size. Callback function is executed when all the data bytes a
 989:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 990:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for the completion of data tran
 991:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 992:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * multiple calls to this API.
 993:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_dma_flow_chart">Click he
 994:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 995:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 996:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 997:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 998:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 999:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre-condition:
1000:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Transmit mode should be configured as "DMA".
1001:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Transmits "Infineon" data to the slave
1002:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1003:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1004:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
1005:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1006:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
1007:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t Send_Data[] = "Infineon";
1008:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1009:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
1010:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
1011:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1012:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartTransmitDMA(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_
1013:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1014:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->tx_busy)
1015:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
1016:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
1017:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1018:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1019:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
1020:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1021:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1022:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
1023:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
1024:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
1025:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1026:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
1027:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
1028:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode
1029:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1030:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1031:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitDMA(const SPI_MASTER_t *const handle, uint8_t *addr, ui
1032:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
1033:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1034:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1035:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Returns the state of the specified interrupt flag.
1036:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1037:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1038:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag Interrupt for which status is required
1039:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1040:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  uint32_t status of the interrupt
1041:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1042:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1043:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1044:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Returns the status of the events, by reading PSR register. This indicates the status of the all 
1045:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI communication.
1046:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1047:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1048:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1049:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1050:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1051:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1052:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1053:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1054:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not.
1055:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1056:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1057:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1058:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1059:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1060:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1061:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1062:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1063:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1064:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1065:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1066:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1067:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1068:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1069:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1070:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1071:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1072:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1073:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1074:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1075:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1076:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1077:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1078:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1079:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1080:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE uint32_t SPI_MASTER_GetFlagStatus(const SPI_MASTER_t* handle, const uint32_t flag)
1081:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
1082:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_GetFlagStatus:handle NULL" , (handle != NULL));
1083:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   return (XMC_SPI_CH_GetStatusFlag(handle->channel) & flag);
1084:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
1085:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1086:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1087:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Clears the status of the specified interrupt flags.
1088:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1089:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1090:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag_mask Interrupt for which status has to be cleared
1091:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1092:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1093:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1094:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * During communication the events occurred has to be cleared to get the successive events.\n
1095:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
1096:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * to be cleared after transmission of each data word. Otherwise next event is not considered as va
1097:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1098:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1099:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not, and clears the flag.
1106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIF
1117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_ClearFlag(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_ClearFlag(const SPI_MASTER_t* handle, const uint32_t flag_mask)
1131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
1132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_ClearFlag:handle NULL" , (handle != NULL));
1133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_ClearStatusFlag(handle->channel, flag_mask);
1134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
1135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief return the txbusy flag state
1138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return bool : status of txbusy flag
1140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This is used to check whether any transmit process is going or not. If no process is going then 
1144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the new request is accepted. SPI_MASTER_AbortTransmit() can be used to stop the current process 
1145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * start the new request.
1146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
1155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
1167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_IsTxBusy(&SPI_MASTER_0))
1169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
1183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE bool SPI_MASTER_IsTxBusy(const SPI_MASTER_t* const handle)
1186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
1187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_IsTxBusy:handle NULL", (handle != NULL))
1188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   return (handle->runtime->tx_busy);
1189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
1190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief return the rxbusy flag state
1193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return bool : status of rxbusy flag
1195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * This is used to check whether any receive process is going or not. If no process is going then o
1199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * the new request is accepted. SPI_MASTER_AbortReceive() can be used to stop the current process a
1200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * start the new request.
1201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Receives 10 bytes of data from slave.
1210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
1215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 10U))
1220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_IsRxBusy(&SPI_MASTER_0))
1222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE bool SPI_MASTER_IsRxBusy(const SPI_MASTER_t* const handle)
1238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
1239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_IsTxBusy:handle NULL", (handle != NULL))
1240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****   return (handle->runtime->rx_busy);
1241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
1242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enables the specified slave select line
1246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param slave which slave signal has to be enabled
1249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Each slave is connected with one slave select signal. At a time only one slave can be communicat
1252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * required slave to start the communication.
1253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Generate code for multiple slave by configuring in "Advanced settings tab". Transmit the data to
1257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition:
1262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Configure to use two slaves".
1263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits 10 bytes of data to slave-0 and disables the slave-o. Then enable the slave-1 and tr
1265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
1276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_1);
1277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_EnableSlaveSelectSignal(const SPI_MASTER_t* handle, const SPI_MASTE
1292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
  25              	 .loc 1 1292 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
1293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_EnableSlaveSelectSignal:handle NULL" , (handle != NULL));
1294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_EnableSlaveSelectSignal:Invalid Slave selection" , ((slave == SPI_MASTER
1295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                               );
1303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_EnableSlaveSelect(handle->channel, handle->config->slave_select_pin_config[slave]->s
  42              	 .loc 1 1303 0
  43 000e 7B68     	 ldr r3,[r7,#4]
  44 0010 1968     	 ldr r1,[r3]
  45 0012 7B68     	 ldr r3,[r7,#4]
  46 0014 5B68     	 ldr r3,[r3,#4]
  47 0016 FA1C     	 add r2,r7,#3
  48 0018 1278     	 ldrb r2,[r2]
  49 001a 1432     	 add r2,r2,#20
  50 001c 9200     	 lsl r2,r2,#2
  51 001e D358     	 ldr r3,[r2,r3]
  52 0020 DB68     	 ldr r3,[r3,#12]
  53 0022 081C     	 mov r0,r1
  54 0024 191C     	 mov r1,r3
  55 0026 FFF7FEFF 	 bl XMC_SPI_CH_EnableSlaveSelect
1304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
  56              	 .loc 1 1304 0
  57 002a BD46     	 mov sp,r7
  58 002c 02B0     	 add sp,sp,#8
  59              	 
  60 002e 80BD     	 pop {r7,pc}
  61              	 .cfi_endproc
  62              	.LFE182:
  64              	 .section .text.SPI_MASTER_DisableSlaveSelectSignal,"ax",%progbits
  65              	 .align 2
  66              	 .code 16
  67              	 .thumb_func
  69              	SPI_MASTER_DisableSlaveSelectSignal:
  70              	.LFB183:
1305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** 
1306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Disables the all the slave select lines
1308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Disable all the slave signals by clearing PCR.SELO bits.
1313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition:
1320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Configure to use two slaves".
1321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits 10 bytes of data to slave-0 and disables the slave-o. Then enable the slave-1 and tr
1323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
1334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_1);
1335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_DisableSlaveSelectSignal(const SPI_MASTER_t* handle)
1351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** {
  71              	 .loc 1 1351 0
  72              	 .cfi_startproc
  73 0000 80B5     	 push {r7,lr}
  74              	.LCFI3:
  75              	 .cfi_def_cfa_offset 8
  76              	 .cfi_offset 7,-8
  77              	 .cfi_offset 14,-4
  78 0002 82B0     	 sub sp,sp,#8
  79              	.LCFI4:
  80              	 .cfi_def_cfa_offset 16
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI5:
  83              	 .cfi_def_cfa_register 7
  84 0006 7860     	 str r0,[r7,#4]
1352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_Transmit:handle NULL" , (handle != NULL));
1353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_DisableSlaveSelect(handle->channel);
  85              	 .loc 1 1353 0
  86 0008 7B68     	 ldr r3,[r7,#4]
  87 000a 1B68     	 ldr r3,[r3]
  88 000c 181C     	 mov r0,r3
  89 000e FFF7FEFF 	 bl XMC_SPI_CH_DisableSlaveSelect
1354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER\spi_master.h **** }
  90              	 .loc 1 1354 0
  91 0012 BD46     	 mov sp,r7
  92 0014 02B0     	 add sp,sp,#8
  93              	 
  94 0016 80BD     	 pop {r7,pc}
  95              	 .cfi_endproc
  96              	.LFE183:
  98              	 .comm ADXL345_DataSent,32,4
  99              	 .comm ADXL345_DataRead,32,4
 100              	 .section .text.Init_ADXL345,"ax",%progbits
 101              	 .align 2
 102              	 .global Init_ADXL345
 103              	 .code 16
 104              	 .thumb_func
 106              	Init_ADXL345:
 107              	.LFB244:
 108              	 .file 2 "../ADXL345.c"
   1:../ADXL345.c  **** /*
   2:../ADXL345.c  ****  * ADXL345.c
   3:../ADXL345.c  ****  *
   4:../ADXL345.c  ****  *  Created on: Mar 1, 2022
   5:../ADXL345.c  ****  *      Author: Anis Shakkour
   6:../ADXL345.c  ****  */
   7:../ADXL345.c  **** 
   8:../ADXL345.c  **** #include "ADXL345.h"
   9:../ADXL345.c  **** 
  10:../ADXL345.c  **** 
  11:../ADXL345.c  **** void Init_ADXL345(void){
 109              	 .loc 2 11 0
 110              	 .cfi_startproc
 111 0000 80B5     	 push {r7,lr}
 112              	.LCFI6:
 113              	 .cfi_def_cfa_offset 8
 114              	 .cfi_offset 7,-8
 115              	 .cfi_offset 14,-4
 116 0002 00AF     	 add r7,sp,#0
 117              	.LCFI7:
 118              	 .cfi_def_cfa_register 7
  12:../ADXL345.c  **** 	Set_DataFormat(_BV(FULL_RES) | _BV(Range0));
 119              	 .loc 2 12 0
 120 0004 0920     	 mov r0,#9
 121 0006 FFF7FEFF 	 bl Set_DataFormat
  13:../ADXL345.c  **** 	Set_FIFO_CTR(_BV(Samples_D2));
 122              	 .loc 2 13 0
 123 000a 0420     	 mov r0,#4
 124 000c FFF7FEFF 	 bl Set_FIFO_CTR
  14:../ADXL345.c  **** 	PowerOn();
 125              	 .loc 2 14 0
 126 0010 FFF7FEFF 	 bl PowerOn
  15:../ADXL345.c  **** }
 127              	 .loc 2 15 0
 128 0014 BD46     	 mov sp,r7
 129              	 
 130 0016 80BD     	 pop {r7,pc}
 131              	 .cfi_endproc
 132              	.LFE244:
 134              	 .section .text.Set_DataFormat,"ax",%progbits
 135              	 .align 2
 136              	 .global Set_DataFormat
 137              	 .code 16
 138              	 .thumb_func
 140              	Set_DataFormat:
 141              	.LFB245:
  16:../ADXL345.c  **** void Set_DataFormat(uint8_t val){
 142              	 .loc 2 16 0
 143              	 .cfi_startproc
 144 0000 80B5     	 push {r7,lr}
 145              	.LCFI8:
 146              	 .cfi_def_cfa_offset 8
 147              	 .cfi_offset 7,-8
 148              	 .cfi_offset 14,-4
 149 0002 82B0     	 sub sp,sp,#8
 150              	.LCFI9:
 151              	 .cfi_def_cfa_offset 16
 152 0004 00AF     	 add r7,sp,#0
 153              	.LCFI10:
 154              	 .cfi_def_cfa_register 7
 155 0006 021C     	 mov r2,r0
 156 0008 FB1D     	 add r3,r7,#7
 157 000a 1A70     	 strb r2,[r3]
  17:../ADXL345.c  **** 	//SPI 4Wire (0)- INT_INVERT (0)- Full resolution (1)- Justify left (0)- Range 4g (01)
  18:../ADXL345.c  **** 	WriteRegister_SingleByte(DATA_FORMAT, val);
 158              	 .loc 2 18 0
 159 000c FB1D     	 add r3,r7,#7
 160 000e 1B78     	 ldrb r3,[r3]
 161 0010 3120     	 mov r0,#49
 162 0012 191C     	 mov r1,r3
 163 0014 FFF7FEFF 	 bl WriteRegister_SingleByte
  19:../ADXL345.c  **** }
 164              	 .loc 2 19 0
 165 0018 BD46     	 mov sp,r7
 166 001a 02B0     	 add sp,sp,#8
 167              	 
 168 001c 80BD     	 pop {r7,pc}
 169              	 .cfi_endproc
 170              	.LFE245:
 172 001e C046     	 .section .text.Set_FIFO_CTR,"ax",%progbits
 173              	 .align 2
 174              	 .global Set_FIFO_CTR
 175              	 .code 16
 176              	 .thumb_func
 178              	Set_FIFO_CTR:
 179              	.LFB246:
  20:../ADXL345.c  **** void Set_FIFO_CTR(uint8_t val){
 180              	 .loc 2 20 0
 181              	 .cfi_startproc
 182 0000 80B5     	 push {r7,lr}
 183              	.LCFI11:
 184              	 .cfi_def_cfa_offset 8
 185              	 .cfi_offset 7,-8
 186              	 .cfi_offset 14,-4
 187 0002 82B0     	 sub sp,sp,#8
 188              	.LCFI12:
 189              	 .cfi_def_cfa_offset 16
 190 0004 00AF     	 add r7,sp,#0
 191              	.LCFI13:
 192              	 .cfi_def_cfa_register 7
 193 0006 021C     	 mov r2,r0
 194 0008 FB1D     	 add r3,r7,#7
 195 000a 1A70     	 strb r2,[r3]
  21:../ADXL345.c  **** 	//FIFO_Modes bypass (00)- Trigger (0)- Samples 2 (00010
  22:../ADXL345.c  **** 	WriteRegister_SingleByte(FIFO_CTL,val);
 196              	 .loc 2 22 0
 197 000c FB1D     	 add r3,r7,#7
 198 000e 1B78     	 ldrb r3,[r3]
 199 0010 3820     	 mov r0,#56
 200 0012 191C     	 mov r1,r3
 201 0014 FFF7FEFF 	 bl WriteRegister_SingleByte
  23:../ADXL345.c  **** }
 202              	 .loc 2 23 0
 203 0018 BD46     	 mov sp,r7
 204 001a 02B0     	 add sp,sp,#8
 205              	 
 206 001c 80BD     	 pop {r7,pc}
 207              	 .cfi_endproc
 208              	.LFE246:
 210 001e C046     	 .section .text.PowerOn,"ax",%progbits
 211              	 .align 2
 212              	 .global PowerOn
 213              	 .code 16
 214              	 .thumb_func
 216              	PowerOn:
 217              	.LFB247:
  24:../ADXL345.c  **** void PowerOn(){
 218              	 .loc 2 24 0
 219              	 .cfi_startproc
 220 0000 80B5     	 push {r7,lr}
 221              	.LCFI14:
 222              	 .cfi_def_cfa_offset 8
 223              	 .cfi_offset 7,-8
 224              	 .cfi_offset 14,-4
 225 0002 00AF     	 add r7,sp,#0
 226              	.LCFI15:
 227              	 .cfi_def_cfa_register 7
  25:../ADXL345.c  **** 	//Link (0)-  Auto_Sleep (0)- Measure (1)- Sleep (0)- WakeUp (00)
  26:../ADXL345.c  **** 	WriteRegister_SingleByte(POWER_CTL,_BV(Measure));
 228              	 .loc 2 26 0
 229 0004 2D20     	 mov r0,#45
 230 0006 0821     	 mov r1,#8
 231 0008 FFF7FEFF 	 bl WriteRegister_SingleByte
  27:../ADXL345.c  **** }
 232              	 .loc 2 27 0
 233 000c BD46     	 mov sp,r7
 234              	 
 235 000e 80BD     	 pop {r7,pc}
 236              	 .cfi_endproc
 237              	.LFE247:
 239              	 .section .text.PowerOff,"ax",%progbits
 240              	 .align 2
 241              	 .global PowerOff
 242              	 .code 16
 243              	 .thumb_func
 245              	PowerOff:
 246              	.LFB248:
  28:../ADXL345.c  **** void PowerOff(){
 247              	 .loc 2 28 0
 248              	 .cfi_startproc
 249 0000 80B5     	 push {r7,lr}
 250              	.LCFI16:
 251              	 .cfi_def_cfa_offset 8
 252              	 .cfi_offset 7,-8
 253              	 .cfi_offset 14,-4
 254 0002 00AF     	 add r7,sp,#0
 255              	.LCFI17:
 256              	 .cfi_def_cfa_register 7
  29:../ADXL345.c  **** 	//Link (0)-  Auto_Sleep (0)- Measure (0)- Sleep (0)- WakeUp (00)
  30:../ADXL345.c  **** 	WriteRegister_SingleByte(POWER_CTL,0);
 257              	 .loc 2 30 0
 258 0004 2D20     	 mov r0,#45
 259 0006 0021     	 mov r1,#0
 260 0008 FFF7FEFF 	 bl WriteRegister_SingleByte
  31:../ADXL345.c  **** }
 261              	 .loc 2 31 0
 262 000c BD46     	 mov sp,r7
 263              	 
 264 000e 80BD     	 pop {r7,pc}
 265              	 .cfi_endproc
 266              	.LFE248:
 268              	 .section .text.GetdeviceID,"ax",%progbits
 269              	 .align 2
 270              	 .global GetdeviceID
 271              	 .code 16
 272              	 .thumb_func
 274              	GetdeviceID:
 275              	.LFB249:
  32:../ADXL345.c  **** uint8_t GetdeviceID(void){
 276              	 .loc 2 32 0
 277              	 .cfi_startproc
 278 0000 80B5     	 push {r7,lr}
 279              	.LCFI18:
 280              	 .cfi_def_cfa_offset 8
 281              	 .cfi_offset 7,-8
 282              	 .cfi_offset 14,-4
 283 0002 00AF     	 add r7,sp,#0
 284              	.LCFI19:
 285              	 .cfi_def_cfa_register 7
  33:../ADXL345.c  **** 	return ReadRegister_SingleByte(DEVID);
 286              	 .loc 2 33 0
 287 0004 0020     	 mov r0,#0
 288 0006 FFF7FEFF 	 bl ReadRegister_SingleByte
 289 000a 031C     	 mov r3,r0
  34:../ADXL345.c  **** }
 290              	 .loc 2 34 0
 291 000c 181C     	 mov r0,r3
 292 000e BD46     	 mov sp,r7
 293              	 
 294 0010 80BD     	 pop {r7,pc}
 295              	 .cfi_endproc
 296              	.LFE249:
 298 0012 C046     	 .section .text.Get_AxisReadings,"ax",%progbits
 299              	 .align 2
 300              	 .global Get_AxisReadings
 301              	 .code 16
 302              	 .thumb_func
 304              	Get_AxisReadings:
 305              	.LFB250:
  35:../ADXL345.c  **** void Get_AxisReadings(){
 306              	 .loc 2 35 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI20:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 00AF     	 add r7,sp,#0
 314              	.LCFI21:
 315              	 .cfi_def_cfa_register 7
  36:../ADXL345.c  **** 	ADXL345_DataSent [0] = _BV(WR) | _BV(MB) | DATAX0;
 316              	 .loc 2 36 0
 317 0004 0C4B     	 ldr r3,.L11
 318 0006 F222     	 mov r2,#242
 319 0008 1A70     	 strb r2,[r3]
  37:../ADXL345.c  **** 	ADXL345_DataSent [1] = ADXL345_NOP;
 320              	 .loc 2 37 0
 321 000a 0B4B     	 ldr r3,.L11
 322 000c FF22     	 mov r2,#255
 323 000e 5A70     	 strb r2,[r3,#1]
  38:../ADXL345.c  **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_1, SPI_MASTER_SS_SIGNAL_0);
 324              	 .loc 2 38 0
 325 0010 0A4B     	 ldr r3,.L11+4
 326 0012 181C     	 mov r0,r3
 327 0014 0021     	 mov r1,#0
 328 0016 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
  39:../ADXL345.c  **** 	SPI_MASTER_Transfer(&SPI_MASTER_1, ADXL345_DataSent, ADXL345_DataRead,7);
 329              	 .loc 2 39 0
 330 001a 0849     	 ldr r1,.L11+4
 331 001c 064A     	 ldr r2,.L11
 332 001e 084B     	 ldr r3,.L11+8
 333 0020 081C     	 mov r0,r1
 334 0022 111C     	 mov r1,r2
 335 0024 1A1C     	 mov r2,r3
 336 0026 0723     	 mov r3,#7
 337 0028 FFF7FEFF 	 bl SPI_MASTER_Transfer
  40:../ADXL345.c  **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_1);
 338              	 .loc 2 40 0
 339 002c 034B     	 ldr r3,.L11+4
 340 002e 181C     	 mov r0,r3
 341 0030 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
  41:../ADXL345.c  **** }
 342              	 .loc 2 41 0
 343 0034 BD46     	 mov sp,r7
 344              	 
 345 0036 80BD     	 pop {r7,pc}
 346              	.L12:
 347              	 .align 2
 348              	.L11:
 349 0038 00000000 	 .word ADXL345_DataSent
 350 003c 00000000 	 .word SPI_MASTER_1
 351 0040 00000000 	 .word ADXL345_DataRead
 352              	 .cfi_endproc
 353              	.LFE250:
 355              	 .section .text.ReadRegister_SingleByte,"ax",%progbits
 356              	 .align 2
 357              	 .global ReadRegister_SingleByte
 358              	 .code 16
 359              	 .thumb_func
 361              	ReadRegister_SingleByte:
 362              	.LFB251:
  42:../ADXL345.c  **** uint8_t ReadRegister_SingleByte(uint8_t reg){
 363              	 .loc 2 42 0
 364              	 .cfi_startproc
 365 0000 80B5     	 push {r7,lr}
 366              	.LCFI22:
 367              	 .cfi_def_cfa_offset 8
 368              	 .cfi_offset 7,-8
 369              	 .cfi_offset 14,-4
 370 0002 82B0     	 sub sp,sp,#8
 371              	.LCFI23:
 372              	 .cfi_def_cfa_offset 16
 373 0004 00AF     	 add r7,sp,#0
 374              	.LCFI24:
 375              	 .cfi_def_cfa_register 7
 376 0006 021C     	 mov r2,r0
 377 0008 FB1D     	 add r3,r7,#7
 378 000a 1A70     	 strb r2,[r3]
  43:../ADXL345.c  **** 	ADXL345_DataSent [0] = _BV(WR) | reg;
 379              	 .loc 2 43 0
 380 000c FB1D     	 add r3,r7,#7
 381 000e 1B78     	 ldrb r3,[r3]
 382 0010 8022     	 mov r2,#128
 383 0012 5242     	 neg r2,r2
 384 0014 1343     	 orr r3,r2
 385 0016 DAB2     	 uxtb r2,r3
 386 0018 0E4B     	 ldr r3,.L15
 387 001a 1A70     	 strb r2,[r3]
  44:../ADXL345.c  **** 	ADXL345_DataSent [1] = ADXL345_NOP;
 388              	 .loc 2 44 0
 389 001c 0D4B     	 ldr r3,.L15
 390 001e FF22     	 mov r2,#255
 391 0020 5A70     	 strb r2,[r3,#1]
  45:../ADXL345.c  **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_1, SPI_MASTER_SS_SIGNAL_0);
 392              	 .loc 2 45 0
 393 0022 0D4B     	 ldr r3,.L15+4
 394 0024 181C     	 mov r0,r3
 395 0026 0021     	 mov r1,#0
 396 0028 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
  46:../ADXL345.c  **** 	SPI_MASTER_Transfer(&SPI_MASTER_1, ADXL345_DataSent, ADXL345_DataRead, 2);
 397              	 .loc 2 46 0
 398 002c 0A49     	 ldr r1,.L15+4
 399 002e 094A     	 ldr r2,.L15
 400 0030 0A4B     	 ldr r3,.L15+8
 401 0032 081C     	 mov r0,r1
 402 0034 111C     	 mov r1,r2
 403 0036 1A1C     	 mov r2,r3
 404 0038 0223     	 mov r3,#2
 405 003a FFF7FEFF 	 bl SPI_MASTER_Transfer
  47:../ADXL345.c  **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_1);
 406              	 .loc 2 47 0
 407 003e 064B     	 ldr r3,.L15+4
 408 0040 181C     	 mov r0,r3
 409 0042 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
  48:../ADXL345.c  **** 	return ADXL345_DataRead[1];
 410              	 .loc 2 48 0
 411 0046 054B     	 ldr r3,.L15+8
 412 0048 5B78     	 ldrb r3,[r3,#1]
  49:../ADXL345.c  **** }
 413              	 .loc 2 49 0
 414 004a 181C     	 mov r0,r3
 415 004c BD46     	 mov sp,r7
 416 004e 02B0     	 add sp,sp,#8
 417              	 
 418 0050 80BD     	 pop {r7,pc}
 419              	.L16:
 420 0052 C046     	 .align 2
 421              	.L15:
 422 0054 00000000 	 .word ADXL345_DataSent
 423 0058 00000000 	 .word SPI_MASTER_1
 424 005c 00000000 	 .word ADXL345_DataRead
 425              	 .cfi_endproc
 426              	.LFE251:
 428              	 .section .text.WriteRegister_SingleByte,"ax",%progbits
 429              	 .align 2
 430              	 .global WriteRegister_SingleByte
 431              	 .code 16
 432              	 .thumb_func
 434              	WriteRegister_SingleByte:
 435              	.LFB252:
  50:../ADXL345.c  **** uint8_t WriteRegister_SingleByte(uint8_t reg, uint8_t data){
 436              	 .loc 2 50 0
 437              	 .cfi_startproc
 438 0000 80B5     	 push {r7,lr}
 439              	.LCFI25:
 440              	 .cfi_def_cfa_offset 8
 441              	 .cfi_offset 7,-8
 442              	 .cfi_offset 14,-4
 443 0002 82B0     	 sub sp,sp,#8
 444              	.LCFI26:
 445              	 .cfi_def_cfa_offset 16
 446 0004 00AF     	 add r7,sp,#0
 447              	.LCFI27:
 448              	 .cfi_def_cfa_register 7
 449 0006 021C     	 mov r2,r0
 450 0008 FB1D     	 add r3,r7,#7
 451 000a 1A70     	 strb r2,[r3]
 452 000c BB1D     	 add r3,r7,#6
 453 000e 0A1C     	 add r2,r1,#0
 454 0010 1A70     	 strb r2,[r3]
  51:../ADXL345.c  **** 	ADXL345_DataSent [0] = reg;
 455              	 .loc 2 51 0
 456 0012 104B     	 ldr r3,.L19
 457 0014 FA1D     	 add r2,r7,#7
 458 0016 1278     	 ldrb r2,[r2]
 459 0018 1A70     	 strb r2,[r3]
  52:../ADXL345.c  **** 	ADXL345_DataSent [1] = data;
 460              	 .loc 2 52 0
 461 001a 0E4B     	 ldr r3,.L19
 462 001c BA1D     	 add r2,r7,#6
 463 001e 1278     	 ldrb r2,[r2]
 464 0020 5A70     	 strb r2,[r3,#1]
  53:../ADXL345.c  **** 	SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_1, SPI_MASTER_SS_SIGNAL_0);
 465              	 .loc 2 53 0
 466 0022 0D4B     	 ldr r3,.L19+4
 467 0024 181C     	 mov r0,r3
 468 0026 0021     	 mov r1,#0
 469 0028 FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
  54:../ADXL345.c  **** 	SPI_MASTER_Transfer(&SPI_MASTER_1, ADXL345_DataSent, ADXL345_DataRead, 2);
 470              	 .loc 2 54 0
 471 002c 0A49     	 ldr r1,.L19+4
 472 002e 094A     	 ldr r2,.L19
 473 0030 0A4B     	 ldr r3,.L19+8
 474 0032 081C     	 mov r0,r1
 475 0034 111C     	 mov r1,r2
 476 0036 1A1C     	 mov r2,r3
 477 0038 0223     	 mov r3,#2
 478 003a FFF7FEFF 	 bl SPI_MASTER_Transfer
  55:../ADXL345.c  **** 	SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_1);
 479              	 .loc 2 55 0
 480 003e 064B     	 ldr r3,.L19+4
 481 0040 181C     	 mov r0,r3
 482 0042 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
  56:../ADXL345.c  **** 	return ADXL345_DataRead[1];
 483              	 .loc 2 56 0
 484 0046 054B     	 ldr r3,.L19+8
 485 0048 5B78     	 ldrb r3,[r3,#1]
  57:../ADXL345.c  **** }
 486              	 .loc 2 57 0
 487 004a 181C     	 mov r0,r3
 488 004c BD46     	 mov sp,r7
 489 004e 02B0     	 add sp,sp,#8
 490              	 
 491 0050 80BD     	 pop {r7,pc}
 492              	.L20:
 493 0052 C046     	 .align 2
 494              	.L19:
 495 0054 00000000 	 .word ADXL345_DataSent
 496 0058 00000000 	 .word SPI_MASTER_1
 497 005c 00000000 	 .word ADXL345_DataRead
 498              	 .cfi_endproc
 499              	.LFE252:
 501              	 .section .text.Set_DUR,"ax",%progbits
 502              	 .align 2
 503              	 .global Set_DUR
 504              	 .code 16
 505              	 .thumb_func
 507              	Set_DUR:
 508              	.LFB253:
  58:../ADXL345.c  **** 
  59:../ADXL345.c  **** void Set_DUR(uint8_t val){
 509              	 .loc 2 59 0
 510              	 .cfi_startproc
 511 0000 80B5     	 push {r7,lr}
 512              	.LCFI28:
 513              	 .cfi_def_cfa_offset 8
 514              	 .cfi_offset 7,-8
 515              	 .cfi_offset 14,-4
 516 0002 82B0     	 sub sp,sp,#8
 517              	.LCFI29:
 518              	 .cfi_def_cfa_offset 16
 519 0004 00AF     	 add r7,sp,#0
 520              	.LCFI30:
 521              	 .cfi_def_cfa_register 7
 522 0006 021C     	 mov r2,r0
 523 0008 FB1D     	 add r3,r7,#7
 524 000a 1A70     	 strb r2,[r3]
  60:../ADXL345.c  **** 	WriteRegister_SingleByte(DUR, val); //time = val * 625 µs/LSB
 525              	 .loc 2 60 0
 526 000c FB1D     	 add r3,r7,#7
 527 000e 1B78     	 ldrb r3,[r3]
 528 0010 2120     	 mov r0,#33
 529 0012 191C     	 mov r1,r3
 530 0014 FFF7FEFF 	 bl WriteRegister_SingleByte
  61:../ADXL345.c  **** }
 531              	 .loc 2 61 0
 532 0018 BD46     	 mov sp,r7
 533 001a 02B0     	 add sp,sp,#8
 534              	 
 535 001c 80BD     	 pop {r7,pc}
 536              	 .cfi_endproc
 537              	.LFE253:
 539 001e C046     	 .section .text.Set_Latent,"ax",%progbits
 540              	 .align 2
 541              	 .global Set_Latent
 542              	 .code 16
 543              	 .thumb_func
 545              	Set_Latent:
 546              	.LFB254:
  62:../ADXL345.c  **** void Set_Latent(uint8_t val){
 547              	 .loc 2 62 0
 548              	 .cfi_startproc
 549 0000 80B5     	 push {r7,lr}
 550              	.LCFI31:
 551              	 .cfi_def_cfa_offset 8
 552              	 .cfi_offset 7,-8
 553              	 .cfi_offset 14,-4
 554 0002 82B0     	 sub sp,sp,#8
 555              	.LCFI32:
 556              	 .cfi_def_cfa_offset 16
 557 0004 00AF     	 add r7,sp,#0
 558              	.LCFI33:
 559              	 .cfi_def_cfa_register 7
 560 0006 021C     	 mov r2,r0
 561 0008 FB1D     	 add r3,r7,#7
 562 000a 1A70     	 strb r2,[r3]
  63:../ADXL345.c  **** 	WriteRegister_SingleByte(Latent, val); //time = val *  1.25 ms/LSB
 563              	 .loc 2 63 0
 564 000c FB1D     	 add r3,r7,#7
 565 000e 1B78     	 ldrb r3,[r3]
 566 0010 2220     	 mov r0,#34
 567 0012 191C     	 mov r1,r3
 568 0014 FFF7FEFF 	 bl WriteRegister_SingleByte
  64:../ADXL345.c  **** }
 569              	 .loc 2 64 0
 570 0018 BD46     	 mov sp,r7
 571 001a 02B0     	 add sp,sp,#8
 572              	 
 573 001c 80BD     	 pop {r7,pc}
 574              	 .cfi_endproc
 575              	.LFE254:
 577 001e C046     	 .section .text.Set_Window,"ax",%progbits
 578              	 .align 2
 579              	 .global Set_Window
 580              	 .code 16
 581              	 .thumb_func
 583              	Set_Window:
 584              	.LFB255:
  65:../ADXL345.c  **** void Set_Window(uint8_t val){
 585              	 .loc 2 65 0
 586              	 .cfi_startproc
 587 0000 80B5     	 push {r7,lr}
 588              	.LCFI34:
 589              	 .cfi_def_cfa_offset 8
 590              	 .cfi_offset 7,-8
 591              	 .cfi_offset 14,-4
 592 0002 82B0     	 sub sp,sp,#8
 593              	.LCFI35:
 594              	 .cfi_def_cfa_offset 16
 595 0004 00AF     	 add r7,sp,#0
 596              	.LCFI36:
 597              	 .cfi_def_cfa_register 7
 598 0006 021C     	 mov r2,r0
 599 0008 FB1D     	 add r3,r7,#7
 600 000a 1A70     	 strb r2,[r3]
  66:../ADXL345.c  **** 	WriteRegister_SingleByte(Window, val); //time = val *  1.25 ms/LSB
 601              	 .loc 2 66 0
 602 000c FB1D     	 add r3,r7,#7
 603 000e 1B78     	 ldrb r3,[r3]
 604 0010 2320     	 mov r0,#35
 605 0012 191C     	 mov r1,r3
 606 0014 FFF7FEFF 	 bl WriteRegister_SingleByte
  67:../ADXL345.c  **** }
 607              	 .loc 2 67 0
 608 0018 BD46     	 mov sp,r7
 609 001a 02B0     	 add sp,sp,#8
 610              	 
 611 001c 80BD     	 pop {r7,pc}
 612              	 .cfi_endproc
 613              	.LFE255:
 615 001e C046     	 .section .text.Set_ThreshACT,"ax",%progbits
 616              	 .align 2
 617              	 .global Set_ThreshACT
 618              	 .code 16
 619              	 .thumb_func
 621              	Set_ThreshACT:
 622              	.LFB256:
  68:../ADXL345.c  **** void Set_ThreshACT(uint8_t val){
 623              	 .loc 2 68 0
 624              	 .cfi_startproc
 625 0000 80B5     	 push {r7,lr}
 626              	.LCFI37:
 627              	 .cfi_def_cfa_offset 8
 628              	 .cfi_offset 7,-8
 629              	 .cfi_offset 14,-4
 630 0002 82B0     	 sub sp,sp,#8
 631              	.LCFI38:
 632              	 .cfi_def_cfa_offset 16
 633 0004 00AF     	 add r7,sp,#0
 634              	.LCFI39:
 635              	 .cfi_def_cfa_register 7
 636 0006 021C     	 mov r2,r0
 637 0008 FB1D     	 add r3,r7,#7
 638 000a 1A70     	 strb r2,[r3]
  69:../ADXL345.c  **** 	WriteRegister_SingleByte(THRESH_ACT, val); //time = val *  62.5 mg/LSB
 639              	 .loc 2 69 0
 640 000c FB1D     	 add r3,r7,#7
 641 000e 1B78     	 ldrb r3,[r3]
 642 0010 2420     	 mov r0,#36
 643 0012 191C     	 mov r1,r3
 644 0014 FFF7FEFF 	 bl WriteRegister_SingleByte
  70:../ADXL345.c  **** }
 645              	 .loc 2 70 0
 646 0018 BD46     	 mov sp,r7
 647 001a 02B0     	 add sp,sp,#8
 648              	 
 649 001c 80BD     	 pop {r7,pc}
 650              	 .cfi_endproc
 651              	.LFE256:
 653 001e C046     	 .section .text.Set_ThreshINACT,"ax",%progbits
 654              	 .align 2
 655              	 .global Set_ThreshINACT
 656              	 .code 16
 657              	 .thumb_func
 659              	Set_ThreshINACT:
 660              	.LFB257:
  71:../ADXL345.c  **** void Set_ThreshINACT(uint8_t val){
 661              	 .loc 2 71 0
 662              	 .cfi_startproc
 663 0000 80B5     	 push {r7,lr}
 664              	.LCFI40:
 665              	 .cfi_def_cfa_offset 8
 666              	 .cfi_offset 7,-8
 667              	 .cfi_offset 14,-4
 668 0002 82B0     	 sub sp,sp,#8
 669              	.LCFI41:
 670              	 .cfi_def_cfa_offset 16
 671 0004 00AF     	 add r7,sp,#0
 672              	.LCFI42:
 673              	 .cfi_def_cfa_register 7
 674 0006 021C     	 mov r2,r0
 675 0008 FB1D     	 add r3,r7,#7
 676 000a 1A70     	 strb r2,[r3]
  72:../ADXL345.c  **** 	WriteRegister_SingleByte(THRESH_INACT, val); //time = val *  62.5 mg/LSB
 677              	 .loc 2 72 0
 678 000c FB1D     	 add r3,r7,#7
 679 000e 1B78     	 ldrb r3,[r3]
 680 0010 2520     	 mov r0,#37
 681 0012 191C     	 mov r1,r3
 682 0014 FFF7FEFF 	 bl WriteRegister_SingleByte
  73:../ADXL345.c  **** }
 683              	 .loc 2 73 0
 684 0018 BD46     	 mov sp,r7
 685 001a 02B0     	 add sp,sp,#8
 686              	 
 687 001c 80BD     	 pop {r7,pc}
 688              	 .cfi_endproc
 689              	.LFE257:
 691 001e C046     	 .section .text.Set_OutputDataRate,"ax",%progbits
 692              	 .align 2
 693              	 .global Set_OutputDataRate
 694              	 .code 16
 695              	 .thumb_func
 697              	Set_OutputDataRate:
 698              	.LFB258:
  74:../ADXL345.c  **** void Set_OutputDataRate(uint8_t val){
 699              	 .loc 2 74 0
 700              	 .cfi_startproc
 701 0000 80B5     	 push {r7,lr}
 702              	.LCFI43:
 703              	 .cfi_def_cfa_offset 8
 704              	 .cfi_offset 7,-8
 705              	 .cfi_offset 14,-4
 706 0002 82B0     	 sub sp,sp,#8
 707              	.LCFI44:
 708              	 .cfi_def_cfa_offset 16
 709 0004 00AF     	 add r7,sp,#0
 710              	.LCFI45:
 711              	 .cfi_def_cfa_register 7
 712 0006 021C     	 mov r2,r0
 713 0008 FB1D     	 add r3,r7,#7
 714 000a 1A70     	 strb r2,[r3]
  75:../ADXL345.c  **** 	WriteRegister_SingleByte(BW_RATE,Min(val,15));
 715              	 .loc 2 75 0
 716 000c FB1D     	 add r3,r7,#7
 717 000e 1B78     	 ldrb r3,[r3]
 718 0010 DAB2     	 uxtb r2,r3
 719 0012 0F2A     	 cmp r2,#15
 720 0014 00D9     	 bls .L27
 721 0016 0F23     	 mov r3,#15
 722              	.L27:
 723 0018 DBB2     	 uxtb r3,r3
 724 001a 2C20     	 mov r0,#44
 725 001c 191C     	 mov r1,r3
 726 001e FFF7FEFF 	 bl WriteRegister_SingleByte
  76:../ADXL345.c  **** }
 727              	 .loc 2 76 0
 728 0022 BD46     	 mov sp,r7
 729 0024 02B0     	 add sp,sp,#8
 730              	 
 731 0026 80BD     	 pop {r7,pc}
 732              	 .cfi_endproc
 733              	.LFE258:
 735              	 .section .text.Set_ThreshTap,"ax",%progbits
 736              	 .align 2
 737              	 .global Set_ThreshTap
 738              	 .code 16
 739              	 .thumb_func
 741              	Set_ThreshTap:
 742              	.LFB259:
  77:../ADXL345.c  **** void Set_ThreshTap(uint8_t val){
 743              	 .loc 2 77 0
 744              	 .cfi_startproc
 745 0000 80B5     	 push {r7,lr}
 746              	.LCFI46:
 747              	 .cfi_def_cfa_offset 8
 748              	 .cfi_offset 7,-8
 749              	 .cfi_offset 14,-4
 750 0002 82B0     	 sub sp,sp,#8
 751              	.LCFI47:
 752              	 .cfi_def_cfa_offset 16
 753 0004 00AF     	 add r7,sp,#0
 754              	.LCFI48:
 755              	 .cfi_def_cfa_register 7
 756 0006 021C     	 mov r2,r0
 757 0008 FB1D     	 add r3,r7,#7
 758 000a 1A70     	 strb r2,[r3]
  78:../ADXL345.c  **** 	WriteRegister_SingleByte(THRESH_TAP,val);
 759              	 .loc 2 78 0
 760 000c FB1D     	 add r3,r7,#7
 761 000e 1B78     	 ldrb r3,[r3]
 762 0010 1D20     	 mov r0,#29
 763 0012 191C     	 mov r1,r3
 764 0014 FFF7FEFF 	 bl WriteRegister_SingleByte
  79:../ADXL345.c  **** }
 765              	 .loc 2 79 0
 766 0018 BD46     	 mov sp,r7
 767 001a 02B0     	 add sp,sp,#8
 768              	 
 769 001c 80BD     	 pop {r7,pc}
 770              	 .cfi_endproc
 771              	.LFE259:
 773 001e C046     	 .text
 774              	.Letext0:
 775              	 .file 3 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 776              	 .file 4 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 777              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_gpio.h"
 778              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc1_gpio.h"
 779              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_usic.h"
 780              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_spi.h"
 781              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Include/cmsis_gcc.h"
 782              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 783              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Dave/Generated/SPI_MASTER/spi_master_extern.h"
 784              	 .file 12 "../ADXL345.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ADXL345.c
    {standard input}:18     .text.SPI_MASTER_EnableSlaveSelectSignal:00000000 $t
    {standard input}:22     .text.SPI_MASTER_EnableSlaveSelectSignal:00000000 SPI_MASTER_EnableSlaveSelectSignal
    {standard input}:65     .text.SPI_MASTER_DisableSlaveSelectSignal:00000000 $t
    {standard input}:69     .text.SPI_MASTER_DisableSlaveSelectSignal:00000000 SPI_MASTER_DisableSlaveSelectSignal
                            *COM*:00000020 ADXL345_DataSent
                            *COM*:00000020 ADXL345_DataRead
    {standard input}:101    .text.Init_ADXL345:00000000 $t
    {standard input}:106    .text.Init_ADXL345:00000000 Init_ADXL345
    {standard input}:140    .text.Set_DataFormat:00000000 Set_DataFormat
    {standard input}:178    .text.Set_FIFO_CTR:00000000 Set_FIFO_CTR
    {standard input}:216    .text.PowerOn:00000000 PowerOn
    {standard input}:135    .text.Set_DataFormat:00000000 $t
    {standard input}:434    .text.WriteRegister_SingleByte:00000000 WriteRegister_SingleByte
    {standard input}:173    .text.Set_FIFO_CTR:00000000 $t
    {standard input}:211    .text.PowerOn:00000000 $t
    {standard input}:240    .text.PowerOff:00000000 $t
    {standard input}:245    .text.PowerOff:00000000 PowerOff
    {standard input}:269    .text.GetdeviceID:00000000 $t
    {standard input}:274    .text.GetdeviceID:00000000 GetdeviceID
    {standard input}:361    .text.ReadRegister_SingleByte:00000000 ReadRegister_SingleByte
    {standard input}:299    .text.Get_AxisReadings:00000000 $t
    {standard input}:304    .text.Get_AxisReadings:00000000 Get_AxisReadings
    {standard input}:349    .text.Get_AxisReadings:00000038 $d
    {standard input}:356    .text.ReadRegister_SingleByte:00000000 $t
    {standard input}:422    .text.ReadRegister_SingleByte:00000054 $d
    {standard input}:429    .text.WriteRegister_SingleByte:00000000 $t
    {standard input}:495    .text.WriteRegister_SingleByte:00000054 $d
    {standard input}:502    .text.Set_DUR:00000000 $t
    {standard input}:507    .text.Set_DUR:00000000 Set_DUR
    {standard input}:540    .text.Set_Latent:00000000 $t
    {standard input}:545    .text.Set_Latent:00000000 Set_Latent
    {standard input}:578    .text.Set_Window:00000000 $t
    {standard input}:583    .text.Set_Window:00000000 Set_Window
    {standard input}:616    .text.Set_ThreshACT:00000000 $t
    {standard input}:621    .text.Set_ThreshACT:00000000 Set_ThreshACT
    {standard input}:654    .text.Set_ThreshINACT:00000000 $t
    {standard input}:659    .text.Set_ThreshINACT:00000000 Set_ThreshINACT
    {standard input}:692    .text.Set_OutputDataRate:00000000 $t
    {standard input}:697    .text.Set_OutputDataRate:00000000 Set_OutputDataRate
    {standard input}:736    .text.Set_ThreshTap:00000000 $t
    {standard input}:741    .text.Set_ThreshTap:00000000 Set_ThreshTap
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SPI_CH_EnableSlaveSelect
XMC_SPI_CH_DisableSlaveSelect
SPI_MASTER_Transfer
SPI_MASTER_1
