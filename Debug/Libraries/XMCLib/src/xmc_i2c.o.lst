   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_i2c.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_USIC_CH_GetTransmitBufferStatus:
  23              	.LFB67:
  24              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2020-12-05
   4:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  47:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  50:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  52:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  54:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  56:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  57:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  58:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  59:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  60:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  62:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  63:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  64:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  65:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  68:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  69:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  70:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  71:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  72:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  73:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  74:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  75:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  76:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  77:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  79:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  80:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  82:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  83:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  84:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  86:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  87:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  88:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  89:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  90:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  92:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  93:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  95:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  96:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-09-30:
  98:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_InvalidateReadData(), XMC_USIC_CH_EnableWordLengthControl() and XMC_USIC
  99:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-12-05:
 101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_PutDataEx()
 102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-04-30:
 104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_SetTriggerLimit()
 105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-12-05:
 107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S to XMC_USIC_CH_BRG_CLOCK_SOURCE_t
 108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CTQSEL_t
 109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
 110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
 112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
 116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
 117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc1_usic_map.h"
 186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc4_usic_map.h"
 190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 355:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 356:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 357:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 358:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 359:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 360:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 361:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 362:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 363:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 364:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 365:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 367:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 368:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 369:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 370:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 371:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 372:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 373:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 374:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 375:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 376:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 377:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 378:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 379:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 380:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 381:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 382:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 383:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 384:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 385:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 386:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 387:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 388:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 389:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 390:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 393:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 395:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 397:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 398:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 399:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 402:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 404:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 406:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 407:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 408:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 409:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 410:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 411:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 412:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 413:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 414:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 415:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 416:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 417:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 418:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 421:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 423:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 425:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 426:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 427:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 428:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 431:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 433:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 435:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos,  /**< Baudrate generator 
 436:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S    = 0x3UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 437:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 438:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 439:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 440:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel input selection for CTQ
 441:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 442:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CTQSEL
 443:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 444:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PDIV = 0x0UL, /**< fCTQIN = fPDIV */
 445:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PPP  = 0x1UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fPPP */
 446:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_SCLK = 0x2UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fSCLK */
 447:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_MCLK = 0x3UL << USIC_CH_BRG_CTQSEL_Pos  /**< fCTQIN = fMCLK */
 448:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CTQSEL_t;
 449:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 450:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 451:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 452:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 453:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 454:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 455:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 456:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 457:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 458:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 459:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 460:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 462:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 463:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 464:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 465:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 466:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 467:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 468:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 469:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 471:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 472:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 473:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 474:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 475:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 476:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 477:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 478:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 479:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 480:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 483:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 484:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 485:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 487:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 488:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 489:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 490:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 491:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 492:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 493:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 494:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 495:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 496:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 497:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 498:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 499:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 500:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 501:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 502:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 503:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 504:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 505:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 506:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 507:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma push
 508:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma anon_unions
 509:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 510:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning 586
 511:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 512:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 514:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 515:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 516:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 517:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 518:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 519:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file,
 520:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 521:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 522:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 523:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 524:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 525:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 526:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 527:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 528:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 529:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 530:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 531:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 532:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 533:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 534:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 535:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 536:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 537:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   union
 539:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   {
 540:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 541:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 542:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 543:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 544:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 545:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   };
 546:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 547:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 548:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   union
 550:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   {
 551:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 552:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 553:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 554:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 555:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 556:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   };
 557:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 558:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 559:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 560:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 561:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 562:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 563:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 564:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 565:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 566:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 567:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 568:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 569:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 570:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 571:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 572:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 573:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 574:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 575:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 576:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 577:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 578:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 579:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 582:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 583:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma pop
 584:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 585:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning restore
 586:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 587:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 588:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 589:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 590:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 591:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 593:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 594:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 595:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 596:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 597:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 598:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 599:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 600:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 601:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 602:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 603:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 604:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 605:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 606:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 607:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 608:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 609:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 610:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 611:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 612:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 613:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 614:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 615:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 616:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 617:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 618:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 619:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 620:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 621:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 622:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 624:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 625:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 626:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 627:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 628:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 629:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 630:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 631:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 632:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 634:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 635:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 636:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 637:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 639:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 640:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 641:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 642:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 643:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 644:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 645:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 646:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 647:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 648:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 649:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 650:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 651:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 652:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 654:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 655:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 656:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 657:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 658:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 659:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 660:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 661:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 662:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 663:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 664:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 665:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 666:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 667:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 668:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 669:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 670:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 674:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 675:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 676:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 677:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 678:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 679:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 680:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 681:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 682:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 683:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 684:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 685:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 686:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 687:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 688:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 689:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 690:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 691:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 692:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 693:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 694:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 695:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 698:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 699:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 700:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 701:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 703:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 704:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 706:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 707:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 708:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 709:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 710:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 711:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 712:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 713:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 714:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 715:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 716:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 717:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 719:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 720:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 721:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 722:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 723:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 726:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 728:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 732:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clksel Baudrate generator clock source.
 733:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pppen Enable 2:1 Divider for fPPP.
 734:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Divider Factor to generate fPDIV = fPPP / (pDIV + 1)
 735:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  ctqsel Input selection for CTQ.
 736:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pctq Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1)
 737:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  dctq Denominator for Time Quanta Counter. fTQ / (DCTQ + 1)
 738:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 739:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 741:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate generator of the USIC channel.
 742:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFractionalDivider() \n\n\n
 745:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 747:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 748:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     bool pppen,
 749:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pdiv,
 750:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 751:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pctq,
 752:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t dctq);
 753:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 757:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 758:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 759:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 760:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 761:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 762:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 763:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 765:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 766:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 767:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 768:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 769:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 770:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 771:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 772:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 773:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 774:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 775:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 776:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 777:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 778:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 780:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 781:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 783:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 784:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 785:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 786:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 787:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 788:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 789:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 790:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 791:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 792:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 793:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 795:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 796:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 797:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 798:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 799:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 800:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 801:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 802:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 803:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 804:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 805:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 806:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 807:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 808:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 809:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 813:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 814:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 815:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 816:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 817:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 818:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 819:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t pdiv,
 820:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t oversampling,
 821:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 822:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 823:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 824:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 825:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 826:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 827:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 828:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 829:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 830:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 831:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 832:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 833:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 834:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 835:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 836:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 837:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc.
 838:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 839:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 841:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 842:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 843:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 844:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 845:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 846:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 847:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 848:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 849:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 850:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 851:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 852:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 853:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 854:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 856:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 857:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 858:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 859:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 860:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 861:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 862:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 863:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 864:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_INSW_Msk;
 865:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 866:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 867:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 868:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 869:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 870:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 871:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 872:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 876:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 877:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 878:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 879:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 880:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 881:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 882:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 883:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 884:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 885:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 886:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 887:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 888:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 889:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 890:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 891:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 892:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 893:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 894:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 895:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 896:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 897:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 898:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 899:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 900:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 901:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 902:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 903:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 904:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 905:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 906:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 907:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 908:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 909:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 910:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 911:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 912:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 913:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 914:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 915:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 916:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 917:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 918:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 919:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 920:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 921:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 922:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 923:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 924:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 925:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 926:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 927:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 928:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 929:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 930:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 931:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 932:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 933:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 934:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 935:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 936:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 937:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 938:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 939:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 940:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 941:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 942:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 943:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 944:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 945:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 946:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 947:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 948:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 949:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 950:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 951:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 953:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 954:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 955:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 956:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 957:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &= (uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 958:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 959:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 960:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 961:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 962:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 963:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 964:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 965:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 966:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 968:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 969:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 970:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 973:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 975:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 977:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 979:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 980:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 981:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 982:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 983:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 984:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 985:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 986:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 987:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 988:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 991:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 993:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 994:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 995:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 997:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 998:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 999:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1000:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1001:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1002:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1003:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1004:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
1005:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
1006:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
1007:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
1010:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
1012:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1013:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DSEN_Msk;
1014:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1016:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1017:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1018:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1019:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1020:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
1024:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
1025:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1026:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1027:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
1028:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1029:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
1030:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1031:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DSEN_Msk;
1032:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1033:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1037:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1038:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
1039:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1040:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1041:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1042:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
1043:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1045:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1046:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1047:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
1048:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1049:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)
1050:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1051:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
1052:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
1053:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1058:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1059:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1060:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1061:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1062:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1064:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1065:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1068:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1070:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1071:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
1072:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1073:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1074:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1075:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1076:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1081:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1082:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1083:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1084:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1085:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1086:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1087:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1088:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1089:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1090:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1091:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1092:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1093:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1098:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1099:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t transmit_control_information)
1133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value
1183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly.
1225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
1273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
  25              	 .loc 1 1318 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
1319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
  39              	 .loc 1 1319 0
  40 0008 7B68     	 ldr r3,[r7,#4]
  41 000a 9B6B     	 ldr r3,[r3,#56]
  42 000c DBB2     	 uxtb r3,r3
  43 000e 7F22     	 mov r2,#127
  44 0010 9343     	 bic r3,r2
  45 0012 DBB2     	 uxtb r3,r3
1320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
  46              	 .loc 1 1320 0
  47 0014 181C     	 mov r0,r3
  48 0016 BD46     	 mov sp,r7
  49 0018 02B0     	 add sp,sp,#8
  50              	 
  51 001a 80BD     	 pop {r7,pc}
  52              	 .cfi_endproc
  53              	.LFE67:
  55              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
  56              	 .align 2
  57              	 .code 16
  58              	 .thumb_func
  60              	XMC_USIC_CH_SetMode:
  61              	.LFB108:
1321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte.
1335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1355:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1356:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1357:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1358:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1359:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1360:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1361:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1362:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1363:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1364:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1365:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_START_TRANSMISION_MODE_t start_transmision_mode)
1366:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1367:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1368:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1369:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1370:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1372:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1373:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1374:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1375:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1376:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1380:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1381:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1382:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1383:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1384:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1385:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1386:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output_mode)
1387:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1388:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1389:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1390:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1391:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1392:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1393:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1394:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1395:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1396:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1397:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1398:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the
1399:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1400:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1401:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1402:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1403:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1404:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1405:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1406:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1407:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1408:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1409:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1410:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1411:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1412:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1413:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1414:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1415:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1416:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1417:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1418:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1419:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1420:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1421:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of word length. \n\n
1422:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of word length is enabled, word length is configured based on the
1423:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], word length is con
1424:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1425:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1426:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1428:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1429:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1430:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableWordLengthControl(XMC_USIC_CH_t *const channel)
1431:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1432:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1433:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1434:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1435:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1436:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_WLEMD_Msk;
1437:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1438:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1439:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1440:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1441:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1442:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1443:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1444:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1445:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1446:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1447:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1448:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1449:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1450:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1451:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1452:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1453:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1454:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1455:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1456:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1457:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1458:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1459:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1460:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1461:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1462:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1463:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of word length. \n\n
1464:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of word length is disabled, word length has to configured explicitly.
1465:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Word length remains fixed until it is changed again.
1466:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1467:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1468:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetWordLength() \n\n\n
1469:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1470:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableWordLengthControl(XMC_USIC_CH_t *const channel)
1471:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1472:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_WLEMD_Msk;
1473:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1474:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1475:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1476:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1477:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1478:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1479:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1480:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1481:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1482:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1483:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1484:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1485:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1486:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1487:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1488:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1489:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1490:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1491:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1492:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1493:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1494:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1495:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1496:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1497:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1498:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1499:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1500:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1501:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1502:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1503:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1504:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1505:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1506:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1507:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1508:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1509:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1510:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1511:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1512:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1513:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1514:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1515:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1516:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1517:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1518:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1519:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be
1520:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled.
1521:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1522:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1524:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1526:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1527:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1528:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1529:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1534:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1535:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1536:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1537:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1538:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1539:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1540:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1541:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1542:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1543:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1544:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buffer_status)
1545:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1546:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1547:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1548:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1553:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1554:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1557:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1560:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_InvalidateReadData(XMC_USIC_CH_t *const channel)
1562:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = USIC_CH_FMR_CRDV0_Msk | USIC_CH_FMR_CRDV1_Msk;
1564:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1567:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1568:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1569:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1570:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1571:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1572:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1573:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1574:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1575:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1576:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the
1577:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1578:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1579:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1580:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1581:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1582:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1583:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive_level)
1584:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1586:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1587:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1588:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1589:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1590:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1591:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1592:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1593:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1594:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1595:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1596:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1597:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1598:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1599:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1603:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1604:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1605:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1606:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1607:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1608:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1609:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1610:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1611:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1612:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1613:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1614:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1615:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1616:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1617:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1618:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1619:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1620:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1621:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1622:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1623:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1624:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1625:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() }
1627:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1628:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1629:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1630:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the
1631:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1632:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1633:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1634:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1635:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1636:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1637:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1638:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
1639:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1640:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1641:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1642:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1643:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1644:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1645:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
1646:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1647:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1648:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1649:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
1650:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1651:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1652:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1653:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1654:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
1655:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
1656:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1657:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR = (channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) | ((limit << USIC_CH_TBCTR
1658:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1659:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1660:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1661:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1666:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1667:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1668:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1669:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1670:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1671:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
1672:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1673:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1674:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1675:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1676:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1677:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1678:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1679:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1680:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1681:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1682:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1683:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1684:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1685:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1686:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1687:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1688:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1689:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1690:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1691:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1692:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1693:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1694:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
1695:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent().
1696:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1697:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1698:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1699:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1700:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1701:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1702:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1703:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1704:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1705:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1706:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1710:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1711:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1712:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1713:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1714:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1715:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1716:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1717:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1718:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1719:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1720:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1721:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1722:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1723:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1724:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1725:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1726:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1727:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1728:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1729:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1730:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1731:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1732:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
1733:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1734:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1735:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1736:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1737:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1738:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1739:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1740:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1741:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1742:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1744:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1745:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1746:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1747:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1748:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1749:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1750:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1751:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1752:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1753:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1754:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1755:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1756:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1757:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1758:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1759:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1760:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param loc Input location. \n
1761:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1762:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1763:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1764:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit data can be loaded to TBUF by software by writing to the transmit buffer input
1765:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * locations TBUFx (x = 00-31), consisting of 32 consecutive addresses. The data written
1766:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * to one of these input locations is stored in the transmit buffer TBUF. Additionally, the
1767:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * address of the written location is evaluated and can be used for additional control
1768:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * purposes. This 5-bit wide information (named Transmit Control Information TCI) can be
1769:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * used for different purposes in different protocols.
1770:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableWordLengthControl() \n
1773:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1774:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1775:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataEx(XMC_USIC_CH_t *const channel, const uint16_t data
1776:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1777:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[loc] = data;
1778:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1779:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1780:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1781:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1782:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1783:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1784:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1785:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1786:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1787:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1788:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1789:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1790:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1791:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1792:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1793:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1794:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1795:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_PutDataEx() \n
1796:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1797:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1798:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1799:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1800:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1801:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1802:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1803:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1804:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1805:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1806:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1807:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1808:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1809:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1810:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1811:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1812:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1813:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1814:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1815:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1816:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1817:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1818:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1819:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1821:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1822:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1823:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1824:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1825:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1826:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1827:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1828:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1829:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1830:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1831:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1832:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1833:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1834:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1835:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1836:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1837:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1839:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1840:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1841:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1842:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1843:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1844:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1845:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1846:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1847:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1848:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1849:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1850:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1851:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1852:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1853:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1854:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1855:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1856:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1857:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1858:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1859:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1860:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1861:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1862:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1863:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1864:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1865:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1866:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1867:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1868:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1869:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1870:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1872:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1873:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1874:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO,
1875:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1876:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1877:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1878:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1879:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1880:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1881:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1882:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1883:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1884:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1885:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1886:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1887:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1888:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n
1889:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1890:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1891:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1892:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1893:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1894:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1895:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1896:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1897:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1898:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1899:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1900:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1901:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1902:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1903:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1904:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1905:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1906:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1907:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1908:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1909:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1910:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1911:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1912:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1913:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1914:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1915:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1916:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1917:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1918:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1919:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1920:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1921:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1922:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1923:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1924:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_TBERI_Msk));
1925:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1926:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1927:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1928:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1929:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1930:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1931:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1932:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1933:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1934:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1935:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1936:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1937:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
1938:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1939:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
1940:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1941:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1942:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1943:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1944:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1945:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1946:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
1947:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1948:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1949:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1950:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1951:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1952:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1953:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1954:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1955:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1956:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1957:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1958:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1959:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1960:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1961:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1962:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1963:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1964:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1965:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1966:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1967:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1968:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1969:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1970:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1971:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1972:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
1973:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1974:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1975:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1976:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1977:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1978:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1979:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1980:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1981:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1982:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1983:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1984:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1985:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1986:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1987:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_RXFIFO_SetTriggerLimit() }
1988:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1989:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1990:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1991:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the
1992:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1993:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1994:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1995:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1996:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1997:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1998:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1999:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
2000:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2001:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2002:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2003:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2004:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
2005:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
2006:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2007:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2008:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2009:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
2010:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2011:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2012:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() \n\n\n
2013:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2014:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
2015:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
2016:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2017:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR = (channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) | ((limit << USIC_CH_RBCTR
2018:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2019:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2020:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2021:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2022:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2023:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
2024:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2025:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2026:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2027:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
2028:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
2029:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
2030:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
2031:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2032:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
2033:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
2034:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2035:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2036:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
2037:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2038:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
2039:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2040:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
2041:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2042:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2043:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2044:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2045:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2046:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2047:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
2048:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
2049:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
2050:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2051:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2052:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2053:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
2054:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
2055:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent().
2056:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
2057:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
2058:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2059:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2060:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2061:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2062:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
2063:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2064:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
2065:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2066:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2067:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2068:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2069:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2070:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
2071:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
2072:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
2073:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
2074:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
2075:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2076:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2077:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2078:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
2079:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
2080:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
2081:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
2082:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
2083:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
2084:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
2085:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2086:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
2087:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2088:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2089:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2090:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2091:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
2092:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
2093:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
2094:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2095:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2096:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2097:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2098:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
2099:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
2100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
2103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
2104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
2105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
2106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
2107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
2110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
2112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
2114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
2123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
2124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
2127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
2129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
2131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
2137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
2138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
2141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
2142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
2143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
2146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
2148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
2150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
2156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
2157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
2160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
2161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
2162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
2163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
2168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
2170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
2176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
2177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
2180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
2181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the
2182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
2183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
2188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
2190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
2196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
2201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
2202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
2203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
2204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
2205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
2207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
2210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
2212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
2214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_RBERI_Msk |
2215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_ARBI_Msk));
2216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
2222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
2228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
2229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
2230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
2231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
2232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
2233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
2236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
2238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
2239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
2241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
2250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
2251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
2254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
2256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
2258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
2267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
2268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
2271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
2273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
2275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
2281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
2282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
2286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
2288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t passive_level)
2289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
2291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
2296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
2297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
2298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
2299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
2300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
2301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
2302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
2303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
2307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
2308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
2309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
2310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
2311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
2312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
2315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t passive_level,
2316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t clock_output)
2317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
2318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
2319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                             USIC_CH_BRG_SCLKOSEL_Msk))) |
2320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
2321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
2322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
2323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
2324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
2325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
2328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
2329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
2330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
2331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
2335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
2336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
2338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
2341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
  62              	 .loc 1 2342 0
  63              	 .cfi_startproc
  64 0000 80B5     	 push {r7,lr}
  65              	.LCFI3:
  66              	 .cfi_def_cfa_offset 8
  67              	 .cfi_offset 7,-8
  68              	 .cfi_offset 14,-4
  69 0002 82B0     	 sub sp,sp,#8
  70              	.LCFI4:
  71              	 .cfi_def_cfa_offset 16
  72 0004 00AF     	 add r7,sp,#0
  73              	.LCFI5:
  74              	 .cfi_def_cfa_register 7
  75 0006 7860     	 str r0,[r7,#4]
  76 0008 0A1C     	 mov r2,r1
  77 000a FB1C     	 add r3,r7,#3
  78 000c 1A70     	 strb r2,[r3]
2343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
  79              	 .loc 1 2343 0
  80 000e 7B68     	 ldr r3,[r7,#4]
  81 0010 1B6C     	 ldr r3,[r3,#64]
  82 0012 0F22     	 mov r2,#15
  83 0014 9343     	 bic r3,r2
  84 0016 1A1C     	 mov r2,r3
  85 0018 FB1C     	 add r3,r7,#3
  86 001a 1B78     	 ldrb r3,[r3]
  87 001c 1A43     	 orr r2,r3
  88 001e 7B68     	 ldr r3,[r7,#4]
  89 0020 1A64     	 str r2,[r3,#64]
2344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
  90              	 .loc 1 2344 0
  91 0022 BD46     	 mov sp,r7
  92 0024 02B0     	 add sp,sp,#8
  93              	 
  94 0026 80BD     	 pop {r7,pc}
  95              	 .cfi_endproc
  96              	.LFE108:
  98              	 .section .text.XMC_I2C_CH_ClearStatusFlag,"ax",%progbits
  99              	 .align 2
 100              	 .code 16
 101              	 .thumb_func
 103              	XMC_I2C_CH_ClearStatusFlag:
 104              	.LFB117:
 105              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_i2c.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @file xmc_i2c.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @date 2020-12-05
   4:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Initial <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  47:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-05-20:
  48:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Description updated <br>
  49:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_TriggerServiceRequest() and XMC_I2C_CH_SelectInterruptNodePointer() <br>
  50:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-06-20:
  52:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  54:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-08-27:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalTo
  56:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  57:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-09-01:
  58:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_
  59:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *       XMC_I2C_CH_DisableSlaveAcknowledgeTo00(). <br>
  60:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting. 
  61:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_Di
  62:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *       for supporting multiple events configuration <br>
  63:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  64:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-02:
  65:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix 10bit addressing
  66:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  67:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-07:
  68:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix register access in XMC_I2C_CH_EnableSlaveAcknowledgeTo00() and XMC_I2C_CH_DisableSlave
  69:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Naming of APIs modified: from XMC_I2C_CH_EnableSlaveAcknowledgeTo00() to  XMC_I2C_CH_Enabl
  70:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *       and from XMC_I2C_CH_DisableSlaveAcknowledgeTo00() to XMC_I2C_CH_DisableAcknowledgeAddress0
  71:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  72:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-05-20:
  73:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableDataTransmission() and XMC_I2C_CH_DisableDataTransmission()
  74:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  75:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-08-17:
  76:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Improved documentation of slave address passing
  77:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  78:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2017-10-25:
  79:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableMasterClock() and XMC_I2C_CH_DisableMasterClock()
  80:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-05-07:
  82:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added normal_divider_mode to XMC_I2C_CH_CONFIG_t configuration structure.
  83:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  84:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetBaudrateEx()
  85:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  86:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-12-10:
  87:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetHoldDelay()
  88:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  89:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2020-12-05:
  90:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *    - Added XMC_I2C_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  91:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  92:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @endcond
  93:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  94:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  95:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
  96:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #ifndef XMC_I2C_H
  97:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_H
  98:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * HEADER FILES
 101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #include "xmc_usic.h"
 104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup XMClib XMC Peripheral Library
 107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup I2C
 112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief Inter Integrated Circuit(IIC) driver for the XMC microcontroller family.
 113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * USIC IIC Features: <br>
 115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *  * Two-wire interface, with one line for shift clock transfer and synchronization (shift clock S
 116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Communication in standard mode (100 kBit/s) or in fast mode (up to 400 kBit/s) <br>
 117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Support of 7-bit addressing, as well as 10-bit addressing <br>
 118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Master mode operation, where the IIC controls the bus transactions and provides the clock sign
 119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Slave mode operation, where an external master controls the bus transactions and provides the 
 120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Multi-master mode operation, where several masters can be connected to the bus and bus arbitra
 121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 	  The master/slave operation of an IIC bus participant can change from frame to frame. <br>
 122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Efficient frame handling (low software effort), also allowing DMA transfers <br>
 123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Powerful interrupt handling due to multitude of indication flags <br>
 124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * MACROS
 129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC0)
 132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC1)
 137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC2)
 142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_10BIT_ADDR_GROUP       (0x7800U)	 /**< Value to verify the address is 10-bit or not
 147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * ENUMS
 150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C Status
 154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS
 156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_OK,      /**< Status OK */
 158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_ERROR,   /**< Status ERROR */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_BUSY     /**< Status BUSY */
 160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_t;
 161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C status
 164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS_FLAG
 166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_SELECT = USIC_CH_PSR_IICMode_SLSEL_Msk,                     /**< Sla
 168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND = USIC_CH_PSR_IICMode_WTDF_Msk,              /**< Wro
 169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_SCR_Msk,           /**< Sta
 170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_RSCR_Msk, /**< Rep
 171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_PCR_Msk,            /**< Sto
 172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED = USIC_CH_PSR_IICMode_NACK_Msk,                     /**< NAC
 173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST = USIC_CH_PSR_IICMode_ARL_Msk,                   /**< Arb
 174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_READ_REQUESTED = USIC_CH_PSR_IICMode_SRR_Msk,               /**< Sla
 175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ERROR = USIC_CH_PSR_IICMode_ERR_Msk,                              /**< Err
 176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED = USIC_CH_PSR_IICMode_ACK_Msk,                       /**< ACK
 177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IICMode_RSIF_Msk,         /**< Rec
 178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IICMode_DLIF_Msk,              /**< Dat
 179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IICMode_TSIF_Msk,         /**< Tra
 180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IICMode_TBIF_Msk,        /**< Tra
 181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_RIF_Msk,                 /**< Rec
 182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_AIF_Msk,     /**< Alt
 183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IICMode_BRGIF_Msk    /**< Bau
 184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_FLAG_t;
 185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C receiver status. The received data byte is available at the bit
 188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * positions RBUF[7:0], whereas the additional information is monitored at the bit positions
 189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** *  RBUF[12:8].
 190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_RECEIVER_STATUS_FLAG
 192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ACK = 0x1U,      /**< Bit 8:  Value of Received Acknowledgement b
 194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_FIN = 0x2U,      /**< Bit 9:  A 1 at this bit position indicates 
 195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 followed by the address reception t
 196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 been received. A 0 at this bit posi
 197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_MODE = 0x4U,     /**< Bit 10: A 0 at this bit position indicates 
 198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 when the device has been in slave m
 199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ERR = 0x8U,      /**< Bit 11: A 1 at this bit position indicates 
 200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 data byte in the receive buffer */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ADR = 0x10       /**< Bit 12: A 0 at this bit position indicates 
 202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 has been received. A 1 indicates a 
 203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_RECEIVER_STATUS_FLAG_t;
 204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C commands
 207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_CMD
 209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_WRITE,                            /**< I2C Command Write */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_READ                              /**< I2C Command Read */
 212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CMD_t;
 213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C events
 216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_EVENT
 218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_SCRIEN_Msk,             /**< Star
 228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_RSCRIEN_Msk,   /**< Repe
 229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STOP_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_PCRIEN_Msk,              /**< Stop
 230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_NACK = USIC_CH_PCR_IICMode_NACKIEN_Msk,                                /**< NACK
 231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ARBITRATION_LOST = USIC_CH_PCR_IICMode_ARLIEN_Msk,                     /**< Arbi
 232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_SLAVE_READ_REQUEST = USIC_CH_PCR_IICMode_SRRIEN_Msk,                   /**< Slav
 233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ERROR = USIC_CH_PCR_IICMode_ERRIEN_Msk,	                              /**< Error
 234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ACK = USIC_CH_PCR_IICMode_ACKIEN_Msk                                   /**< ACK 
 235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_EVENT_t;
 236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C input stage selection
 239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INPUT
 241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA = 0U,   /**< selection of sda input stage */
 243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA1 = 3U,
 245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA2 = 5U,
 246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL = 1U,  /**< selection of scl input stage */
 248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL1 = 4U
 250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INPUT_t;
 252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * I2C channel interrupt node pointers
 255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INTERRUPT_NODE_POINTER
 257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INTERRUPT_NODE_POINTER_t;
 264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * DATA STRUCTURES
 267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C_CH configuration structure
 270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** typedef struct XMC_I2C_CH_CONFIG
 272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   uint32_t baudrate;   /**< baud rate configuration upto max of 400KHz */
 274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   bool normal_divider_mode; /**< Selects normal divider mode for baudrate generator instead of defa
 275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   uint16_t address;    /**< slave address
 276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 7-bit address needs to be left shifted it by 1.
 277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 10-bit address needs to be ORed with XMC_I2C_10BIT_ADDR_GROUP. */
 278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CONFIG_t;
 279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * API PROTOTYPES
 282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #ifdef __cplusplus
 285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** extern "C" {
 286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config, bool 
 306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const
 324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_InitEx(channel, config, true);
 326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** }
 327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 355:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 356:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 357:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 358:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 359:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 360:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 361:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 362:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 363:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 364:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 365:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 366:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 367:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 368:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 369:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C \a channel.
 370:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 371:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 372:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation mode to I2C mode using CCR register.
 373:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 374:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 375:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 376:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 377:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Start(XMC_USIC_CH_t *const channel)
 378:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 379:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2C);
 380:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** }
 381:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 382:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 383:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 384:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 385:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return @ref XMC_I2C_CH_STATUS_t<br>
 386:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 387:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 388:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C \a channel.<br>
 389:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 390:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 391:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation to IDLE mode using CCR register.
 392:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 393:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 394:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 395:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 396:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel);
 397:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 398:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 399:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 400:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number in the range of 0-5
 401:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 402:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 403:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 404:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for protocol interrupt.<br>
 405:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 406:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 407:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * To generate interrupt for an event, node pointer should be configured with service request numbe
 408:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 409:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 410:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 411:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * NVIC node should be separately enabled to generate the interrupt. After setting the node pointer
 412:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 413:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 414:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent(), NVIC_SetPriority(), NVIC_EnableIRQ(), XMC_I2C_CH_SetInputSource()<br>
 415:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 416:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 417:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****     const uint8_t service_request)
 418:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 419:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, service
 420:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** }
 421:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 422:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 423:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 424:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 425:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				  \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref XM
 426:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 427:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: @ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 428:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  			@ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 429:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number.\n
 430:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: 0 to 5.
 431:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 432:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 433:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 434:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for USIC channel events. \n\n
 435:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 436:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 437:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 438:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 439:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 440:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent() \n\n\n
 441:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 442:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 443:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****     const XMC_I2C_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 444:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****     const uint32_t service_request)
 445:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 446:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 447:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****                                       (uint32_t)service_request);
 448:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** }
 449:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 450:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 451:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 452:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				   \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref X
 453:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 454:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 			\b Range: 0 to 5.
 455:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 456:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 457:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 458:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Trigger a I2C interrupt service request.\n\n
 459:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * When the I2C service request is triggered, the NVIC interrupt associated with it will be
 460:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * generated if enabled.
 461:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 462:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 463:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SelectInterruptNodePointer() \n\n\n
 464:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 465:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t 
 466:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 467:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 468:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** }
 469:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 470:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 471:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 472:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param input I2C channel input stage of type @ref XMC_I2C_CH_INPUT_t
 473:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param source Input source select for the input stage(0->DX0A, 1->DX1A, .. 7->DX7G)
 474:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 475:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 476:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 477:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the input source for I2C \a channel.<br>
 478:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Defines the input stage for the corresponding input line.
 479:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 480:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note After configuring the input source for corresponding channel, interrupt node pointer is se
 481:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 482:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 483:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetInptSource(), XMC_USIC_CH_SetInterruptNodePointer()
 484:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 485:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 486:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_INPUT
 487:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 488:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->DXCR[input] =  (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_INSW_Msk)) | USIC_CH_DX
 489:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 490:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** }
 491:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 492:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 493:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 494:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param address I2C slave address
 495:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 496:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 497:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 498:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the I2C \a channel slave address.<br>
 499:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 500:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 501:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Address is set in PCR_IICMode register by checking if it is in 10-bit address group or 7-bit add
 502:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is 10-bit mode otherwis
 503:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address should include an additional bit at the LSB for read/write indication. For
 504:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. A 10-bit address should be provided with the identifier 0b11110xx at the mo
 505:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * address 0x305 should be provided as 0x7b05(bitwise OR with 0x7800).
 506:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 507:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 508:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetSlaveAddress()\n\n
 509:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 510:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address);
 511:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 512:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 513:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel handler of type @ref XMC_USIC_CH_t
 514:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint16_t Slave address<br>
 515:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 516:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 517:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the I2C \a channel slave address.<br>
 518:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 519:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 520:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Returns the address using PCR_IICMode register by checking if it is in 10-bit address group or 7
 521:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is considered as 10-bit
 522:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address will include an additional bit at the LSB. For example, address 0x05 will 
 523:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * 10-bit address will not include the 10-bit address identifier 0b11110xx at the most signifcant b
 524:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 525:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 526:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SetSlaveAddress()\n\n
 527:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 528:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel);
 529:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 530:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 531:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 532:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 533:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 534:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 535:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 536:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 537:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C master \a channel.<br>
 538:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 539:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 540:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Start condition with read/write command by updating IN/TBUF register based on FIFO/non
 541:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 542:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 543:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 544:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 545:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 546:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 547:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 548:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 549:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 550:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 551:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 552:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 553:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 554:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 555:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 556:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 557:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 558:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition from I2C master \a channel.<br>
 559:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 560:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 561:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition with read/write command by updating IN/TBUF register based on
 562:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 563:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 564:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 565:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 566:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 567:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 568:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 569:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 570:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 571:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 572:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 573:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 574:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 575:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 576:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 577:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C master \a channel.<br>
 578:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 579:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 580:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on F
 581:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 582:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 583:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 584:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 585:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel);
 586:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 587:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 588:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 589:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 590:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 591:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 592:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 593:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C master \a channel.<br>
 594:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 595:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 596:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 597:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 598:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 599:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 600:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 601:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 602:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 603:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 604:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 605:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 606:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 607:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 608:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 609:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C slave \a channel.<br>
 610:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 611:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 612:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 613:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 614:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 615:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(),XMC_I2C_CH_ClearStatusFlag()\n\n
 616:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 617:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 618:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 619:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 620:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 621:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 622:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 623:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 624:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Ack request from I2C master \a channel.<br>
 625:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 626:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 627:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FIF
 628:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 629:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 630:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 631:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 632:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel);
 633:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 634:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 635:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 636:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 637:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 638:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 639:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Nack request from I2C master \a channel.<br>
 640:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 641:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 642:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 643:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 644:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 645:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 646:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 647:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel);
 648:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 649:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 650:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 651:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t OUTR/RBUF register data<br>
 652:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 653:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 654:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the data from I2C \a channel.<br>
 655:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 656:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 657:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Data is read by using OUTR/RBUF register based on FIFO/non-FIFO modes.
 658:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 659:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 660:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 661:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 662:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel);
 663:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 664:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 665:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 666:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t Receiver status flag<br>
 667:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 668:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 669:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the receiver status of I2C \a channel using RBUF register of bits 8-12 which gives informat
 670:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 671:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 672:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 673:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 674:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint8_t XMC_I2C_CH_GetReceiverStatusFlag(XMC_USIC_CH_t *const channel)
 675:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 676:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   return ((uint8_t)((channel->RBUF) >> 8U));
 677:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** }
 678:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 679:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 680:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 681:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 682:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 683:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 684:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 685:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Enables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 686:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 687:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 688:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_DisableEvent()\n\n
 689:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 690:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 691:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 692:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 693:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 694:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 695:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 696:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 697:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 698:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Disables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 699:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 700:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 701:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent()\n\n
 702:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 703:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 704:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 705:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 706:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 707:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint32_t Status byte<br>
 708:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 709:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 710:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Retrieves the status byte of I2C \a channel using PSR_IICMode register.\n
 711:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 712:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 713:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_ClearStatusFlag()\n\n
 714:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 715:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint32_t XMC_I2C_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 716:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 717:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   return (channel->PSR_IICMode);
 718:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** }
 719:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** 
 720:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 721:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 722:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param flag Status flag
 723:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 724:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 725:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 726:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * Clears the status flag of I2C \a channel by setting the input parameter \a flag in PSCR register
 727:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 728:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 729:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetStatusFlag()\n\n
 730:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 731:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, uint32_t flag)
 732:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** {
 106              	 .loc 2 732 0
 107              	 .cfi_startproc
 108 0000 80B5     	 push {r7,lr}
 109              	.LCFI6:
 110              	 .cfi_def_cfa_offset 8
 111              	 .cfi_offset 7,-8
 112              	 .cfi_offset 14,-4
 113 0002 82B0     	 sub sp,sp,#8
 114              	.LCFI7:
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	.LCFI8:
 118              	 .cfi_def_cfa_register 7
 119 0006 7860     	 str r0,[r7,#4]
 120 0008 3960     	 str r1,[r7]
 733:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->PSCR |= flag;
 121              	 .loc 2 733 0
 122 000a 7B68     	 ldr r3,[r7,#4]
 123 000c DA6C     	 ldr r2,[r3,#76]
 124 000e 3B68     	 ldr r3,[r7]
 125 0010 1A43     	 orr r2,r3
 126 0012 7B68     	 ldr r3,[r7,#4]
 127 0014 DA64     	 str r2,[r3,#76]
 734:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_i2c.h **** }
 128              	 .loc 2 734 0
 129 0016 BD46     	 mov sp,r7
 130 0018 02B0     	 add sp,sp,#8
 131              	 
 132 001a 80BD     	 pop {r7,pc}
 133              	 .cfi_endproc
 134              	.LFE117:
 136              	 .section .text.XMC_I2C_CH_InitEx,"ax",%progbits
 137              	 .align 2
 138              	 .global XMC_I2C_CH_InitEx
 139              	 .code 16
 140              	 .thumb_func
 142              	XMC_I2C_CH_InitEx:
 143              	.LFB126:
 144              	 .file 3 "../Libraries/XMCLib/src/xmc_i2c.c"
   1:../Libraries/XMCLib/src/xmc_i2c.c **** /**
   2:../Libraries/XMCLib/src/xmc_i2c.c ****  * @file xmc_i2c.c
   3:../Libraries/XMCLib/src/xmc_i2c.c ****  * @date 2020-12-05
   4:../Libraries/XMCLib/src/xmc_i2c.c ****  *
   5:../Libraries/XMCLib/src/xmc_i2c.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_i2c.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_i2c.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_i2c.c ****  *
   9:../Libraries/XMCLib/src/xmc_i2c.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_i2c.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  12:../Libraries/XMCLib/src/xmc_i2c.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  14:../Libraries/XMCLib/src/xmc_i2c.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_i2c.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_i2c.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_i2c.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_i2c.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_i2c.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  21:../Libraries/XMCLib/src/xmc_i2c.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_i2c.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_i2c.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_i2c.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_i2c.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_i2c.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  28:../Libraries/XMCLib/src/xmc_i2c.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_i2c.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_i2c.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_i2c.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_i2c.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_i2c.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_i2c.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  36:../Libraries/XMCLib/src/xmc_i2c.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_i2c.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_i2c.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_i2c.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  41:../Libraries/XMCLib/src/xmc_i2c.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_i2c.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  44:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  47:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-05-20:
  48:../Libraries/XMCLib/src/xmc_i2c.c ****        - Modified XMC_I2C_CH_Stop() API for not setting to IDLE the channel if it is busy <br>
  49:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  50:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-06-20:
  51:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Removed GetDriverVersion API <br>
  52:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  53:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-08-14:
  54:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - updated the XMC_I2C_CH_SetBaudrate API to support dynamic change from 400K to low frequenc
  55:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  56:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-09-01:
  57:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Modified XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_DisableEvent() for supporting multiple ev
  58:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  59:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-10-02:
  60:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Fixed 10bit addressing
  61:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  62:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2019-05-07:
  63:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Added XMC_I2C_CH_SetBaudrateEx() which allows to select between baudrate generator normal 
  64:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  65:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2019-07-12:
  66:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Fixed wrong oversampling setting in case of baudrate greater than 100Kbaud/s
  67:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  68:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2019-12-16:
  69:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  70:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  71:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2020-09-02:
  72:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Fixed XMC_I2C_CH_SetSlaveAddress
  73:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  74:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2020-12-05:
  75:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Added XMC_I2C_CH_InitEx that allows user select if automatic baudrate configuration should
  76:../Libraries/XMCLib/src/xmc_i2c.c ****  * 
  77:../Libraries/XMCLib/src/xmc_i2c.c ****  * @endcond
  78:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  79:../Libraries/XMCLib/src/xmc_i2c.c ****  */
  80:../Libraries/XMCLib/src/xmc_i2c.c **** 
  81:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  82:../Libraries/XMCLib/src/xmc_i2c.c ****  * HEADER FILES
  83:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_i2c.c **** #include "xmc_i2c.h"
  85:../Libraries/XMCLib/src/xmc_i2c.c **** 
  86:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  87:../Libraries/XMCLib/src/xmc_i2c.c ****  * MACROS
  88:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  89:../Libraries/XMCLib/src/xmc_i2c.c **** #define XMC_I2C_7BIT_ADDR_Pos   (8U)		/**< 7-bit address position */
  90:../Libraries/XMCLib/src/xmc_i2c.c **** #define TRANSMISSION_MODE       (3U)		/**< The shift control signal is considered active
  91:../Libraries/XMCLib/src/xmc_i2c.c ****                                                  without referring to the actual signal level. Data
  92:../Libraries/XMCLib/src/xmc_i2c.c ****                                                  frame transfer is possible after each edge of the 
  93:../Libraries/XMCLib/src/xmc_i2c.c **** #define WORDLENGTH              (7U)        /**< Word length */
  94:../Libraries/XMCLib/src/xmc_i2c.c **** #define SET_TDV                 (1U)		/**< Transmission data valid */
  95:../Libraries/XMCLib/src/xmc_i2c.c **** #define XMC_I2C_10BIT_ADDR_MASK (0x7C00U)   /**< Address mask for 10-bit mode */
  96:../Libraries/XMCLib/src/xmc_i2c.c **** 
  97:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  98:../Libraries/XMCLib/src/xmc_i2c.c ****  * ENUMS
  99:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
 100:../Libraries/XMCLib/src/xmc_i2c.c **** 
 101:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_TDF
 102:../Libraries/XMCLib/src/xmc_i2c.c **** {
 103:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_SEND =         0U,
 104:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_SLAVE_SEND =          (uint32_t)1U << 8U,
 105:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK =  (uint32_t)2U << 8U,
 106:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK = (uint32_t)3U << 8U,
 107:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_START =        (uint32_t)4U << 8U,
 108:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RESTART =      (uint32_t)5U << 8U,
 109:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_STOP =         (uint32_t)6U << 8U
 110:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_TDF_t;
 111:../Libraries/XMCLib/src/xmc_i2c.c **** 
 112:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_MAX_SPEED
 113:../Libraries/XMCLib/src/xmc_i2c.c **** {
 114:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_MAX_SPEED_STANDARD = 100000U,
 115:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_MAX_SPEED_FAST = 400000U
 116:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_MAX_SPEED_t;
 117:../Libraries/XMCLib/src/xmc_i2c.c **** 
 118:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_CLOCK_OVERSAMPLING
 119:../Libraries/XMCLib/src/xmc_i2c.c **** {
 120:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_CLOCK_OVERSAMPLING_STANDARD = 10U,
 121:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_CLOCK_OVERSAMPLING_FAST     = 25U
 122:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_CLOCK_OVERSAMPLINGS_t;
 123:../Libraries/XMCLib/src/xmc_i2c.c **** 
 124:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
 125:../Libraries/XMCLib/src/xmc_i2c.c ****  * API IMPLEMENTATION
 126:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
 127:../Libraries/XMCLib/src/xmc_i2c.c **** /* Initializes the USIC channel by setting the data format, slave address, baudrate, transfer buffe
 128:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config, bool 
 129:../Libraries/XMCLib/src/xmc_i2c.c **** {
 145              	 .loc 3 129 0
 146              	 .cfi_startproc
 147 0000 80B5     	 push {r7,lr}
 148              	.LCFI9:
 149              	 .cfi_def_cfa_offset 8
 150              	 .cfi_offset 7,-8
 151              	 .cfi_offset 14,-4
 152 0002 84B0     	 sub sp,sp,#16
 153              	.LCFI10:
 154              	 .cfi_def_cfa_offset 24
 155 0004 00AF     	 add r7,sp,#0
 156              	.LCFI11:
 157              	 .cfi_def_cfa_register 7
 158 0006 F860     	 str r0,[r7,#12]
 159 0008 B960     	 str r1,[r7,#8]
 160 000a FB1D     	 add r3,r7,#7
 161 000c 1A70     	 strb r2,[r3]
 130:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_USIC_CH_Enable(channel);
 162              	 .loc 3 130 0
 163 000e FB68     	 ldr r3,[r7,#12]
 164 0010 181C     	 mov r0,r3
 165 0012 FFF7FEFF 	 bl XMC_USIC_CH_Enable
 131:../Libraries/XMCLib/src/xmc_i2c.c **** 
 132:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Data format configuration */
 133:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->SCTR = ((uint32_t)TRANSMISSION_MODE << (uint32_t)USIC_CH_SCTR_TRM_Pos) | /* Transmision 
 166              	 .loc 3 133 0
 167 0016 FB68     	 ldr r3,[r7,#12]
 168 0018 124A     	 ldr r2,.L7
 169 001a 5A63     	 str r2,[r3,#52]
 134:../Libraries/XMCLib/src/xmc_i2c.c ****                   ((uint32_t)WORDLENGTH << (uint32_t)USIC_CH_SCTR_WLE_Pos) | /* 8 data bits */
 135:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_FLE_Msk |           /* unlimited data flow */
 136:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_SDIR_Msk |          /* MSB shifted first */
 137:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_PDL_Msk;            /* Passive Data Level */
 138:../Libraries/XMCLib/src/xmc_i2c.c **** 
 139:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_SetSlaveAddress(channel, config->address);
 170              	 .loc 3 139 0
 171 001c BB68     	 ldr r3,[r7,#8]
 172 001e DB88     	 ldrh r3,[r3,#6]
 173 0020 FA68     	 ldr r2,[r7,#12]
 174 0022 101C     	 mov r0,r2
 175 0024 191C     	 mov r1,r3
 176 0026 FFF7FEFF 	 bl XMC_I2C_CH_SetSlaveAddress
 140:../Libraries/XMCLib/src/xmc_i2c.c **** 
 141:../Libraries/XMCLib/src/xmc_i2c.c ****   if (init_brg)
 177              	 .loc 3 141 0
 178 002a FB1D     	 add r3,r7,#7
 179 002c 1B78     	 ldrb r3,[r3]
 180 002e 002B     	 cmp r3,#0
 181 0030 09D0     	 beq .L6
 142:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 143:../Libraries/XMCLib/src/xmc_i2c.c ****     (void)XMC_I2C_CH_SetBaudrateEx(channel, config->baudrate, config->normal_divider_mode);
 182              	 .loc 3 143 0
 183 0032 BB68     	 ldr r3,[r7,#8]
 184 0034 1A68     	 ldr r2,[r3]
 185 0036 BB68     	 ldr r3,[r7,#8]
 186 0038 1B79     	 ldrb r3,[r3,#4]
 187 003a F968     	 ldr r1,[r7,#12]
 188 003c 081C     	 mov r0,r1
 189 003e 111C     	 mov r1,r2
 190 0040 1A1C     	 mov r2,r3
 191 0042 FFF7FEFF 	 bl XMC_I2C_CH_SetBaudrateEx
 192              	.L6:
 144:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 145:../Libraries/XMCLib/src/xmc_i2c.c **** 
 146:../Libraries/XMCLib/src/xmc_i2c.c **** 
 147:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Enable transfer buffer */
 148:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->TCSR = ((uint32_t)SET_TDV << (uint32_t)USIC_CH_TCSR_TDEN_Pos) | USIC_CH_TCSR_TDSSM_Msk;
 193              	 .loc 3 148 0
 194 0046 FB68     	 ldr r3,[r7,#12]
 195 0048 A022     	 mov r2,#160
 196 004a D200     	 lsl r2,r2,#3
 197 004c 9A63     	 str r2,[r3,#56]
 149:../Libraries/XMCLib/src/xmc_i2c.c **** 
 150:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Clear status flags */
 151:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PSCR = 0xFFFFFFFFU;
 198              	 .loc 3 151 0
 199 004e FB68     	 ldr r3,[r7,#12]
 200 0050 0122     	 mov r2,#1
 201 0052 5242     	 neg r2,r2
 202 0054 DA64     	 str r2,[r3,#76]
 152:../Libraries/XMCLib/src/xmc_i2c.c **** 
 153:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Disable parity generation */
 154:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR = 0x0U;
 203              	 .loc 3 154 0
 204 0056 FB68     	 ldr r3,[r7,#12]
 205 0058 0022     	 mov r2,#0
 206 005a 1A64     	 str r2,[r3,#64]
 155:../Libraries/XMCLib/src/xmc_i2c.c **** }
 207              	 .loc 3 155 0
 208 005c BD46     	 mov sp,r7
 209 005e 04B0     	 add sp,sp,#16
 210              	 
 211 0060 80BD     	 pop {r7,pc}
 212              	.L8:
 213 0062 C046     	 .align 2
 214              	.L7:
 215 0064 03033F07 	 .word 121570051
 216              	 .cfi_endproc
 217              	.LFE126:
 219              	 .section .text.XMC_I2C_CH_SetSlaveAddress,"ax",%progbits
 220              	 .align 2
 221              	 .global XMC_I2C_CH_SetSlaveAddress
 222              	 .code 16
 223              	 .thumb_func
 225              	XMC_I2C_CH_SetSlaveAddress:
 226              	.LFB127:
 156:../Libraries/XMCLib/src/xmc_i2c.c **** 
 157:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the slave address */
 158:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address)
 159:../Libraries/XMCLib/src/xmc_i2c.c **** {
 227              	 .loc 3 159 0
 228              	 .cfi_startproc
 229 0000 80B5     	 push {r7,lr}
 230              	.LCFI12:
 231              	 .cfi_def_cfa_offset 8
 232              	 .cfi_offset 7,-8
 233              	 .cfi_offset 14,-4
 234 0002 82B0     	 sub sp,sp,#8
 235              	.LCFI13:
 236              	 .cfi_def_cfa_offset 16
 237 0004 00AF     	 add r7,sp,#0
 238              	.LCFI14:
 239              	 .cfi_def_cfa_register 7
 240 0006 7860     	 str r0,[r7,#4]
 241 0008 0A1C     	 mov r2,r1
 242 000a BB1C     	 add r3,r7,#2
 243 000c 1A80     	 strh r2,[r3]
 160:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((address & XMC_I2C_10BIT_ADDR_MASK) == XMC_I2C_10BIT_ADDR_GROUP)
 244              	 .loc 3 160 0
 245 000e BB1C     	 add r3,r7,#2
 246 0010 1A88     	 ldrh r2,[r3]
 247 0012 F823     	 mov r3,#248
 248 0014 DB01     	 lsl r3,r3,#7
 249 0016 1A40     	 and r2,r3
 250 0018 F023     	 mov r3,#240
 251 001a DB01     	 lsl r3,r3,#7
 252 001c 9A42     	 cmp r2,r3
 253 001e 13D1     	 bne .L10
 161:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 162:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode = (channel->PCR_IICMode & (uint32_t)~USIC_CH_PCR_IICMode_SLAD_Msk) |
 254              	 .loc 3 162 0
 255 0020 7B68     	 ldr r3,[r7,#4]
 256 0022 DB6B     	 ldr r3,[r3,#60]
 257 0024 1B0C     	 lsr r3,r3,#16
 258 0026 1A04     	 lsl r2,r3,#16
 259 0028 BB1C     	 add r3,r7,#2
 260 002a 1B88     	 ldrh r3,[r3]
 261 002c FF21     	 mov r1,#255
 262 002e 0B40     	 and r3,r1
 263 0030 1A43     	 orr r2,r3
 163:../Libraries/XMCLib/src/xmc_i2c.c ****                            (address & 0x00ffU) | ((address << 1) & 0xfe00U);
 264              	 .loc 3 163 0
 265 0032 BB1C     	 add r3,r7,#2
 266 0034 1B88     	 ldrh r3,[r3]
 267 0036 5B00     	 lsl r3,r3,#1
 268 0038 191C     	 mov r1,r3
 269 003a FE23     	 mov r3,#254
 270 003c 1B02     	 lsl r3,r3,#8
 271 003e 0B40     	 and r3,r1
 272 0040 1A43     	 orr r2,r3
 162:../Libraries/XMCLib/src/xmc_i2c.c ****                            (address & 0x00ffU) | ((address << 1) & 0xfe00U);
 273              	 .loc 3 162 0
 274 0042 7B68     	 ldr r3,[r7,#4]
 275 0044 DA63     	 str r2,[r3,#60]
 276 0046 09E0     	 b .L9
 277              	.L10:
 164:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 165:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 166:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 167:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode = (channel->PCR_IICMode & (uint32_t)~USIC_CH_PCR_IICMode_SLAD_Msk) |
 278              	 .loc 3 167 0
 279 0048 7B68     	 ldr r3,[r7,#4]
 280 004a DB6B     	 ldr r3,[r3,#60]
 281 004c 1B0C     	 lsr r3,r3,#16
 282 004e 1A04     	 lsl r2,r3,#16
 168:../Libraries/XMCLib/src/xmc_i2c.c ****                            ((uint32_t)address) << XMC_I2C_7BIT_ADDR_Pos;
 283              	 .loc 3 168 0
 284 0050 BB1C     	 add r3,r7,#2
 285 0052 1B88     	 ldrh r3,[r3]
 286 0054 1B02     	 lsl r3,r3,#8
 167:../Libraries/XMCLib/src/xmc_i2c.c ****                            ((uint32_t)address) << XMC_I2C_7BIT_ADDR_Pos;
 287              	 .loc 3 167 0
 288 0056 1A43     	 orr r2,r3
 289 0058 7B68     	 ldr r3,[r7,#4]
 290 005a DA63     	 str r2,[r3,#60]
 291              	.L9:
 169:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 170:../Libraries/XMCLib/src/xmc_i2c.c **** }
 292              	 .loc 3 170 0
 293 005c BD46     	 mov sp,r7
 294 005e 02B0     	 add sp,sp,#8
 295              	 
 296 0060 80BD     	 pop {r7,pc}
 297              	 .cfi_endproc
 298              	.LFE127:
 300 0062 C046     	 .section .text.XMC_I2C_CH_GetSlaveAddress,"ax",%progbits
 301              	 .align 2
 302              	 .global XMC_I2C_CH_GetSlaveAddress
 303              	 .code 16
 304              	 .thumb_func
 306              	XMC_I2C_CH_GetSlaveAddress:
 307              	.LFB128:
 171:../Libraries/XMCLib/src/xmc_i2c.c **** /* Read the slave address */
 172:../Libraries/XMCLib/src/xmc_i2c.c **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel)
 173:../Libraries/XMCLib/src/xmc_i2c.c **** {
 308              	 .loc 3 173 0
 309              	 .cfi_startproc
 310 0000 80B5     	 push {r7,lr}
 311              	.LCFI15:
 312              	 .cfi_def_cfa_offset 8
 313              	 .cfi_offset 7,-8
 314              	 .cfi_offset 14,-4
 315 0002 84B0     	 sub sp,sp,#16
 316              	.LCFI16:
 317              	 .cfi_def_cfa_offset 24
 318 0004 00AF     	 add r7,sp,#0
 319              	.LCFI17:
 320              	 .cfi_def_cfa_register 7
 321 0006 7860     	 str r0,[r7,#4]
 174:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t address = channel->PCR_IICMode & (uint32_t)USIC_CH_PCR_IICMode_SLAD_Msk;
 322              	 .loc 3 174 0
 323 0008 7B68     	 ldr r3,[r7,#4]
 324 000a DB6B     	 ldr r3,[r3,#60]
 325 000c 1B04     	 lsl r3,r3,#16
 326 000e 1B0C     	 lsr r3,r3,#16
 327 0010 FB60     	 str r3,[r7,#12]
 175:../Libraries/XMCLib/src/xmc_i2c.c **** 
 176:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((address & 0xffU) == 0U)
 328              	 .loc 3 176 0
 329 0012 FB68     	 ldr r3,[r7,#12]
 330 0014 FF22     	 mov r2,#255
 331 0016 1340     	 and r3,r2
 332 0018 03D1     	 bne .L13
 177:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 178:../Libraries/XMCLib/src/xmc_i2c.c ****     address = address >> XMC_I2C_7BIT_ADDR_Pos;
 333              	 .loc 3 178 0
 334 001a FB68     	 ldr r3,[r7,#12]
 335 001c 1B0A     	 lsr r3,r3,#8
 336 001e FB60     	 str r3,[r7,#12]
 337 0020 09E0     	 b .L14
 338              	.L13:
 179:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 180:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 181:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 182:../Libraries/XMCLib/src/xmc_i2c.c ****     address = (address & 0xffU) | ((address >> 1) & 0x0300U);
 339              	 .loc 3 182 0
 340 0022 FB68     	 ldr r3,[r7,#12]
 341 0024 FF22     	 mov r2,#255
 342 0026 1A40     	 and r2,r3
 343 0028 FB68     	 ldr r3,[r7,#12]
 344 002a 5908     	 lsr r1,r3,#1
 345 002c C023     	 mov r3,#192
 346 002e 9B00     	 lsl r3,r3,#2
 347 0030 0B40     	 and r3,r1
 348 0032 1343     	 orr r3,r2
 349 0034 FB60     	 str r3,[r7,#12]
 350              	.L14:
 183:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 184:../Libraries/XMCLib/src/xmc_i2c.c **** 
 185:../Libraries/XMCLib/src/xmc_i2c.c ****   return (uint16_t)address;
 351              	 .loc 3 185 0
 352 0036 FB68     	 ldr r3,[r7,#12]
 353 0038 9BB2     	 uxth r3,r3
 186:../Libraries/XMCLib/src/xmc_i2c.c **** }
 354              	 .loc 3 186 0
 355 003a 181C     	 mov r0,r3
 356 003c BD46     	 mov sp,r7
 357 003e 04B0     	 add sp,sp,#16
 358              	 
 359 0040 80BD     	 pop {r7,pc}
 360              	 .cfi_endproc
 361              	.LFE128:
 363 0042 C046     	 .section .text.XMC_I2C_CH_SetBaudrate,"ax",%progbits
 364              	 .align 2
 365              	 .global XMC_I2C_CH_SetBaudrate
 366              	 .code 16
 367              	 .thumb_func
 369              	XMC_I2C_CH_SetBaudrate:
 370              	.LFB129:
 187:../Libraries/XMCLib/src/xmc_i2c.c **** 
 188:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the baudrate and oversampling based on standard speed or fast speed */
 189:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate)
 190:../Libraries/XMCLib/src/xmc_i2c.c **** {
 371              	 .loc 3 190 0
 372              	 .cfi_startproc
 373 0000 80B5     	 push {r7,lr}
 374              	.LCFI18:
 375              	 .cfi_def_cfa_offset 8
 376              	 .cfi_offset 7,-8
 377              	 .cfi_offset 14,-4
 378 0002 84B0     	 sub sp,sp,#16
 379              	.LCFI19:
 380              	 .cfi_def_cfa_offset 24
 381 0004 00AF     	 add r7,sp,#0
 382              	.LCFI20:
 383              	 .cfi_def_cfa_register 7
 384 0006 7860     	 str r0,[r7,#4]
 385 0008 3960     	 str r1,[r7]
 191:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_STATUS_t status;
 192:../Libraries/XMCLib/src/xmc_i2c.c **** 
 193:../Libraries/XMCLib/src/xmc_i2c.c ****   status = XMC_I2C_CH_STATUS_ERROR;
 386              	 .loc 3 193 0
 387 000a 0F23     	 mov r3,#15
 388 000c FB18     	 add r3,r7,r3
 389 000e 0122     	 mov r2,#1
 390 0010 1A70     	 strb r2,[r3]
 194:../Libraries/XMCLib/src/xmc_i2c.c **** 
 195:../Libraries/XMCLib/src/xmc_i2c.c ****   if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_STANDARD)
 391              	 .loc 3 195 0
 392 0012 3B68     	 ldr r3,[r7]
 393 0014 1D4A     	 ldr r2,.L23
 394 0016 9342     	 cmp r3,r2
 395 0018 13D8     	 bhi .L17
 196:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 197:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode &= (uint32_t)~USIC_CH_PCR_IICMode_STIM_Msk;
 396              	 .loc 3 197 0
 397 001a 7B68     	 ldr r3,[r7,#4]
 398 001c DB6B     	 ldr r3,[r3,#60]
 399 001e 1C4A     	 ldr r2,.L23+4
 400 0020 1A40     	 and r2,r3
 401 0022 7B68     	 ldr r3,[r7,#4]
 402 0024 DA63     	 str r2,[r3,#60]
 198:../Libraries/XMCLib/src/xmc_i2c.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STANDARD) ==
 403              	 .loc 3 198 0
 404 0026 7A68     	 ldr r2,[r7,#4]
 405 0028 3B68     	 ldr r3,[r7]
 406 002a 101C     	 mov r0,r2
 407 002c 191C     	 mov r1,r3
 408 002e 0A22     	 mov r2,#10
 409 0030 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 410 0034 031E     	 sub r3,r0,#0
 411 0036 21D1     	 bne .L19
 199:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 200:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_I2C_CH_STATUS_OK;
 412              	 .loc 3 200 0
 413 0038 0F23     	 mov r3,#15
 414 003a FB18     	 add r3,r7,r3
 415 003c 0022     	 mov r2,#0
 416 003e 1A70     	 strb r2,[r3]
 417 0040 1CE0     	 b .L19
 418              	.L17:
 201:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 202:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 203:../Libraries/XMCLib/src/xmc_i2c.c ****   else if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_FAST)
 419              	 .loc 3 203 0
 420 0042 3B68     	 ldr r3,[r7]
 421 0044 134A     	 ldr r2,.L23+8
 422 0046 9342     	 cmp r3,r2
 423 0048 14D8     	 bhi .L20
 204:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 205:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode |= (uint32_t)USIC_CH_PCR_IICMode_STIM_Msk;
 424              	 .loc 3 205 0
 425 004a 7B68     	 ldr r3,[r7,#4]
 426 004c DB6B     	 ldr r3,[r3,#60]
 427 004e 8022     	 mov r2,#128
 428 0050 9202     	 lsl r2,r2,#10
 429 0052 1A43     	 orr r2,r3
 430 0054 7B68     	 ldr r3,[r7,#4]
 431 0056 DA63     	 str r2,[r3,#60]
 206:../Libraries/XMCLib/src/xmc_i2c.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_FAST) == XMC
 432              	 .loc 3 206 0
 433 0058 7A68     	 ldr r2,[r7,#4]
 434 005a 3B68     	 ldr r3,[r7]
 435 005c 101C     	 mov r0,r2
 436 005e 191C     	 mov r1,r3
 437 0060 1922     	 mov r2,#25
 438 0062 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 439 0066 031E     	 sub r3,r0,#0
 440 0068 08D1     	 bne .L19
 207:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 208:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_I2C_CH_STATUS_OK;
 441              	 .loc 3 208 0
 442 006a 0F23     	 mov r3,#15
 443 006c FB18     	 add r3,r7,r3
 444 006e 0022     	 mov r2,#0
 445 0070 1A70     	 strb r2,[r3]
 446 0072 03E0     	 b .L19
 447              	.L20:
 209:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 210:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 211:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 212:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 213:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_I2C_CH_STATUS_ERROR;
 448              	 .loc 3 213 0
 449 0074 0F23     	 mov r3,#15
 450 0076 FB18     	 add r3,r7,r3
 451 0078 0122     	 mov r2,#1
 452 007a 1A70     	 strb r2,[r3]
 453              	.L19:
 214:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 215:../Libraries/XMCLib/src/xmc_i2c.c **** 
 216:../Libraries/XMCLib/src/xmc_i2c.c ****   return status;
 454              	 .loc 3 216 0
 455 007c 0F23     	 mov r3,#15
 456 007e FB18     	 add r3,r7,r3
 457 0080 1B78     	 ldrb r3,[r3]
 217:../Libraries/XMCLib/src/xmc_i2c.c **** }
 458              	 .loc 3 217 0
 459 0082 181C     	 mov r0,r3
 460 0084 BD46     	 mov sp,r7
 461 0086 04B0     	 add sp,sp,#16
 462              	 
 463 0088 80BD     	 pop {r7,pc}
 464              	.L24:
 465 008a C046     	 .align 2
 466              	.L23:
 467 008c A0860100 	 .word 100000
 468 0090 FFFFFDFF 	 .word -131073
 469 0094 801A0600 	 .word 400000
 470              	 .cfi_endproc
 471              	.LFE129:
 473              	 .section .text.XMC_I2C_CH_SetBaudrateEx,"ax",%progbits
 474              	 .align 2
 475              	 .global XMC_I2C_CH_SetBaudrateEx
 476              	 .code 16
 477              	 .thumb_func
 479              	XMC_I2C_CH_SetBaudrateEx:
 480              	.LFB130:
 218:../Libraries/XMCLib/src/xmc_i2c.c **** 
 219:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the baudrate and oversampling based on standard speed or fast speed */
 220:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 221:../Libraries/XMCLib/src/xmc_i2c.c **** {
 481              	 .loc 3 221 0
 482              	 .cfi_startproc
 483 0000 90B5     	 push {r4,r7,lr}
 484              	.LCFI21:
 485              	 .cfi_def_cfa_offset 12
 486              	 .cfi_offset 4,-12
 487              	 .cfi_offset 7,-8
 488              	 .cfi_offset 14,-4
 489 0002 87B0     	 sub sp,sp,#28
 490              	.LCFI22:
 491              	 .cfi_def_cfa_offset 40
 492 0004 00AF     	 add r7,sp,#0
 493              	.LCFI23:
 494              	 .cfi_def_cfa_register 7
 495 0006 F860     	 str r0,[r7,#12]
 496 0008 B960     	 str r1,[r7,#8]
 497 000a FB1D     	 add r3,r7,#7
 498 000c 1A70     	 strb r2,[r3]
 222:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_USIC_CH_STATUS_t status;
 223:../Libraries/XMCLib/src/xmc_i2c.c **** 
 224:../Libraries/XMCLib/src/xmc_i2c.c ****   if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_STANDARD)
 499              	 .loc 3 224 0
 500 000e BB68     	 ldr r3,[r7,#8]
 501 0010 2B4A     	 ldr r2,.L34
 502 0012 9342     	 cmp r3,r2
 503 0014 21D8     	 bhi .L26
 225:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 226:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode &= (uint32_t)~USIC_CH_PCR_IICMode_STIM_Msk;
 504              	 .loc 3 226 0
 505 0016 FB68     	 ldr r3,[r7,#12]
 506 0018 DB6B     	 ldr r3,[r3,#60]
 507 001a 2A4A     	 ldr r2,.L34+4
 508 001c 1A40     	 and r2,r3
 509 001e FB68     	 ldr r3,[r7,#12]
 510 0020 DA63     	 str r2,[r3,#60]
 227:../Libraries/XMCLib/src/xmc_i2c.c ****     if (normal_divider_mode)
 511              	 .loc 3 227 0
 512 0022 FB1D     	 add r3,r7,#7
 513 0024 1B78     	 ldrb r3,[r3]
 514 0026 002B     	 cmp r3,#0
 515 0028 0BD0     	 beq .L27
 228:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 229:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrateEx(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STA
 516              	 .loc 3 229 0
 517 002a BB68     	 ldr r3,[r7,#8]
 518 002c 1722     	 mov r2,#23
 519 002e BC18     	 add r4,r7,r2
 520 0030 FA68     	 ldr r2,[r7,#12]
 521 0032 101C     	 mov r0,r2
 522 0034 191C     	 mov r1,r3
 523 0036 0A22     	 mov r2,#10
 524 0038 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrateEx
 525 003c 031C     	 mov r3,r0
 526 003e 2370     	 strb r3,[r4]
 527 0040 36E0     	 b .L29
 528              	.L27:
 230:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 231:../Libraries/XMCLib/src/xmc_i2c.c ****     else
 232:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 233:../Libraries/XMCLib/src/xmc_i2c.c ****       /* Fractional divider mode */
 234:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STAND
 529              	 .loc 3 234 0
 530 0042 1723     	 mov r3,#23
 531 0044 FC18     	 add r4,r7,r3
 532 0046 FA68     	 ldr r2,[r7,#12]
 533 0048 BB68     	 ldr r3,[r7,#8]
 534 004a 101C     	 mov r0,r2
 535 004c 191C     	 mov r1,r3
 536 004e 0A22     	 mov r2,#10
 537 0050 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 538 0054 031C     	 mov r3,r0
 539 0056 2370     	 strb r3,[r4]
 540 0058 2AE0     	 b .L29
 541              	.L26:
 235:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 236:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 237:../Libraries/XMCLib/src/xmc_i2c.c ****   else if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_FAST)
 542              	 .loc 3 237 0
 543 005a BB68     	 ldr r3,[r7,#8]
 544 005c 1A4A     	 ldr r2,.L34+8
 545 005e 9342     	 cmp r3,r2
 546 0060 22D8     	 bhi .L30
 238:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 239:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode |= (uint32_t)USIC_CH_PCR_IICMode_STIM_Msk;
 547              	 .loc 3 239 0
 548 0062 FB68     	 ldr r3,[r7,#12]
 549 0064 DB6B     	 ldr r3,[r3,#60]
 550 0066 8022     	 mov r2,#128
 551 0068 9202     	 lsl r2,r2,#10
 552 006a 1A43     	 orr r2,r3
 553 006c FB68     	 ldr r3,[r7,#12]
 554 006e DA63     	 str r2,[r3,#60]
 240:../Libraries/XMCLib/src/xmc_i2c.c ****     if (normal_divider_mode)
 555              	 .loc 3 240 0
 556 0070 FB1D     	 add r3,r7,#7
 557 0072 1B78     	 ldrb r3,[r3]
 558 0074 002B     	 cmp r3,#0
 559 0076 0BD0     	 beq .L31
 241:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 242:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrateEx(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_FAS
 560              	 .loc 3 242 0
 561 0078 BB68     	 ldr r3,[r7,#8]
 562 007a 1722     	 mov r2,#23
 563 007c BC18     	 add r4,r7,r2
 564 007e FA68     	 ldr r2,[r7,#12]
 565 0080 101C     	 mov r0,r2
 566 0082 191C     	 mov r1,r3
 567 0084 1922     	 mov r2,#25
 568 0086 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrateEx
 569 008a 031C     	 mov r3,r0
 570 008c 2370     	 strb r3,[r4]
 571 008e 0FE0     	 b .L29
 572              	.L31:
 243:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 244:../Libraries/XMCLib/src/xmc_i2c.c ****     else
 245:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 246:../Libraries/XMCLib/src/xmc_i2c.c ****       /* Fractional divider mode */
 247:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_FAST)
 573              	 .loc 3 247 0
 574 0090 1723     	 mov r3,#23
 575 0092 FC18     	 add r4,r7,r3
 576 0094 FA68     	 ldr r2,[r7,#12]
 577 0096 BB68     	 ldr r3,[r7,#8]
 578 0098 101C     	 mov r0,r2
 579 009a 191C     	 mov r1,r3
 580 009c 1922     	 mov r2,#25
 581 009e FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 582 00a2 031C     	 mov r3,r0
 583 00a4 2370     	 strb r3,[r4]
 584 00a6 03E0     	 b .L29
 585              	.L30:
 248:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 249:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 250:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 251:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 252:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 586              	 .loc 3 252 0
 587 00a8 1723     	 mov r3,#23
 588 00aa FB18     	 add r3,r7,r3
 589 00ac 0122     	 mov r2,#1
 590 00ae 1A70     	 strb r2,[r3]
 591              	.L29:
 253:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 254:../Libraries/XMCLib/src/xmc_i2c.c **** 
 255:../Libraries/XMCLib/src/xmc_i2c.c ****   return (XMC_I2C_CH_STATUS_t)status;
 592              	 .loc 3 255 0
 593 00b0 1723     	 mov r3,#23
 594 00b2 FB18     	 add r3,r7,r3
 595 00b4 1B78     	 ldrb r3,[r3]
 256:../Libraries/XMCLib/src/xmc_i2c.c **** }
 596              	 .loc 3 256 0
 597 00b6 181C     	 mov r0,r3
 598 00b8 BD46     	 mov sp,r7
 599 00ba 07B0     	 add sp,sp,#28
 600              	 
 601 00bc 90BD     	 pop {r4,r7,pc}
 602              	.L35:
 603 00be C046     	 .align 2
 604              	.L34:
 605 00c0 A0860100 	 .word 100000
 606 00c4 FFFFFDFF 	 .word -131073
 607 00c8 801A0600 	 .word 400000
 608              	 .cfi_endproc
 609              	.LFE130:
 611              	 .section .text.XMC_I2C_CH_MasterStart,"ax",%progbits
 612              	 .align 2
 613              	 .global XMC_I2C_CH_MasterStart
 614              	 .code 16
 615              	 .thumb_func
 617              	XMC_I2C_CH_MasterStart:
 618              	.LFB131:
 257:../Libraries/XMCLib/src/xmc_i2c.c **** 
 258:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master start condition along with read/write command to IN/TBUF register based on FIFO/non
 259:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 260:../Libraries/XMCLib/src/xmc_i2c.c **** {
 619              	 .loc 3 260 0
 620              	 .cfi_startproc
 621 0000 80B5     	 push {r7,lr}
 622              	.LCFI24:
 623              	 .cfi_def_cfa_offset 8
 624              	 .cfi_offset 7,-8
 625              	 .cfi_offset 14,-4
 626 0002 84B0     	 sub sp,sp,#16
 627              	.LCFI25:
 628              	 .cfi_def_cfa_offset 24
 629 0004 00AF     	 add r7,sp,#0
 630              	.LCFI26:
 631              	 .cfi_def_cfa_register 7
 632 0006 7860     	 str r0,[r7,#4]
 633 0008 081C     	 mov r0,r1
 634 000a 111C     	 mov r1,r2
 635 000c BB1C     	 add r3,r7,#2
 636 000e 021C     	 add r2,r0,#0
 637 0010 1A80     	 strh r2,[r3]
 638 0012 7B1C     	 add r3,r7,#1
 639 0014 0A1C     	 add r2,r1,#0
 640 0016 1A70     	 strb r2,[r3]
 261:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t temp;
 262:../Libraries/XMCLib/src/xmc_i2c.c **** 
 263:../Libraries/XMCLib/src/xmc_i2c.c ****   temp = addr | (uint32_t)XMC_I2C_CH_TDF_MASTER_START;
 641              	 .loc 3 263 0
 642 0018 BB1C     	 add r3,r7,#2
 643 001a 1B88     	 ldrh r3,[r3]
 644 001c 8022     	 mov r2,#128
 645 001e D200     	 lsl r2,r2,#3
 646 0020 1343     	 orr r3,r2
 647 0022 9BB2     	 uxth r3,r3
 648 0024 FB60     	 str r3,[r7,#12]
 264:../Libraries/XMCLib/src/xmc_i2c.c ****   if (command == XMC_I2C_CH_CMD_READ)
 649              	 .loc 3 264 0
 650 0026 7B1C     	 add r3,r7,#1
 651 0028 1B78     	 ldrb r3,[r3]
 652 002a 012B     	 cmp r3,#1
 653 002c 03D1     	 bne .L37
 265:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 266:../Libraries/XMCLib/src/xmc_i2c.c ****     temp |= 0x1U;
 654              	 .loc 3 266 0
 655 002e FB68     	 ldr r3,[r7,#12]
 656 0030 0122     	 mov r2,#1
 657 0032 1343     	 orr r3,r2
 658 0034 FB60     	 str r3,[r7,#12]
 659              	.L37:
 267:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 268:../Libraries/XMCLib/src/xmc_i2c.c **** 
 269:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 270:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 660              	 .loc 3 270 0
 661 0036 7A68     	 ldr r2,[r7,#4]
 662 0038 8423     	 mov r3,#132
 663 003a 5B00     	 lsl r3,r3,#1
 664 003c D258     	 ldr r2,[r2,r3]
 665 003e E023     	 mov r3,#224
 666 0040 DB04     	 lsl r3,r3,#19
 667 0042 1340     	 and r3,r2
 668 0044 13D1     	 bne .L38
 271:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 272:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 669              	 .loc 3 272 0
 670 0046 C046     	 mov r8,r8
 671              	.L39:
 672              	 .loc 3 272 0 is_stmt 0 discriminator 1
 673 0048 7B68     	 ldr r3,[r7,#4]
 674 004a 181C     	 mov r0,r3
 675 004c FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 676 0050 031E     	 sub r3,r0,#0
 677 0052 802B     	 cmp r3,#128
 678 0054 F8D0     	 beq .L39
 273:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 274:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 275:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 276:../Libraries/XMCLib/src/xmc_i2c.c **** 
 277:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 278:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 679              	 .loc 3 278 0 is_stmt 1
 680 0056 7A68     	 ldr r2,[r7,#4]
 681 0058 8023     	 mov r3,#128
 682 005a 9B01     	 lsl r3,r3,#6
 683 005c 101C     	 mov r0,r2
 684 005e 191C     	 mov r1,r3
 685 0060 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 279:../Libraries/XMCLib/src/xmc_i2c.c **** 
 280:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = temp;
 686              	 .loc 3 280 0
 687 0064 7B68     	 ldr r3,[r7,#4]
 688 0066 8021     	 mov r1,#128
 689 0068 FA68     	 ldr r2,[r7,#12]
 690 006a 5A50     	 str r2,[r3,r1]
 691 006c 04E0     	 b .L36
 692              	.L38:
 281:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 282:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 283:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 284:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = temp;
 693              	 .loc 3 284 0
 694 006e 7A68     	 ldr r2,[r7,#4]
 695 0070 C023     	 mov r3,#192
 696 0072 5B00     	 lsl r3,r3,#1
 697 0074 F968     	 ldr r1,[r7,#12]
 698 0076 D150     	 str r1,[r2,r3]
 699              	.L36:
 285:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 286:../Libraries/XMCLib/src/xmc_i2c.c **** }
 700              	 .loc 3 286 0
 701 0078 BD46     	 mov sp,r7
 702 007a 04B0     	 add sp,sp,#16
 703              	 
 704 007c 80BD     	 pop {r7,pc}
 705              	 .cfi_endproc
 706              	.LFE131:
 708 007e C046     	 .section .text.XMC_I2C_CH_MasterRepeatedStart,"ax",%progbits
 709              	 .align 2
 710              	 .global XMC_I2C_CH_MasterRepeatedStart
 711              	 .code 16
 712              	 .thumb_func
 714              	XMC_I2C_CH_MasterRepeatedStart:
 715              	.LFB132:
 287:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master repeated start condition along with read/write command to IN/TBUF register based on
 288:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 289:../Libraries/XMCLib/src/xmc_i2c.c **** {
 716              	 .loc 3 289 0
 717              	 .cfi_startproc
 718 0000 80B5     	 push {r7,lr}
 719              	.LCFI27:
 720              	 .cfi_def_cfa_offset 8
 721              	 .cfi_offset 7,-8
 722              	 .cfi_offset 14,-4
 723 0002 84B0     	 sub sp,sp,#16
 724              	.LCFI28:
 725              	 .cfi_def_cfa_offset 24
 726 0004 00AF     	 add r7,sp,#0
 727              	.LCFI29:
 728              	 .cfi_def_cfa_register 7
 729 0006 7860     	 str r0,[r7,#4]
 730 0008 081C     	 mov r0,r1
 731 000a 111C     	 mov r1,r2
 732 000c BB1C     	 add r3,r7,#2
 733 000e 021C     	 add r2,r0,#0
 734 0010 1A80     	 strh r2,[r3]
 735 0012 7B1C     	 add r3,r7,#1
 736 0014 0A1C     	 add r2,r1,#0
 737 0016 1A70     	 strb r2,[r3]
 290:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t tmp;
 291:../Libraries/XMCLib/src/xmc_i2c.c ****   tmp = addr | (uint32_t)XMC_I2C_CH_TDF_MASTER_RESTART;
 738              	 .loc 3 291 0
 739 0018 BB1C     	 add r3,r7,#2
 740 001a 1B88     	 ldrh r3,[r3]
 741 001c A022     	 mov r2,#160
 742 001e D200     	 lsl r2,r2,#3
 743 0020 1343     	 orr r3,r2
 744 0022 9BB2     	 uxth r3,r3
 745 0024 FB60     	 str r3,[r7,#12]
 292:../Libraries/XMCLib/src/xmc_i2c.c ****   if (command == XMC_I2C_CH_CMD_READ)
 746              	 .loc 3 292 0
 747 0026 7B1C     	 add r3,r7,#1
 748 0028 1B78     	 ldrb r3,[r3]
 749 002a 012B     	 cmp r3,#1
 750 002c 03D1     	 bne .L42
 293:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 294:../Libraries/XMCLib/src/xmc_i2c.c ****     tmp |= 0x1U;
 751              	 .loc 3 294 0
 752 002e FB68     	 ldr r3,[r7,#12]
 753 0030 0122     	 mov r2,#1
 754 0032 1343     	 orr r3,r2
 755 0034 FB60     	 str r3,[r7,#12]
 756              	.L42:
 295:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 296:../Libraries/XMCLib/src/xmc_i2c.c **** 
 297:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 298:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 757              	 .loc 3 298 0
 758 0036 7A68     	 ldr r2,[r7,#4]
 759 0038 8423     	 mov r3,#132
 760 003a 5B00     	 lsl r3,r3,#1
 761 003c D258     	 ldr r2,[r2,r3]
 762 003e E023     	 mov r3,#224
 763 0040 DB04     	 lsl r3,r3,#19
 764 0042 1340     	 and r3,r2
 765 0044 13D1     	 bne .L43
 299:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 300:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 766              	 .loc 3 300 0
 767 0046 C046     	 mov r8,r8
 768              	.L44:
 769              	 .loc 3 300 0 is_stmt 0 discriminator 1
 770 0048 7B68     	 ldr r3,[r7,#4]
 771 004a 181C     	 mov r0,r3
 772 004c FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 773 0050 031E     	 sub r3,r0,#0
 774 0052 802B     	 cmp r3,#128
 775 0054 F8D0     	 beq .L44
 301:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 302:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 303:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 304:../Libraries/XMCLib/src/xmc_i2c.c **** 
 305:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 306:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 776              	 .loc 3 306 0 is_stmt 1
 777 0056 7A68     	 ldr r2,[r7,#4]
 778 0058 8023     	 mov r3,#128
 779 005a 9B01     	 lsl r3,r3,#6
 780 005c 101C     	 mov r0,r2
 781 005e 191C     	 mov r1,r3
 782 0060 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 307:../Libraries/XMCLib/src/xmc_i2c.c **** 
 308:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = tmp;
 783              	 .loc 3 308 0
 784 0064 7B68     	 ldr r3,[r7,#4]
 785 0066 8021     	 mov r1,#128
 786 0068 FA68     	 ldr r2,[r7,#12]
 787 006a 5A50     	 str r2,[r3,r1]
 788 006c 04E0     	 b .L41
 789              	.L43:
 309:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 310:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 311:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 312:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = tmp;
 790              	 .loc 3 312 0
 791 006e 7A68     	 ldr r2,[r7,#4]
 792 0070 C023     	 mov r3,#192
 793 0072 5B00     	 lsl r3,r3,#1
 794 0074 F968     	 ldr r1,[r7,#12]
 795 0076 D150     	 str r1,[r2,r3]
 796              	.L41:
 313:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 314:../Libraries/XMCLib/src/xmc_i2c.c **** }
 797              	 .loc 3 314 0
 798 0078 BD46     	 mov sp,r7
 799 007a 04B0     	 add sp,sp,#16
 800              	 
 801 007c 80BD     	 pop {r7,pc}
 802              	 .cfi_endproc
 803              	.LFE132:
 805 007e C046     	 .section .text.XMC_I2C_CH_MasterStop,"ax",%progbits
 806              	 .align 2
 807              	 .global XMC_I2C_CH_MasterStop
 808              	 .code 16
 809              	 .thumb_func
 811              	XMC_I2C_CH_MasterStop:
 812              	.LFB133:
 315:../Libraries/XMCLib/src/xmc_i2c.c **** 
 316:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master stop command to IN/TBUF register based on FIFO/non-FIFO modes. */
 317:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel)
 318:../Libraries/XMCLib/src/xmc_i2c.c **** {
 813              	 .loc 3 318 0
 814              	 .cfi_startproc
 815 0000 80B5     	 push {r7,lr}
 816              	.LCFI30:
 817              	 .cfi_def_cfa_offset 8
 818              	 .cfi_offset 7,-8
 819              	 .cfi_offset 14,-4
 820 0002 82B0     	 sub sp,sp,#8
 821              	.LCFI31:
 822              	 .cfi_def_cfa_offset 16
 823 0004 00AF     	 add r7,sp,#0
 824              	.LCFI32:
 825              	 .cfi_def_cfa_register 7
 826 0006 7860     	 str r0,[r7,#4]
 319:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 320:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 827              	 .loc 3 320 0
 828 0008 7A68     	 ldr r2,[r7,#4]
 829 000a 8423     	 mov r3,#132
 830 000c 5B00     	 lsl r3,r3,#1
 831 000e D258     	 ldr r2,[r2,r3]
 832 0010 E023     	 mov r3,#224
 833 0012 DB04     	 lsl r3,r3,#19
 834 0014 1340     	 and r3,r2
 835 0016 14D1     	 bne .L47
 321:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 322:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 836              	 .loc 3 322 0
 837 0018 C046     	 mov r8,r8
 838              	.L48:
 839              	 .loc 3 322 0 is_stmt 0 discriminator 1
 840 001a 7B68     	 ldr r3,[r7,#4]
 841 001c 181C     	 mov r0,r3
 842 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 843 0022 031E     	 sub r3,r0,#0
 844 0024 802B     	 cmp r3,#128
 845 0026 F8D0     	 beq .L48
 323:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 324:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 325:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 326:../Libraries/XMCLib/src/xmc_i2c.c **** 
 327:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 328:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 846              	 .loc 3 328 0 is_stmt 1
 847 0028 7A68     	 ldr r2,[r7,#4]
 848 002a 8023     	 mov r3,#128
 849 002c 9B01     	 lsl r3,r3,#6
 850 002e 101C     	 mov r0,r2
 851 0030 191C     	 mov r1,r3
 852 0032 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 329:../Libraries/XMCLib/src/xmc_i2c.c **** 
 330:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_STOP;
 853              	 .loc 3 330 0
 854 0036 7B68     	 ldr r3,[r7,#4]
 855 0038 8021     	 mov r1,#128
 856 003a C022     	 mov r2,#192
 857 003c D200     	 lsl r2,r2,#3
 858 003e 5A50     	 str r2,[r3,r1]
 859 0040 05E0     	 b .L46
 860              	.L47:
 331:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 332:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 333:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 334:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = (uint32_t)XMC_I2C_CH_TDF_MASTER_STOP;
 861              	 .loc 3 334 0
 862 0042 7A68     	 ldr r2,[r7,#4]
 863 0044 C023     	 mov r3,#192
 864 0046 5B00     	 lsl r3,r3,#1
 865 0048 C021     	 mov r1,#192
 866 004a C900     	 lsl r1,r1,#3
 867 004c D150     	 str r1,[r2,r3]
 868              	.L46:
 335:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 336:../Libraries/XMCLib/src/xmc_i2c.c **** }
 869              	 .loc 3 336 0
 870 004e BD46     	 mov sp,r7
 871 0050 02B0     	 add sp,sp,#8
 872              	 
 873 0052 80BD     	 pop {r7,pc}
 874              	 .cfi_endproc
 875              	.LFE133:
 877              	 .section .text.XMC_I2C_CH_MasterTransmit,"ax",%progbits
 878              	 .align 2
 879              	 .global XMC_I2C_CH_MasterTransmit
 880              	 .code 16
 881              	 .thumb_func
 883              	XMC_I2C_CH_MasterTransmit:
 884              	.LFB134:
 337:../Libraries/XMCLib/src/xmc_i2c.c **** 
 338:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master send command along with data to IN/TBUF register based on FIFO/non-FIFO modes. */
 339:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data)
 340:../Libraries/XMCLib/src/xmc_i2c.c **** {
 885              	 .loc 3 340 0
 886              	 .cfi_startproc
 887 0000 80B5     	 push {r7,lr}
 888              	.LCFI33:
 889              	 .cfi_def_cfa_offset 8
 890              	 .cfi_offset 7,-8
 891              	 .cfi_offset 14,-4
 892 0002 82B0     	 sub sp,sp,#8
 893              	.LCFI34:
 894              	 .cfi_def_cfa_offset 16
 895 0004 00AF     	 add r7,sp,#0
 896              	.LCFI35:
 897              	 .cfi_def_cfa_register 7
 898 0006 7860     	 str r0,[r7,#4]
 899 0008 0A1C     	 mov r2,r1
 900 000a FB1C     	 add r3,r7,#3
 901 000c 1A70     	 strb r2,[r3]
 341:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 342:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 902              	 .loc 3 342 0
 903 000e 7A68     	 ldr r2,[r7,#4]
 904 0010 8423     	 mov r3,#132
 905 0012 5B00     	 lsl r3,r3,#1
 906 0014 D258     	 ldr r2,[r2,r3]
 907 0016 E023     	 mov r3,#224
 908 0018 DB04     	 lsl r3,r3,#19
 909 001a 1340     	 and r3,r2
 910 001c 14D1     	 bne .L51
 343:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 344:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 911              	 .loc 3 344 0
 912 001e C046     	 mov r8,r8
 913              	.L52:
 914              	 .loc 3 344 0 is_stmt 0 discriminator 1
 915 0020 7B68     	 ldr r3,[r7,#4]
 916 0022 181C     	 mov r0,r3
 917 0024 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 918 0028 031E     	 sub r3,r0,#0
 919 002a 802B     	 cmp r3,#128
 920 002c F8D0     	 beq .L52
 345:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 346:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 347:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 348:../Libraries/XMCLib/src/xmc_i2c.c **** 
 349:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 350:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 921              	 .loc 3 350 0 is_stmt 1
 922 002e 7A68     	 ldr r2,[r7,#4]
 923 0030 8023     	 mov r3,#128
 924 0032 9B01     	 lsl r3,r3,#6
 925 0034 101C     	 mov r0,r2
 926 0036 191C     	 mov r1,r3
 927 0038 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 351:../Libraries/XMCLib/src/xmc_i2c.c **** 
 352:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_SEND | data;
 928              	 .loc 3 352 0
 929 003c FB1C     	 add r3,r7,#3
 930 003e 1A78     	 ldrb r2,[r3]
 931 0040 7B68     	 ldr r3,[r7,#4]
 932 0042 8021     	 mov r1,#128
 933 0044 5A50     	 str r2,[r3,r1]
 934 0046 05E0     	 b .L50
 935              	.L51:
 353:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 354:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 355:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 356:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_SEND | data;
 936              	 .loc 3 356 0
 937 0048 FB1C     	 add r3,r7,#3
 938 004a 1978     	 ldrb r1,[r3]
 939 004c 7A68     	 ldr r2,[r7,#4]
 940 004e C023     	 mov r3,#192
 941 0050 5B00     	 lsl r3,r3,#1
 942 0052 D150     	 str r1,[r2,r3]
 943              	.L50:
 357:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 358:../Libraries/XMCLib/src/xmc_i2c.c **** }
 944              	 .loc 3 358 0
 945 0054 BD46     	 mov sp,r7
 946 0056 02B0     	 add sp,sp,#8
 947              	 
 948 0058 80BD     	 pop {r7,pc}
 949              	 .cfi_endproc
 950              	.LFE134:
 952 005a C046     	 .section .text.XMC_I2C_CH_SlaveTransmit,"ax",%progbits
 953              	 .align 2
 954              	 .global XMC_I2C_CH_SlaveTransmit
 955              	 .code 16
 956              	 .thumb_func
 958              	XMC_I2C_CH_SlaveTransmit:
 959              	.LFB135:
 359:../Libraries/XMCLib/src/xmc_i2c.c **** 
 360:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends slave send command along with data to IN/TBUF register based on FIFO/non-FIFO modes. */
 361:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data)
 362:../Libraries/XMCLib/src/xmc_i2c.c **** {
 960              	 .loc 3 362 0
 961              	 .cfi_startproc
 962 0000 80B5     	 push {r7,lr}
 963              	.LCFI36:
 964              	 .cfi_def_cfa_offset 8
 965              	 .cfi_offset 7,-8
 966              	 .cfi_offset 14,-4
 967 0002 82B0     	 sub sp,sp,#8
 968              	.LCFI37:
 969              	 .cfi_def_cfa_offset 16
 970 0004 00AF     	 add r7,sp,#0
 971              	.LCFI38:
 972              	 .cfi_def_cfa_register 7
 973 0006 7860     	 str r0,[r7,#4]
 974 0008 0A1C     	 mov r2,r1
 975 000a FB1C     	 add r3,r7,#3
 976 000c 1A70     	 strb r2,[r3]
 363:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 364:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 977              	 .loc 3 364 0
 978 000e 7A68     	 ldr r2,[r7,#4]
 979 0010 8423     	 mov r3,#132
 980 0012 5B00     	 lsl r3,r3,#1
 981 0014 D258     	 ldr r2,[r2,r3]
 982 0016 E023     	 mov r3,#224
 983 0018 DB04     	 lsl r3,r3,#19
 984 001a 1340     	 and r3,r2
 985 001c 17D1     	 bne .L55
 365:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 366:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 986              	 .loc 3 366 0
 987 001e C046     	 mov r8,r8
 988              	.L56:
 989              	 .loc 3 366 0 is_stmt 0 discriminator 1
 990 0020 7B68     	 ldr r3,[r7,#4]
 991 0022 181C     	 mov r0,r3
 992 0024 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 993 0028 031E     	 sub r3,r0,#0
 994 002a 802B     	 cmp r3,#128
 995 002c F8D0     	 beq .L56
 367:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 368:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 369:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 370:../Libraries/XMCLib/src/xmc_i2c.c **** 
 371:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 372:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 996              	 .loc 3 372 0 is_stmt 1
 997 002e 7A68     	 ldr r2,[r7,#4]
 998 0030 8023     	 mov r3,#128
 999 0032 9B01     	 lsl r3,r3,#6
 1000 0034 101C     	 mov r0,r2
 1001 0036 191C     	 mov r1,r3
 1002 0038 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 373:../Libraries/XMCLib/src/xmc_i2c.c **** 
 374:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_SLAVE_SEND | data;
 1003              	 .loc 3 374 0
 1004 003c FB1C     	 add r3,r7,#3
 1005 003e 1B78     	 ldrb r3,[r3]
 1006 0040 8022     	 mov r2,#128
 1007 0042 5200     	 lsl r2,r2,#1
 1008 0044 1A43     	 orr r2,r3
 1009 0046 7B68     	 ldr r3,[r7,#4]
 1010 0048 8021     	 mov r1,#128
 1011 004a 5A50     	 str r2,[r3,r1]
 1012 004c 09E0     	 b .L54
 1013              	.L55:
 375:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 376:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 377:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 378:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_SLAVE_SEND | data;
 1014              	 .loc 3 378 0
 1015 004e FB1C     	 add r3,r7,#3
 1016 0050 1B78     	 ldrb r3,[r3]
 1017 0052 8022     	 mov r2,#128
 1018 0054 5200     	 lsl r2,r2,#1
 1019 0056 1A43     	 orr r2,r3
 1020 0058 111C     	 mov r1,r2
 1021 005a 7A68     	 ldr r2,[r7,#4]
 1022 005c C023     	 mov r3,#192
 1023 005e 5B00     	 lsl r3,r3,#1
 1024 0060 D150     	 str r1,[r2,r3]
 1025              	.L54:
 379:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 380:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1026              	 .loc 3 380 0
 1027 0062 BD46     	 mov sp,r7
 1028 0064 02B0     	 add sp,sp,#8
 1029              	 
 1030 0066 80BD     	 pop {r7,pc}
 1031              	 .cfi_endproc
 1032              	.LFE135:
 1034              	 .section .text.XMC_I2C_CH_MasterReceiveAck,"ax",%progbits
 1035              	 .align 2
 1036              	 .global XMC_I2C_CH_MasterReceiveAck
 1037              	 .code 16
 1038              	 .thumb_func
 1040              	XMC_I2C_CH_MasterReceiveAck:
 1041              	.LFB136:
 381:../Libraries/XMCLib/src/xmc_i2c.c **** 
 382:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master receive ack command to IN/TBUF register based on FIFO/non-FIFO modes. */
 383:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel)
 384:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1042              	 .loc 3 384 0
 1043              	 .cfi_startproc
 1044 0000 80B5     	 push {r7,lr}
 1045              	.LCFI39:
 1046              	 .cfi_def_cfa_offset 8
 1047              	 .cfi_offset 7,-8
 1048              	 .cfi_offset 14,-4
 1049 0002 82B0     	 sub sp,sp,#8
 1050              	.LCFI40:
 1051              	 .cfi_def_cfa_offset 16
 1052 0004 00AF     	 add r7,sp,#0
 1053              	.LCFI41:
 1054              	 .cfi_def_cfa_register 7
 1055 0006 7860     	 str r0,[r7,#4]
 385:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 386:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 1056              	 .loc 3 386 0
 1057 0008 7A68     	 ldr r2,[r7,#4]
 1058 000a 8423     	 mov r3,#132
 1059 000c 5B00     	 lsl r3,r3,#1
 1060 000e D258     	 ldr r2,[r2,r3]
 1061 0010 E023     	 mov r3,#224
 1062 0012 DB04     	 lsl r3,r3,#19
 1063 0014 1340     	 and r3,r2
 1064 0016 14D1     	 bne .L59
 387:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 388:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 1065              	 .loc 3 388 0
 1066 0018 C046     	 mov r8,r8
 1067              	.L60:
 1068              	 .loc 3 388 0 is_stmt 0 discriminator 1
 1069 001a 7B68     	 ldr r3,[r7,#4]
 1070 001c 181C     	 mov r0,r3
 1071 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 1072 0022 031E     	 sub r3,r0,#0
 1073 0024 802B     	 cmp r3,#128
 1074 0026 F8D0     	 beq .L60
 389:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 390:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 391:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 392:../Libraries/XMCLib/src/xmc_i2c.c **** 
 393:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 394:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 1075              	 .loc 3 394 0 is_stmt 1
 1076 0028 7A68     	 ldr r2,[r7,#4]
 1077 002a 8023     	 mov r3,#128
 1078 002c 9B01     	 lsl r3,r3,#6
 1079 002e 101C     	 mov r0,r2
 1080 0030 191C     	 mov r1,r3
 1081 0032 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 395:../Libraries/XMCLib/src/xmc_i2c.c **** 
 396:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK;
 1082              	 .loc 3 396 0
 1083 0036 7B68     	 ldr r3,[r7,#4]
 1084 0038 8021     	 mov r1,#128
 1085 003a 8022     	 mov r2,#128
 1086 003c 9200     	 lsl r2,r2,#2
 1087 003e 5A50     	 str r2,[r3,r1]
 1088 0040 05E0     	 b .L58
 1089              	.L59:
 397:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 398:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 399:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 400:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK;
 1090              	 .loc 3 400 0
 1091 0042 7A68     	 ldr r2,[r7,#4]
 1092 0044 C023     	 mov r3,#192
 1093 0046 5B00     	 lsl r3,r3,#1
 1094 0048 8021     	 mov r1,#128
 1095 004a 8900     	 lsl r1,r1,#2
 1096 004c D150     	 str r1,[r2,r3]
 1097              	.L58:
 401:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 402:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1098              	 .loc 3 402 0
 1099 004e BD46     	 mov sp,r7
 1100 0050 02B0     	 add sp,sp,#8
 1101              	 
 1102 0052 80BD     	 pop {r7,pc}
 1103              	 .cfi_endproc
 1104              	.LFE136:
 1106              	 .section .text.XMC_I2C_CH_MasterReceiveNack,"ax",%progbits
 1107              	 .align 2
 1108              	 .global XMC_I2C_CH_MasterReceiveNack
 1109              	 .code 16
 1110              	 .thumb_func
 1112              	XMC_I2C_CH_MasterReceiveNack:
 1113              	.LFB137:
 403:../Libraries/XMCLib/src/xmc_i2c.c **** 
 404:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master receive nack command to IN/TBUF register based on FIFO/non-FIFO modes. */
 405:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel)
 406:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1114              	 .loc 3 406 0
 1115              	 .cfi_startproc
 1116 0000 80B5     	 push {r7,lr}
 1117              	.LCFI42:
 1118              	 .cfi_def_cfa_offset 8
 1119              	 .cfi_offset 7,-8
 1120              	 .cfi_offset 14,-4
 1121 0002 82B0     	 sub sp,sp,#8
 1122              	.LCFI43:
 1123              	 .cfi_def_cfa_offset 16
 1124 0004 00AF     	 add r7,sp,#0
 1125              	.LCFI44:
 1126              	 .cfi_def_cfa_register 7
 1127 0006 7860     	 str r0,[r7,#4]
 407:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 408:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 1128              	 .loc 3 408 0
 1129 0008 7A68     	 ldr r2,[r7,#4]
 1130 000a 8423     	 mov r3,#132
 1131 000c 5B00     	 lsl r3,r3,#1
 1132 000e D258     	 ldr r2,[r2,r3]
 1133 0010 E023     	 mov r3,#224
 1134 0012 DB04     	 lsl r3,r3,#19
 1135 0014 1340     	 and r3,r2
 1136 0016 14D1     	 bne .L63
 409:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 410:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 1137              	 .loc 3 410 0
 1138 0018 C046     	 mov r8,r8
 1139              	.L64:
 1140              	 .loc 3 410 0 is_stmt 0 discriminator 1
 1141 001a 7B68     	 ldr r3,[r7,#4]
 1142 001c 181C     	 mov r0,r3
 1143 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 1144 0022 031E     	 sub r3,r0,#0
 1145 0024 802B     	 cmp r3,#128
 1146 0026 F8D0     	 beq .L64
 411:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 412:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 413:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 414:../Libraries/XMCLib/src/xmc_i2c.c **** 
 415:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 416:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 1147              	 .loc 3 416 0 is_stmt 1
 1148 0028 7A68     	 ldr r2,[r7,#4]
 1149 002a 8023     	 mov r3,#128
 1150 002c 9B01     	 lsl r3,r3,#6
 1151 002e 101C     	 mov r0,r2
 1152 0030 191C     	 mov r1,r3
 1153 0032 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 417:../Libraries/XMCLib/src/xmc_i2c.c **** 
 418:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK;
 1154              	 .loc 3 418 0
 1155 0036 7B68     	 ldr r3,[r7,#4]
 1156 0038 8021     	 mov r1,#128
 1157 003a C022     	 mov r2,#192
 1158 003c 9200     	 lsl r2,r2,#2
 1159 003e 5A50     	 str r2,[r3,r1]
 1160 0040 05E0     	 b .L62
 1161              	.L63:
 419:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 420:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 421:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 422:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK;
 1162              	 .loc 3 422 0
 1163 0042 7A68     	 ldr r2,[r7,#4]
 1164 0044 C023     	 mov r3,#192
 1165 0046 5B00     	 lsl r3,r3,#1
 1166 0048 C021     	 mov r1,#192
 1167 004a 8900     	 lsl r1,r1,#2
 1168 004c D150     	 str r1,[r2,r3]
 1169              	.L62:
 423:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 424:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1170              	 .loc 3 424 0
 1171 004e BD46     	 mov sp,r7
 1172 0050 02B0     	 add sp,sp,#8
 1173              	 
 1174 0052 80BD     	 pop {r7,pc}
 1175              	 .cfi_endproc
 1176              	.LFE137:
 1178              	 .section .text.XMC_I2C_CH_GetReceivedData,"ax",%progbits
 1179              	 .align 2
 1180              	 .global XMC_I2C_CH_GetReceivedData
 1181              	 .code 16
 1182              	 .thumb_func
 1184              	XMC_I2C_CH_GetReceivedData:
 1185              	.LFB138:
 425:../Libraries/XMCLib/src/xmc_i2c.c **** 
 426:../Libraries/XMCLib/src/xmc_i2c.c **** /* Reads the data from RBUF if FIFO size is 0 otherwise from OUTR. */
 427:../Libraries/XMCLib/src/xmc_i2c.c **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel)
 428:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1186              	 .loc 3 428 0
 1187              	 .cfi_startproc
 1188 0000 80B5     	 push {r7,lr}
 1189              	.LCFI45:
 1190              	 .cfi_def_cfa_offset 8
 1191              	 .cfi_offset 7,-8
 1192              	 .cfi_offset 14,-4
 1193 0002 84B0     	 sub sp,sp,#16
 1194              	.LCFI46:
 1195              	 .cfi_def_cfa_offset 24
 1196 0004 00AF     	 add r7,sp,#0
 1197              	.LCFI47:
 1198              	 .cfi_def_cfa_register 7
 1199 0006 7860     	 str r0,[r7,#4]
 429:../Libraries/XMCLib/src/xmc_i2c.c ****   uint8_t retval;
 430:../Libraries/XMCLib/src/xmc_i2c.c **** 
 431:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 432:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->RBCTR & USIC_CH_RBCTR_SIZE_Msk) == 0U)
 1200              	 .loc 3 432 0
 1201 0008 7A68     	 ldr r2,[r7,#4]
 1202 000a 8623     	 mov r3,#134
 1203 000c 5B00     	 lsl r3,r3,#1
 1204 000e D258     	 ldr r2,[r2,r3]
 1205 0010 E023     	 mov r3,#224
 1206 0012 DB04     	 lsl r3,r3,#19
 1207 0014 1340     	 and r3,r2
 1208 0016 05D1     	 bne .L67
 433:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 434:../Libraries/XMCLib/src/xmc_i2c.c ****     retval = (uint8_t)channel->RBUF;
 1209              	 .loc 3 434 0
 1210 0018 7B68     	 ldr r3,[r7,#4]
 1211 001a 5A6D     	 ldr r2,[r3,#84]
 1212 001c 0F23     	 mov r3,#15
 1213 001e FB18     	 add r3,r7,r3
 1214 0020 1A70     	 strb r2,[r3]
 1215 0022 06E0     	 b .L68
 1216              	.L67:
 435:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 436:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 437:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 438:../Libraries/XMCLib/src/xmc_i2c.c ****     retval = (uint8_t)channel->OUTR;
 1217              	 .loc 3 438 0
 1218 0024 7A68     	 ldr r2,[r7,#4]
 1219 0026 8E23     	 mov r3,#142
 1220 0028 5B00     	 lsl r3,r3,#1
 1221 002a D258     	 ldr r2,[r2,r3]
 1222 002c 0F23     	 mov r3,#15
 1223 002e FB18     	 add r3,r7,r3
 1224 0030 1A70     	 strb r2,[r3]
 1225              	.L68:
 439:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 440:../Libraries/XMCLib/src/xmc_i2c.c **** 
 441:../Libraries/XMCLib/src/xmc_i2c.c ****   return retval;
 1226              	 .loc 3 441 0
 1227 0032 0F23     	 mov r3,#15
 1228 0034 FB18     	 add r3,r7,r3
 1229 0036 1B78     	 ldrb r3,[r3]
 442:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1230              	 .loc 3 442 0
 1231 0038 181C     	 mov r0,r3
 1232 003a BD46     	 mov sp,r7
 1233 003c 04B0     	 add sp,sp,#16
 1234              	 
 1235 003e 80BD     	 pop {r7,pc}
 1236              	 .cfi_endproc
 1237              	.LFE138:
 1239              	 .section .text.XMC_I2C_CH_Stop,"ax",%progbits
 1240              	 .align 2
 1241              	 .global XMC_I2C_CH_Stop
 1242              	 .code 16
 1243              	 .thumb_func
 1245              	XMC_I2C_CH_Stop:
 1246              	.LFB139:
 443:../Libraries/XMCLib/src/xmc_i2c.c **** 
 444:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the operating mode of USIC to IDLE */
 445:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel)
 446:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1247              	 .loc 3 446 0
 1248              	 .cfi_startproc
 1249 0000 80B5     	 push {r7,lr}
 1250              	.LCFI48:
 1251              	 .cfi_def_cfa_offset 8
 1252              	 .cfi_offset 7,-8
 1253              	 .cfi_offset 14,-4
 1254 0002 84B0     	 sub sp,sp,#16
 1255              	.LCFI49:
 1256              	 .cfi_def_cfa_offset 24
 1257 0004 00AF     	 add r7,sp,#0
 1258              	.LCFI50:
 1259              	 .cfi_def_cfa_register 7
 1260 0006 7860     	 str r0,[r7,#4]
 447:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_STATUS_t status = XMC_I2C_CH_STATUS_OK;
 1261              	 .loc 3 447 0
 1262 0008 0F23     	 mov r3,#15
 1263 000a FB18     	 add r3,r7,r3
 1264 000c 0022     	 mov r2,#0
 1265 000e 1A70     	 strb r2,[r3]
 448:../Libraries/XMCLib/src/xmc_i2c.c **** 
 449:../Libraries/XMCLib/src/xmc_i2c.c ****   if (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 1266              	 .loc 3 449 0
 1267 0010 7B68     	 ldr r3,[r7,#4]
 1268 0012 181C     	 mov r0,r3
 1269 0014 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 1270 0018 031E     	 sub r3,r0,#0
 1271 001a 802B     	 cmp r3,#128
 1272 001c 04D1     	 bne .L71
 450:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 451:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_I2C_CH_STATUS_BUSY;
 1273              	 .loc 3 451 0
 1274 001e 0F23     	 mov r3,#15
 1275 0020 FB18     	 add r3,r7,r3
 1276 0022 0222     	 mov r2,#2
 1277 0024 1A70     	 strb r2,[r3]
 1278 0026 04E0     	 b .L72
 1279              	.L71:
 452:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 453:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 454:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 455:../Libraries/XMCLib/src/xmc_i2c.c ****     /* USIC channel in IDLE mode */
 456:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_IDLE);
 1280              	 .loc 3 456 0
 1281 0028 7B68     	 ldr r3,[r7,#4]
 1282 002a 181C     	 mov r0,r3
 1283 002c 0021     	 mov r1,#0
 1284 002e FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 1285              	.L72:
 457:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 458:../Libraries/XMCLib/src/xmc_i2c.c ****   return status;
 1286              	 .loc 3 458 0
 1287 0032 0F23     	 mov r3,#15
 1288 0034 FB18     	 add r3,r7,r3
 1289 0036 1B78     	 ldrb r3,[r3]
 459:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1290              	 .loc 3 459 0
 1291 0038 181C     	 mov r0,r3
 1292 003a BD46     	 mov sp,r7
 1293 003c 04B0     	 add sp,sp,#16
 1294              	 
 1295 003e 80BD     	 pop {r7,pc}
 1296              	 .cfi_endproc
 1297              	.LFE139:
 1299              	 .section .text.XMC_I2C_CH_EnableEvent,"ax",%progbits
 1300              	 .align 2
 1301              	 .global XMC_I2C_CH_EnableEvent
 1302              	 .code 16
 1303              	 .thumb_func
 1305              	XMC_I2C_CH_EnableEvent:
 1306              	.LFB140:
 460:../Libraries/XMCLib/src/xmc_i2c.c **** 
 461:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 462:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1307              	 .loc 3 462 0
 1308              	 .cfi_startproc
 1309 0000 80B5     	 push {r7,lr}
 1310              	.LCFI51:
 1311              	 .cfi_def_cfa_offset 8
 1312              	 .cfi_offset 7,-8
 1313              	 .cfi_offset 14,-4
 1314 0002 82B0     	 sub sp,sp,#8
 1315              	.LCFI52:
 1316              	 .cfi_def_cfa_offset 16
 1317 0004 00AF     	 add r7,sp,#0
 1318              	.LCFI53:
 1319              	 .cfi_def_cfa_register 7
 1320 0006 7860     	 str r0,[r7,#4]
 1321 0008 3960     	 str r1,[r7]
 463:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR |= (event & 0x1fc00U);
 1322              	 .loc 3 463 0
 1323 000a 7B68     	 ldr r3,[r7,#4]
 1324 000c 1A6C     	 ldr r2,[r3,#64]
 1325 000e 3968     	 ldr r1,[r7]
 1326 0010 FE23     	 mov r3,#254
 1327 0012 5B02     	 lsl r3,r3,#9
 1328 0014 0B40     	 and r3,r1
 1329 0016 1A43     	 orr r2,r3
 1330 0018 7B68     	 ldr r3,[r7,#4]
 1331 001a 1A64     	 str r2,[r3,#64]
 464:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PCR_IICMode |= ((event) & 0x41fc0000U);
 1332              	 .loc 3 464 0
 1333 001c 7B68     	 ldr r3,[r7,#4]
 1334 001e DA6B     	 ldr r2,[r3,#60]
 1335 0020 3B68     	 ldr r3,[r7]
 1336 0022 0449     	 ldr r1,.L75
 1337 0024 0B40     	 and r3,r1
 1338 0026 1A43     	 orr r2,r3
 1339 0028 7B68     	 ldr r3,[r7,#4]
 1340 002a DA63     	 str r2,[r3,#60]
 465:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1341              	 .loc 3 465 0
 1342 002c BD46     	 mov sp,r7
 1343 002e 02B0     	 add sp,sp,#8
 1344              	 
 1345 0030 80BD     	 pop {r7,pc}
 1346              	.L76:
 1347 0032 C046     	 .align 2
 1348              	.L75:
 1349 0034 0000FC41 	 .word 1107034112
 1350              	 .cfi_endproc
 1351              	.LFE140:
 1353              	 .section .text.XMC_I2C_CH_DisableEvent,"ax",%progbits
 1354              	 .align 2
 1355              	 .global XMC_I2C_CH_DisableEvent
 1356              	 .code 16
 1357              	 .thumb_func
 1359              	XMC_I2C_CH_DisableEvent:
 1360              	.LFB141:
 466:../Libraries/XMCLib/src/xmc_i2c.c **** 
 467:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 468:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1361              	 .loc 3 468 0
 1362              	 .cfi_startproc
 1363 0000 80B5     	 push {r7,lr}
 1364              	.LCFI54:
 1365              	 .cfi_def_cfa_offset 8
 1366              	 .cfi_offset 7,-8
 1367              	 .cfi_offset 14,-4
 1368 0002 82B0     	 sub sp,sp,#8
 1369              	.LCFI55:
 1370              	 .cfi_def_cfa_offset 16
 1371 0004 00AF     	 add r7,sp,#0
 1372              	.LCFI56:
 1373              	 .cfi_def_cfa_register 7
 1374 0006 7860     	 str r0,[r7,#4]
 1375 0008 3960     	 str r1,[r7]
 469:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR &= (uint32_t)~(event & 0x1fc00U);
 1376              	 .loc 3 469 0
 1377 000a 7B68     	 ldr r3,[r7,#4]
 1378 000c 1B6C     	 ldr r3,[r3,#64]
 1379 000e 3968     	 ldr r1,[r7]
 1380 0010 FE22     	 mov r2,#254
 1381 0012 5202     	 lsl r2,r2,#9
 1382 0014 0A40     	 and r2,r1
 1383 0016 D243     	 mvn r2,r2
 1384 0018 1A40     	 and r2,r3
 1385 001a 7B68     	 ldr r3,[r7,#4]
 1386 001c 1A64     	 str r2,[r3,#64]
 470:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PCR_IICMode &= (uint32_t)~((event) & 0x41fc0000U);
 1387              	 .loc 3 470 0
 1388 001e 7B68     	 ldr r3,[r7,#4]
 1389 0020 DB6B     	 ldr r3,[r3,#60]
 1390 0022 3A68     	 ldr r2,[r7]
 1391 0024 0449     	 ldr r1,.L78
 1392 0026 0A40     	 and r2,r1
 1393 0028 D243     	 mvn r2,r2
 1394 002a 1A40     	 and r2,r3
 1395 002c 7B68     	 ldr r3,[r7,#4]
 1396 002e DA63     	 str r2,[r3,#60]
 471:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1397              	 .loc 3 471 0
 1398 0030 BD46     	 mov sp,r7
 1399 0032 02B0     	 add sp,sp,#8
 1400              	 
 1401 0034 80BD     	 pop {r7,pc}
 1402              	.L79:
 1403 0036 C046     	 .align 2
 1404              	.L78:
 1405 0038 0000FC41 	 .word 1107034112
 1406              	 .cfi_endproc
 1407              	.LFE141:
 1409              	 .text
 1410              	.Letext0:
 1411              	 .file 4 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1412              	 .file 5 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1413              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_i2c.c
    {standard input}:18     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:22     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:56     .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:60     .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:99     .text.XMC_I2C_CH_ClearStatusFlag:00000000 $t
    {standard input}:103    .text.XMC_I2C_CH_ClearStatusFlag:00000000 XMC_I2C_CH_ClearStatusFlag
    {standard input}:137    .text.XMC_I2C_CH_InitEx:00000000 $t
    {standard input}:142    .text.XMC_I2C_CH_InitEx:00000000 XMC_I2C_CH_InitEx
    {standard input}:225    .text.XMC_I2C_CH_SetSlaveAddress:00000000 XMC_I2C_CH_SetSlaveAddress
    {standard input}:479    .text.XMC_I2C_CH_SetBaudrateEx:00000000 XMC_I2C_CH_SetBaudrateEx
    {standard input}:215    .text.XMC_I2C_CH_InitEx:00000064 $d
    {standard input}:220    .text.XMC_I2C_CH_SetSlaveAddress:00000000 $t
    {standard input}:301    .text.XMC_I2C_CH_GetSlaveAddress:00000000 $t
    {standard input}:306    .text.XMC_I2C_CH_GetSlaveAddress:00000000 XMC_I2C_CH_GetSlaveAddress
    {standard input}:364    .text.XMC_I2C_CH_SetBaudrate:00000000 $t
    {standard input}:369    .text.XMC_I2C_CH_SetBaudrate:00000000 XMC_I2C_CH_SetBaudrate
    {standard input}:467    .text.XMC_I2C_CH_SetBaudrate:0000008c $d
    {standard input}:474    .text.XMC_I2C_CH_SetBaudrateEx:00000000 $t
    {standard input}:605    .text.XMC_I2C_CH_SetBaudrateEx:000000c0 $d
    {standard input}:612    .text.XMC_I2C_CH_MasterStart:00000000 $t
    {standard input}:617    .text.XMC_I2C_CH_MasterStart:00000000 XMC_I2C_CH_MasterStart
    {standard input}:709    .text.XMC_I2C_CH_MasterRepeatedStart:00000000 $t
    {standard input}:714    .text.XMC_I2C_CH_MasterRepeatedStart:00000000 XMC_I2C_CH_MasterRepeatedStart
    {standard input}:806    .text.XMC_I2C_CH_MasterStop:00000000 $t
    {standard input}:811    .text.XMC_I2C_CH_MasterStop:00000000 XMC_I2C_CH_MasterStop
    {standard input}:878    .text.XMC_I2C_CH_MasterTransmit:00000000 $t
    {standard input}:883    .text.XMC_I2C_CH_MasterTransmit:00000000 XMC_I2C_CH_MasterTransmit
    {standard input}:953    .text.XMC_I2C_CH_SlaveTransmit:00000000 $t
    {standard input}:958    .text.XMC_I2C_CH_SlaveTransmit:00000000 XMC_I2C_CH_SlaveTransmit
    {standard input}:1035   .text.XMC_I2C_CH_MasterReceiveAck:00000000 $t
    {standard input}:1040   .text.XMC_I2C_CH_MasterReceiveAck:00000000 XMC_I2C_CH_MasterReceiveAck
    {standard input}:1107   .text.XMC_I2C_CH_MasterReceiveNack:00000000 $t
    {standard input}:1112   .text.XMC_I2C_CH_MasterReceiveNack:00000000 XMC_I2C_CH_MasterReceiveNack
    {standard input}:1179   .text.XMC_I2C_CH_GetReceivedData:00000000 $t
    {standard input}:1184   .text.XMC_I2C_CH_GetReceivedData:00000000 XMC_I2C_CH_GetReceivedData
    {standard input}:1240   .text.XMC_I2C_CH_Stop:00000000 $t
    {standard input}:1245   .text.XMC_I2C_CH_Stop:00000000 XMC_I2C_CH_Stop
    {standard input}:1300   .text.XMC_I2C_CH_EnableEvent:00000000 $t
    {standard input}:1305   .text.XMC_I2C_CH_EnableEvent:00000000 XMC_I2C_CH_EnableEvent
    {standard input}:1349   .text.XMC_I2C_CH_EnableEvent:00000034 $d
    {standard input}:1354   .text.XMC_I2C_CH_DisableEvent:00000000 $t
    {standard input}:1359   .text.XMC_I2C_CH_DisableEvent:00000000 XMC_I2C_CH_DisableEvent
    {standard input}:1405   .text.XMC_I2C_CH_DisableEvent:00000038 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_Enable
XMC_USIC_CH_SetBaudrate
XMC_USIC_CH_SetBaudrateEx
