   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_ledts.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_LEDTS_InitGlobal,"ax",%progbits
  18              	 .align 2
  19              	 .global XMC_LEDTS_InitGlobal
  20              	 .code 16
  21              	 .thumb_func
  23              	XMC_LEDTS_InitGlobal:
  24              	.LFB64:
  25              	 .file 1 "../Libraries/XMCLib/src/xmc_ledts.c"
   1:../Libraries/XMCLib/src/xmc_ledts.c **** /**
   2:../Libraries/XMCLib/src/xmc_ledts.c ****  * @file xmc_ledts.c
   3:../Libraries/XMCLib/src/xmc_ledts.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   5:../Libraries/XMCLib/src/xmc_ledts.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ledts.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_ledts.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   9:../Libraries/XMCLib/src/xmc_ledts.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ledts.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  12:../Libraries/XMCLib/src/xmc_ledts.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  14:../Libraries/XMCLib/src/xmc_ledts.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_ledts.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_ledts.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_ledts.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_ledts.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_ledts.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  21:../Libraries/XMCLib/src/xmc_ledts.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_ledts.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_ledts.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_ledts.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_ledts.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_ledts.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  28:../Libraries/XMCLib/src/xmc_ledts.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_ledts.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_ledts.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_ledts.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_ledts.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_ledts.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_ledts.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  36:../Libraries/XMCLib/src/xmc_ledts.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_ledts.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_ledts.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_ledts.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  41:../Libraries/XMCLib/src/xmc_ledts.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_ledts.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  44:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Initial draft <br>
  46:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - New API added: XMC_LEDTS_SetActivePADNo() <br>
  47:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  48:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-06-20:
  49:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  51:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2017-02-25:
  52:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - XMC_LEDTS_InitGlobal() fixed compilation warnings
  53:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  54:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2019-12-16:
  55:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  56:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  57:../Libraries/XMCLib/src/xmc_ledts.c ****  * <b>Detailed description of file:</b><br>
  58:../Libraries/XMCLib/src/xmc_ledts.c ****  * APIs for the functional blocks of LEDTS have been defined:<br>
  59:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- GLOBAL (APIs prefixed with LEDTS_GLOBAL_) <br>
  60:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration
  61:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  62:../Libraries/XMCLib/src/xmc_ledts.c ****  * @endcond
  63:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  64:../Libraries/XMCLib/src/xmc_ledts.c ****  */
  65:../Libraries/XMCLib/src/xmc_ledts.c **** 
  66:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_ledts.c ****  * HEADER FILES
  68:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_ledts.h"
  70:../Libraries/XMCLib/src/xmc_ledts.c **** 
  71:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS0)
  72:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_scu.h"
  73:../Libraries/XMCLib/src/xmc_ledts.c **** 
  74:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  75:../Libraries/XMCLib/src/xmc_ledts.c ****  * MACROS
  76:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_ledts.c **** #define XMC_LEDTS_CLOCK_NOT_RUNNING 0U
  78:../Libraries/XMCLib/src/xmc_ledts.c **** 
  79:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_ledts.c ****  * ENUMS
  81:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  82:../Libraries/XMCLib/src/xmc_ledts.c **** 
  83:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_ledts.c ****  * DATA STRUCTURES
  85:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  86:../Libraries/XMCLib/src/xmc_ledts.c **** 
  87:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  88:../Libraries/XMCLib/src/xmc_ledts.c ****  * GLOBAL DATA
  89:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  90:../Libraries/XMCLib/src/xmc_ledts.c **** 
  91:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  92:../Libraries/XMCLib/src/xmc_ledts.c ****  * LOCAL/UTILITY ROUTINES
  93:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  94:../Libraries/XMCLib/src/xmc_ledts.c **** 
  95:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  96:../Libraries/XMCLib/src/xmc_ledts.c ****  * API IMPLEMENTATION
  97:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  98:../Libraries/XMCLib/src/xmc_ledts.c **** 
  99:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 100:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of global register
 101:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 102:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitGlobal(XMC_LEDTS_t *const ledts, const XMC_LEDTS_GLOBAL_CONFIG_t *
 103:../Libraries/XMCLib/src/xmc_ledts.c **** {
  26              	 .loc 1 103 0
  27              	 .cfi_startproc
  28 0000 80B5     	 push {r7,lr}
  29              	.LCFI0:
  30              	 .cfi_def_cfa_offset 8
  31              	 .cfi_offset 7,-8
  32              	 .cfi_offset 14,-4
  33 0002 82B0     	 sub sp,sp,#8
  34              	.LCFI1:
  35              	 .cfi_def_cfa_offset 16
  36 0004 00AF     	 add r7,sp,#0
  37              	.LCFI2:
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
  40 0008 3960     	 str r1,[r7]
 104:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 105:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Null Pointer", (config != (XMC_LEDTS_GLOBAL_CONFIG_t *)NULL));
 106:../Libraries/XMCLib/src/xmc_ledts.c **** 
 107:../Libraries/XMCLib/src/xmc_ledts.c ****   if (ledts == XMC_LEDTS0)
  41              	 .loc 1 107 0
  42 000a 7B68     	 ldr r3,[r7,#4]
  43 000c 134A     	 ldr r2,.L7
  44 000e 9342     	 cmp r3,r2
  45 0010 03D1     	 bne .L2
 108:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 109:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 110:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS0);
  46              	 .loc 1 110 0
  47 0012 2020     	 mov r0,#32
  48 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  49 0018 10E0     	 b .L3
  50              	.L2:
 111:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 112:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 113:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS0);
 114:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 115:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 116:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS1)
 117:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS1)
  51              	 .loc 1 117 0
  52 001a 7B68     	 ldr r3,[r7,#4]
  53 001c 104A     	 ldr r2,.L7+4
  54 001e 9342     	 cmp r3,r2
  55 0020 03D1     	 bne .L4
 118:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 119:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 120:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS1);
  56              	 .loc 1 120 0
  57 0022 4020     	 mov r0,#64
  58 0024 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  59 0028 08E0     	 b .L3
  60              	.L4:
 121:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 122:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 123:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS1);
 124:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 125:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 126:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 127:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS2)
 128:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS2)
  61              	 .loc 1 128 0
  62 002a 7B68     	 ldr r3,[r7,#4]
  63 002c 0D4A     	 ldr r2,.L7+8
  64 002e 9342     	 cmp r3,r2
  65 0030 04D1     	 bne .L3
 129:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 130:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 131:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS2);
  66              	 .loc 1 131 0
  67 0032 8023     	 mov r3,#128
  68 0034 1B03     	 lsl r3,r3,#12
  69 0036 181C     	 mov r0,r3
  70 0038 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  71              	.L3:
 132:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 133:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 134:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS2);
 135:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 136:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 137:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 138:../Libraries/XMCLib/src/xmc_ledts.c ****   else
 139:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 140:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_ASSERT("XMC_LEDTS_InitGlobal:Invalid Module Pointer", 0);
 141:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 142:../Libraries/XMCLib/src/xmc_ledts.c **** 
 143:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
  72              	 .loc 1 143 0
  73 003c 7B68     	 ldr r3,[r7,#4]
  74 003e 5B68     	 ldr r3,[r3,#4]
  75 0040 1B0C     	 lsr r3,r3,#16
  76 0042 1B04     	 lsl r3,r3,#16
  77 0044 01D0     	 beq .L5
 144:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 145:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
  78              	 .loc 1 145 0
  79 0046 0123     	 mov r3,#1
  80 0048 04E0     	 b .L6
  81              	.L5:
 146:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 147:../Libraries/XMCLib/src/xmc_ledts.c **** 
 148:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL = config->globctl;
  82              	 .loc 1 148 0
  83 004a 3B68     	 ldr r3,[r7]
  84 004c 1A68     	 ldr r2,[r3]
  85 004e 7B68     	 ldr r3,[r7,#4]
  86 0050 5A60     	 str r2,[r3,#4]
 149:../Libraries/XMCLib/src/xmc_ledts.c **** 
 150:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
  87              	 .loc 1 150 0
  88 0052 0023     	 mov r3,#0
  89              	.L6:
 151:../Libraries/XMCLib/src/xmc_ledts.c **** }
  90              	 .loc 1 151 0
  91 0054 181C     	 mov r0,r3
  92 0056 BD46     	 mov sp,r7
  93 0058 02B0     	 add sp,sp,#8
  94              	 
  95 005a 80BD     	 pop {r7,pc}
  96              	.L8:
  97              	 .align 2
  98              	.L7:
  99 005c 00000250 	 .word 1342308352
 100 0060 00040250 	 .word 1342309376
 101 0064 00080250 	 .word 1342310400
 102              	 .cfi_endproc
 103              	.LFE64:
 105              	 .section .text.XMC_LEDTS_InitLED,"ax",%progbits
 106              	 .align 2
 107              	 .global XMC_LEDTS_InitLED
 108              	 .code 16
 109              	 .thumb_func
 111              	XMC_LEDTS_InitLED:
 112              	.LFB65:
 152:../Libraries/XMCLib/src/xmc_ledts.c **** 
 153:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 154:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for LED-driving function
 155:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 156:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitLED(XMC_LEDTS_t *const ledts, const XMC_LEDTS_LED_CONFIG_t *config
 157:../Libraries/XMCLib/src/xmc_ledts.c **** {
 113              	 .loc 1 157 0
 114              	 .cfi_startproc
 115 0000 80B5     	 push {r7,lr}
 116              	.LCFI3:
 117              	 .cfi_def_cfa_offset 8
 118              	 .cfi_offset 7,-8
 119              	 .cfi_offset 14,-4
 120 0002 82B0     	 sub sp,sp,#8
 121              	.LCFI4:
 122              	 .cfi_def_cfa_offset 16
 123 0004 00AF     	 add r7,sp,#0
 124              	.LCFI5:
 125              	 .cfi_def_cfa_register 7
 126 0006 7860     	 str r0,[r7,#4]
 127 0008 3960     	 str r1,[r7]
 158:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 159:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Null Pointer", (config != (XMC_LEDTS_LED_CONFIG_t *)NULL));
 160:../Libraries/XMCLib/src/xmc_ledts.c **** 
 161:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 128              	 .loc 1 161 0
 129 000a 7B68     	 ldr r3,[r7,#4]
 130 000c 5B68     	 ldr r3,[r3,#4]
 131 000e 1B0C     	 lsr r3,r3,#16
 132 0010 1B04     	 lsl r3,r3,#16
 133 0012 01D0     	 beq .L10
 162:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 163:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 134              	 .loc 1 163 0
 135 0014 0123     	 mov r3,#1
 136 0016 13E0     	 b .L11
 137              	.L10:
 164:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 165:../Libraries/XMCLib/src/xmc_ledts.c **** 
 166:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_COLLEV_Msk | LEDTS_FNCTL_NR_LEDCOL_Msk);
 138              	 .loc 1 166 0
 139 0018 7B68     	 ldr r3,[r7,#4]
 140 001a 9B68     	 ldr r3,[r3,#8]
 141 001c 1B01     	 lsl r3,r3,#4
 142 001e 1A09     	 lsr r2,r3,#4
 143 0020 7B68     	 ldr r3,[r7,#4]
 144 0022 9A60     	 str r2,[r3,#8]
 167:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 145              	 .loc 1 167 0
 146 0024 7B68     	 ldr r3,[r7,#4]
 147 0026 9A68     	 ldr r2,[r3,#8]
 148 0028 3B68     	 ldr r3,[r7]
 149 002a 1B68     	 ldr r3,[r3]
 150 002c 1A43     	 orr r2,r3
 151 002e 7B68     	 ldr r3,[r7,#4]
 152 0030 9A60     	 str r2,[r3,#8]
 168:../Libraries/XMCLib/src/xmc_ledts.c **** 
 169:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable LED function */
 170:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_LD_EN_Msk;
 153              	 .loc 1 170 0
 154 0032 7B68     	 ldr r3,[r7,#4]
 155 0034 5B68     	 ldr r3,[r3,#4]
 156 0036 0222     	 mov r2,#2
 157 0038 1A43     	 orr r2,r3
 158 003a 7B68     	 ldr r3,[r7,#4]
 159 003c 5A60     	 str r2,[r3,#4]
 171:../Libraries/XMCLib/src/xmc_ledts.c **** 
 172:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 160              	 .loc 1 172 0
 161 003e 0023     	 mov r3,#0
 162              	.L11:
 173:../Libraries/XMCLib/src/xmc_ledts.c **** }
 163              	 .loc 1 173 0
 164 0040 181C     	 mov r0,r3
 165 0042 BD46     	 mov sp,r7
 166 0044 02B0     	 add sp,sp,#8
 167              	 
 168 0046 80BD     	 pop {r7,pc}
 169              	 .cfi_endproc
 170              	.LFE65:
 172              	 .section .text.XMC_LEDTS_InitTSBasic,"ax",%progbits
 173              	 .align 2
 174              	 .global XMC_LEDTS_InitTSBasic
 175              	 .code 16
 176              	 .thumb_func
 178              	XMC_LEDTS_InitTSBasic:
 179              	.LFB66:
 174:../Libraries/XMCLib/src/xmc_ledts.c **** 
 175:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 176:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for basic Touch-Sense control function
 177:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 178:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSBasic(XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_BASIC_
 179:../Libraries/XMCLib/src/xmc_ledts.c **** {
 180              	 .loc 1 179 0
 181              	 .cfi_startproc
 182 0000 80B5     	 push {r7,lr}
 183              	.LCFI6:
 184              	 .cfi_def_cfa_offset 8
 185              	 .cfi_offset 7,-8
 186              	 .cfi_offset 14,-4
 187 0002 84B0     	 sub sp,sp,#16
 188              	.LCFI7:
 189              	 .cfi_def_cfa_offset 24
 190 0004 00AF     	 add r7,sp,#0
 191              	.LCFI8:
 192              	 .cfi_def_cfa_register 7
 193 0006 7860     	 str r0,[r7,#4]
 194 0008 3960     	 str r1,[r7]
 180:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 181:../Libraries/XMCLib/src/xmc_ledts.c **** 
 182:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 183:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_BASIC_t *)NULL
 184:../Libraries/XMCLib/src/xmc_ledts.c **** 
 185:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 195              	 .loc 1 185 0
 196 000a 7B68     	 ldr r3,[r7,#4]
 197 000c 5B68     	 ldr r3,[r3,#4]
 198 000e 1B0C     	 lsr r3,r3,#16
 199 0010 1B04     	 lsl r3,r3,#16
 200 0012 01D0     	 beq .L13
 186:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 187:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 201              	 .loc 1 187 0
 202 0014 0123     	 mov r3,#1
 203 0016 15E0     	 b .L14
 204              	.L13:
 188:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 189:../Libraries/XMCLib/src/xmc_ledts.c **** 
 190:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_ACCCNT_Msk | LEDTS_FNCTL_TSCCMP_Msk | LEDTS_FNCTL_TSCTRR_Msk | LEDTS_FNCTL_TS
 205              	 .loc 1 190 0
 206 0018 0C4B     	 ldr r3,.L15
 207 001a FB60     	 str r3,[r7,#12]
 191:../Libraries/XMCLib/src/xmc_ledts.c ****           LEDTS_FNCTL_NR_TSIN_Msk);
 192:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 208              	 .loc 1 192 0
 209 001c 7B68     	 ldr r3,[r7,#4]
 210 001e 9B68     	 ldr r3,[r3,#8]
 211 0020 FA68     	 ldr r2,[r7,#12]
 212 0022 1A40     	 and r2,r3
 213 0024 7B68     	 ldr r3,[r7,#4]
 214 0026 9A60     	 str r2,[r3,#8]
 193:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 215              	 .loc 1 193 0
 216 0028 7B68     	 ldr r3,[r7,#4]
 217 002a 9A68     	 ldr r2,[r3,#8]
 218 002c 3B68     	 ldr r3,[r7]
 219 002e 1B68     	 ldr r3,[r3]
 220 0030 1A43     	 orr r2,r3
 221 0032 7B68     	 ldr r3,[r7,#4]
 222 0034 9A60     	 str r2,[r3,#8]
 194:../Libraries/XMCLib/src/xmc_ledts.c **** 
 195:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable TS function */
 196:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_TS_EN_Msk;
 223              	 .loc 1 196 0
 224 0036 7B68     	 ldr r3,[r7,#4]
 225 0038 5B68     	 ldr r3,[r3,#4]
 226 003a 0122     	 mov r2,#1
 227 003c 1A43     	 orr r2,r3
 228 003e 7B68     	 ldr r3,[r7,#4]
 229 0040 5A60     	 str r2,[r3,#4]
 197:../Libraries/XMCLib/src/xmc_ledts.c **** 
 198:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 230              	 .loc 1 198 0
 231 0042 0023     	 mov r3,#0
 232              	.L14:
 199:../Libraries/XMCLib/src/xmc_ledts.c **** }
 233              	 .loc 1 199 0
 234 0044 181C     	 mov r0,r3
 235 0046 BD46     	 mov sp,r7
 236 0048 04B0     	 add sp,sp,#16
 237              	 
 238 004a 80BD     	 pop {r7,pc}
 239              	.L16:
 240              	 .align 2
 241              	.L15:
 242 004c FFFF60F0 	 .word -262078465
 243              	 .cfi_endproc
 244              	.LFE66:
 246              	 .section .text.XMC_LEDTS_InitTSAdvanced,"ax",%progbits
 247              	 .align 2
 248              	 .global XMC_LEDTS_InitTSAdvanced
 249              	 .code 16
 250              	 .thumb_func
 252              	XMC_LEDTS_InitTSAdvanced:
 253              	.LFB67:
 200:../Libraries/XMCLib/src/xmc_ledts.c **** 
 201:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 202:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for advanced Touch-Sense control function
 203:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 204:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSAdvanced (XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_AD
 205:../Libraries/XMCLib/src/xmc_ledts.c **** {
 254              	 .loc 1 205 0
 255              	 .cfi_startproc
 256 0000 80B5     	 push {r7,lr}
 257              	.LCFI9:
 258              	 .cfi_def_cfa_offset 8
 259              	 .cfi_offset 7,-8
 260              	 .cfi_offset 14,-4
 261 0002 84B0     	 sub sp,sp,#16
 262              	.LCFI10:
 263              	 .cfi_def_cfa_offset 24
 264 0004 00AF     	 add r7,sp,#0
 265              	.LCFI11:
 266              	 .cfi_def_cfa_register 7
 267 0006 7860     	 str r0,[r7,#4]
 268 0008 3960     	 str r1,[r7]
 206:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 207:../Libraries/XMCLib/src/xmc_ledts.c **** 
 208:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 209:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_ADVANCED_t 
 210:../Libraries/XMCLib/src/xmc_ledts.c **** 
 211:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 269              	 .loc 1 211 0
 270 000a 7B68     	 ldr r3,[r7,#4]
 271 000c 5B68     	 ldr r3,[r3,#4]
 272 000e 1B0C     	 lsr r3,r3,#16
 273 0010 1B04     	 lsl r3,r3,#16
 274 0012 01D0     	 beq .L18
 212:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 213:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 275              	 .loc 1 213 0
 276 0014 0123     	 mov r3,#1
 277 0016 1EE0     	 b .L19
 278              	.L18:
 214:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 215:../Libraries/XMCLib/src/xmc_ledts.c **** 
 216:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_GLOBCTL_MASKVAL_Msk | LEDTS_GLOBCTL_FENVAL_Msk);
 279              	 .loc 1 216 0
 280 0018 114B     	 ldr r3,.L20
 281 001a FB60     	 str r3,[r7,#12]
 217:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= (reg);
 282              	 .loc 1 217 0
 283 001c 7B68     	 ldr r3,[r7,#4]
 284 001e 5B68     	 ldr r3,[r3,#4]
 285 0020 FA68     	 ldr r2,[r7,#12]
 286 0022 1A40     	 and r2,r3
 287 0024 7B68     	 ldr r3,[r7,#4]
 288 0026 5A60     	 str r2,[r3,#4]
 218:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= (config->globctl);
 289              	 .loc 1 218 0
 290 0028 7B68     	 ldr r3,[r7,#4]
 291 002a 5A68     	 ldr r2,[r3,#4]
 292 002c 3B68     	 ldr r3,[r7]
 293 002e 1B68     	 ldr r3,[r3]
 294 0030 1A43     	 orr r2,r3
 295 0032 7B68     	 ldr r3,[r7,#4]
 296 0034 5A60     	 str r2,[r3,#4]
 219:../Libraries/XMCLib/src/xmc_ledts.c **** 
 220:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_PADT_Msk | LEDTS_FNCTL_PADTSW_Msk | LEDTS_FNCTL_EPULL_Msk | LEDTS_FNCTL_TSOEX
 297              	 .loc 1 220 0
 298 0036 0B4B     	 ldr r3,.L20+4
 299 0038 FB60     	 str r3,[r7,#12]
 221:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 300              	 .loc 1 221 0
 301 003a 7B68     	 ldr r3,[r7,#4]
 302 003c 9B68     	 ldr r3,[r3,#8]
 303 003e FA68     	 ldr r2,[r7,#12]
 304 0040 1A40     	 and r2,r3
 305 0042 7B68     	 ldr r3,[r7,#4]
 306 0044 9A60     	 str r2,[r3,#8]
 222:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 307              	 .loc 1 222 0
 308 0046 7B68     	 ldr r3,[r7,#4]
 309 0048 9A68     	 ldr r2,[r3,#8]
 310 004a 3B68     	 ldr r3,[r7]
 311 004c 5B68     	 ldr r3,[r3,#4]
 312 004e 1A43     	 orr r2,r3
 313 0050 7B68     	 ldr r3,[r7,#4]
 314 0052 9A60     	 str r2,[r3,#8]
 223:../Libraries/XMCLib/src/xmc_ledts.c **** 
 224:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 315              	 .loc 1 224 0
 316 0054 0023     	 mov r3,#0
 317              	.L19:
 225:../Libraries/XMCLib/src/xmc_ledts.c **** }
 318              	 .loc 1 225 0
 319 0056 181C     	 mov r0,r3
 320 0058 BD46     	 mov sp,r7
 321 005a 04B0     	 add sp,sp,#16
 322              	 
 323 005c 80BD     	 pop {r7,pc}
 324              	.L21:
 325 005e C046     	 .align 2
 326              	.L20:
 327 0060 FFE1FFFF 	 .word -7681
 328 0064 E0FF9FFF 	 .word -6291488
 329              	 .cfi_endproc
 330              	.LFE67:
 332              	 .section .text.XMC_LEDTS_StartCounter,"ax",%progbits
 333              	 .align 2
 334              	 .global XMC_LEDTS_StartCounter
 335              	 .code 16
 336              	 .thumb_func
 338              	XMC_LEDTS_StartCounter:
 339              	.LFB68:
 226:../Libraries/XMCLib/src/xmc_ledts.c **** 
 227:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 228:../Libraries/XMCLib/src/xmc_ledts.c ****   * Starts LEDTS-counter
 229:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 230:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StartCounter(XMC_LEDTS_t *const ledts, const uint16_t prescaler)
 231:../Libraries/XMCLib/src/xmc_ledts.c **** {
 340              	 .loc 1 231 0
 341              	 .cfi_startproc
 342 0000 80B5     	 push {r7,lr}
 343              	.LCFI12:
 344              	 .cfi_def_cfa_offset 8
 345              	 .cfi_offset 7,-8
 346              	 .cfi_offset 14,-4
 347 0002 82B0     	 sub sp,sp,#8
 348              	.LCFI13:
 349              	 .cfi_def_cfa_offset 16
 350 0004 00AF     	 add r7,sp,#0
 351              	.LCFI14:
 352              	 .cfi_def_cfa_register 7
 353 0006 7860     	 str r0,[r7,#4]
 354 0008 0A1C     	 mov r2,r1
 355 000a BB1C     	 add r3,r7,#2
 356 000c 1A80     	 strh r2,[r3]
 232:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Start_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 233:../Libraries/XMCLib/src/xmc_ledts.c **** 
 234:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= prescaler << 16U;
 357              	 .loc 1 234 0
 358 000e 7B68     	 ldr r3,[r7,#4]
 359 0010 5B68     	 ldr r3,[r3,#4]
 360 0012 BA1C     	 add r2,r7,#2
 361 0014 1288     	 ldrh r2,[r2]
 362 0016 1204     	 lsl r2,r2,#16
 363 0018 1A43     	 orr r2,r3
 364 001a 7B68     	 ldr r3,[r7,#4]
 365 001c 5A60     	 str r2,[r3,#4]
 235:../Libraries/XMCLib/src/xmc_ledts.c **** }
 366              	 .loc 1 235 0
 367 001e BD46     	 mov sp,r7
 368 0020 02B0     	 add sp,sp,#8
 369              	 
 370 0022 80BD     	 pop {r7,pc}
 371              	 .cfi_endproc
 372              	.LFE68:
 374              	 .section .text.XMC_LEDTS_StopCounter,"ax",%progbits
 375              	 .align 2
 376              	 .global XMC_LEDTS_StopCounter
 377              	 .code 16
 378              	 .thumb_func
 380              	XMC_LEDTS_StopCounter:
 381              	.LFB69:
 236:../Libraries/XMCLib/src/xmc_ledts.c **** 
 237:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 238:../Libraries/XMCLib/src/xmc_ledts.c ****   * Stops LEDTS-counter
 239:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 240:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StopCounter(XMC_LEDTS_t *const ledts)
 241:../Libraries/XMCLib/src/xmc_ledts.c **** {
 382              	 .loc 1 241 0
 383              	 .cfi_startproc
 384 0000 80B5     	 push {r7,lr}
 385              	.LCFI15:
 386              	 .cfi_def_cfa_offset 8
 387              	 .cfi_offset 7,-8
 388              	 .cfi_offset 14,-4
 389 0002 82B0     	 sub sp,sp,#8
 390              	.LCFI16:
 391              	 .cfi_def_cfa_offset 16
 392 0004 00AF     	 add r7,sp,#0
 393              	.LCFI17:
 394              	 .cfi_def_cfa_register 7
 395 0006 7860     	 str r0,[r7,#4]
 242:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Stop_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 243:../Libraries/XMCLib/src/xmc_ledts.c **** 
 244:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= 0x0000FFFF;
 396              	 .loc 1 244 0
 397 0008 7B68     	 ldr r3,[r7,#4]
 398 000a 5B68     	 ldr r3,[r3,#4]
 399 000c 1B04     	 lsl r3,r3,#16
 400 000e 1A0C     	 lsr r2,r3,#16
 401 0010 7B68     	 ldr r3,[r7,#4]
 402 0012 5A60     	 str r2,[r3,#4]
 245:../Libraries/XMCLib/src/xmc_ledts.c **** }
 403              	 .loc 1 245 0
 404 0014 BD46     	 mov sp,r7
 405 0016 02B0     	 add sp,sp,#8
 406              	 
 407 0018 80BD     	 pop {r7,pc}
 408              	 .cfi_endproc
 409              	.LFE69:
 411 001a C046     	 .section .text.XMC_LEDTS_ReadInterruptFlag,"ax",%progbits
 412              	 .align 2
 413              	 .global XMC_LEDTS_ReadInterruptFlag
 414              	 .code 16
 415              	 .thumb_func
 417              	XMC_LEDTS_ReadInterruptFlag:
 418              	.LFB70:
 246:../Libraries/XMCLib/src/xmc_ledts.c **** 
 247:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 248:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reads time interrupt flags
 249:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 250:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadInterruptFlag(XMC_LEDTS_t *const ledts)
 251:../Libraries/XMCLib/src/xmc_ledts.c **** {
 419              	 .loc 1 251 0
 420              	 .cfi_startproc
 421 0000 80B5     	 push {r7,lr}
 422              	.LCFI18:
 423              	 .cfi_def_cfa_offset 8
 424              	 .cfi_offset 7,-8
 425              	 .cfi_offset 14,-4
 426 0002 82B0     	 sub sp,sp,#8
 427              	.LCFI19:
 428              	 .cfi_def_cfa_offset 16
 429 0004 00AF     	 add r7,sp,#0
 430              	.LCFI20:
 431              	 .cfi_def_cfa_register 7
 432 0006 7860     	 str r0,[r7,#4]
 252:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ReadInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts))
 253:../Libraries/XMCLib/src/xmc_ledts.c **** 
 254:../Libraries/XMCLib/src/xmc_ledts.c ****   return (ledts->EVFR & 0xF);
 433              	 .loc 1 254 0
 434 0008 7B68     	 ldr r3,[r7,#4]
 435 000a DB68     	 ldr r3,[r3,#12]
 436 000c 0F22     	 mov r2,#15
 437 000e 1340     	 and r3,r2
 255:../Libraries/XMCLib/src/xmc_ledts.c **** }
 438              	 .loc 1 255 0
 439 0010 181C     	 mov r0,r3
 440 0012 BD46     	 mov sp,r7
 441 0014 02B0     	 add sp,sp,#8
 442              	 
 443 0016 80BD     	 pop {r7,pc}
 444              	 .cfi_endproc
 445              	.LFE70:
 447              	 .section .text.XMC_LEDTS_SetActivePADNo,"ax",%progbits
 448              	 .align 2
 449              	 .global XMC_LEDTS_SetActivePADNo
 450              	 .code 16
 451              	 .thumb_func
 453              	XMC_LEDTS_SetActivePADNo:
 454              	.LFB71:
 256:../Libraries/XMCLib/src/xmc_ledts.c **** 
 257:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 258:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the active pad number
 259:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 260:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetActivePADNo(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t pad_num)
 261:../Libraries/XMCLib/src/xmc_ledts.c **** {
 455              	 .loc 1 261 0
 456              	 .cfi_startproc
 457 0000 80B5     	 push {r7,lr}
 458              	.LCFI21:
 459              	 .cfi_def_cfa_offset 8
 460              	 .cfi_offset 7,-8
 461              	 .cfi_offset 14,-4
 462 0002 84B0     	 sub sp,sp,#16
 463              	.LCFI22:
 464              	 .cfi_def_cfa_offset 24
 465 0004 00AF     	 add r7,sp,#0
 466              	.LCFI23:
 467              	 .cfi_def_cfa_register 7
 468 0006 7860     	 str r0,[r7,#4]
 469 0008 0A1C     	 mov r2,r1
 470 000a FB1C     	 add r3,r7,#3
 471 000c 1A70     	 strb r2,[r3]
 262:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 263:../Libraries/XMCLib/src/xmc_ledts.c **** 
 264:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetActivePADNo:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 265:../Libraries/XMCLib/src/xmc_ledts.c **** 
 266:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->FNCTL;
 472              	 .loc 1 266 0
 473 000e 7B68     	 ldr r3,[r7,#4]
 474 0010 9B68     	 ldr r3,[r3,#8]
 475 0012 FB60     	 str r3,[r7,#12]
 267:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~(LEDTS_FNCTL_PADT_Msk);
 476              	 .loc 1 267 0
 477 0014 FB68     	 ldr r3,[r7,#12]
 478 0016 0722     	 mov r2,#7
 479 0018 9343     	 bic r3,r2
 480 001a FB60     	 str r3,[r7,#12]
 268:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 481              	 .loc 1 268 0
 482 001c FB1C     	 add r3,r7,#3
 483 001e 1B78     	 ldrb r3,[r3]
 484 0020 FA68     	 ldr r2,[r7,#12]
 485 0022 1343     	 orr r3,r2
 486 0024 FB60     	 str r3,[r7,#12]
 269:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL = reg;
 487              	 .loc 1 269 0
 488 0026 7B68     	 ldr r3,[r7,#4]
 489 0028 FA68     	 ldr r2,[r7,#12]
 490 002a 9A60     	 str r2,[r3,#8]
 270:../Libraries/XMCLib/src/xmc_ledts.c **** }
 491              	 .loc 1 270 0
 492 002c BD46     	 mov sp,r7
 493 002e 04B0     	 add sp,sp,#16
 494              	 
 495 0030 80BD     	 pop {r7,pc}
 496              	 .cfi_endproc
 497              	.LFE71:
 499 0032 C046     	 .section .text.XMC_LEDTS_ClearInterruptFlag,"ax",%progbits
 500              	 .align 2
 501              	 .global XMC_LEDTS_ClearInterruptFlag
 502              	 .code 16
 503              	 .thumb_func
 505              	XMC_LEDTS_ClearInterruptFlag:
 506              	.LFB72:
 271:../Libraries/XMCLib/src/xmc_ledts.c **** 
 272:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 273:../Libraries/XMCLib/src/xmc_ledts.c ****   * Clears interrupt indication flags
 274:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 275:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_ClearInterruptFlag(XMC_LEDTS_t *const ledts, uint32_t interrupt_mask)
 276:../Libraries/XMCLib/src/xmc_ledts.c **** {
 507              	 .loc 1 276 0
 508              	 .cfi_startproc
 509 0000 80B5     	 push {r7,lr}
 510              	.LCFI24:
 511              	 .cfi_def_cfa_offset 8
 512              	 .cfi_offset 7,-8
 513              	 .cfi_offset 14,-4
 514 0002 82B0     	 sub sp,sp,#8
 515              	.LCFI25:
 516              	 .cfi_def_cfa_offset 16
 517 0004 00AF     	 add r7,sp,#0
 518              	.LCFI26:
 519              	 .cfi_def_cfa_register 7
 520 0006 7860     	 str r0,[r7,#4]
 521 0008 3960     	 str r1,[r7]
 277:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ClearInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 278:../Libraries/XMCLib/src/xmc_ledts.c **** 
 279:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->EVFR = (interrupt_mask << LEDTS_EVFR_CTSF_Pos);
 522              	 .loc 1 279 0
 523 000a 3B68     	 ldr r3,[r7]
 524 000c 1A04     	 lsl r2,r3,#16
 525 000e 7B68     	 ldr r3,[r7,#4]
 526 0010 DA60     	 str r2,[r3,#12]
 280:../Libraries/XMCLib/src/xmc_ledts.c **** }
 527              	 .loc 1 280 0
 528 0012 BD46     	 mov sp,r7
 529 0014 02B0     	 add sp,sp,#8
 530              	 
 531 0016 80BD     	 pop {r7,pc}
 532              	 .cfi_endproc
 533              	.LFE72:
 535              	 .section .text.XMC_LEDTS_SetLEDLinePattern,"ax",%progbits
 536              	 .align 2
 537              	 .global XMC_LEDTS_SetLEDLinePattern
 538              	 .code 16
 539              	 .thumb_func
 541              	XMC_LEDTS_SetLEDLinePattern:
 542              	.LFB73:
 281:../Libraries/XMCLib/src/xmc_ledts.c **** 
 282:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 283:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to output pattern on an LED column in LED matrix
 284:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 285:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetLEDLinePattern(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const uin
 286:../Libraries/XMCLib/src/xmc_ledts.c **** {
 543              	 .loc 1 286 0
 544              	 .cfi_startproc
 545 0000 80B5     	 push {r7,lr}
 546              	.LCFI27:
 547              	 .cfi_def_cfa_offset 8
 548              	 .cfi_offset 7,-8
 549              	 .cfi_offset 14,-4
 550 0002 84B0     	 sub sp,sp,#16
 551              	.LCFI28:
 552              	 .cfi_def_cfa_offset 24
 553 0004 00AF     	 add r7,sp,#0
 554              	.LCFI29:
 555              	 .cfi_def_cfa_register 7
 556 0006 7860     	 str r0,[r7,#4]
 557 0008 081C     	 mov r0,r1
 558 000a 111C     	 mov r1,r2
 559 000c FB1C     	 add r3,r7,#3
 560 000e 021C     	 add r2,r0,#0
 561 0010 1A70     	 strb r2,[r3]
 562 0012 BB1C     	 add r3,r7,#2
 563 0014 0A1C     	 add r2,r1,#0
 564 0016 1A70     	 strb r2,[r3]
 287:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 288:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 565              	 .loc 1 288 0
 566 0018 0F23     	 mov r3,#15
 567 001a FB18     	 add r3,r7,r3
 568 001c FA1C     	 add r2,r7,#3
 569 001e 1278     	 ldrb r2,[r2]
 570 0020 9208     	 lsr r2,r2,#2
 571 0022 1A70     	 strb r2,[r3]
 289:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 572              	 .loc 1 289 0
 573 0024 FB1C     	 add r3,r7,#3
 574 0026 1B78     	 ldrb r3,[r3]
 575 0028 0322     	 mov r2,#3
 576 002a 1340     	 and r3,r2
 577 002c DAB2     	 uxtb r2,r3
 578 002e 0E23     	 mov r3,#14
 579 0030 FB18     	 add r3,r7,r3
 580 0032 D200     	 lsl r2,r2,#3
 581 0034 1A70     	 strb r2,[r3]
 290:../Libraries/XMCLib/src/xmc_ledts.c **** 
 291:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_LED_Line_Pattern:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledt
 292:../Libraries/XMCLib/src/xmc_ledts.c **** 
 293:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LINE[reg_index];
 582              	 .loc 1 293 0
 583 0036 0F23     	 mov r3,#15
 584 0038 FB18     	 add r3,r7,r3
 585 003a 1B78     	 ldrb r3,[r3]
 586 003c 7A68     	 ldr r2,[r7,#4]
 587 003e 0433     	 add r3,r3,#4
 588 0040 9B00     	 lsl r3,r3,#2
 589 0042 D318     	 add r3,r2,r3
 590 0044 5B68     	 ldr r3,[r3,#4]
 591 0046 BB60     	 str r3,[r7,#8]
 294:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 592              	 .loc 1 294 0
 593 0048 0E23     	 mov r3,#14
 594 004a FB18     	 add r3,r7,r3
 595 004c 1B78     	 ldrb r3,[r3]
 596 004e FF22     	 mov r2,#255
 597 0050 9A40     	 lsl r2,r2,r3
 598 0052 131C     	 mov r3,r2
 599 0054 DB43     	 mvn r3,r3
 600 0056 1A1C     	 mov r2,r3
 601 0058 BB68     	 ldr r3,[r7,#8]
 602 005a 1340     	 and r3,r2
 603 005c BB60     	 str r3,[r7,#8]
 295:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= pattern << bit_shift_count;
 604              	 .loc 1 295 0
 605 005e BB1C     	 add r3,r7,#2
 606 0060 1A78     	 ldrb r2,[r3]
 607 0062 0E23     	 mov r3,#14
 608 0064 FB18     	 add r3,r7,r3
 609 0066 1B78     	 ldrb r3,[r3]
 610 0068 9A40     	 lsl r2,r2,r3
 611 006a 131C     	 mov r3,r2
 612 006c 1A1C     	 mov r2,r3
 613 006e BB68     	 ldr r3,[r7,#8]
 614 0070 1343     	 orr r3,r2
 615 0072 BB60     	 str r3,[r7,#8]
 296:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LINE[reg_index] = reg;
 616              	 .loc 1 296 0
 617 0074 0F23     	 mov r3,#15
 618 0076 FB18     	 add r3,r7,r3
 619 0078 1B78     	 ldrb r3,[r3]
 620 007a 7A68     	 ldr r2,[r7,#4]
 621 007c 0433     	 add r3,r3,#4
 622 007e 9B00     	 lsl r3,r3,#2
 623 0080 D318     	 add r3,r2,r3
 624 0082 BA68     	 ldr r2,[r7,#8]
 625 0084 5A60     	 str r2,[r3,#4]
 297:../Libraries/XMCLib/src/xmc_ledts.c **** 
 298:../Libraries/XMCLib/src/xmc_ledts.c **** }
 626              	 .loc 1 298 0
 627 0086 BD46     	 mov sp,r7
 628 0088 04B0     	 add sp,sp,#16
 629              	 
 630 008a 80BD     	 pop {r7,pc}
 631              	 .cfi_endproc
 632              	.LFE73:
 634              	 .section .text.XMC_LEDTS_SetColumnBrightness,"ax",%progbits
 635              	 .align 2
 636              	 .global XMC_LEDTS_SetColumnBrightness
 637              	 .code 16
 638              	 .thumb_func
 640              	XMC_LEDTS_SetColumnBrightness:
 641              	.LFB74:
 299:../Libraries/XMCLib/src/xmc_ledts.c **** 
 300:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 301:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust brightness of an LED column in LED matrix
 302:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 303:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetColumnBrightness(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const u
 304:../Libraries/XMCLib/src/xmc_ledts.c **** {
 642              	 .loc 1 304 0
 643              	 .cfi_startproc
 644 0000 80B5     	 push {r7,lr}
 645              	.LCFI30:
 646              	 .cfi_def_cfa_offset 8
 647              	 .cfi_offset 7,-8
 648              	 .cfi_offset 14,-4
 649 0002 84B0     	 sub sp,sp,#16
 650              	.LCFI31:
 651              	 .cfi_def_cfa_offset 24
 652 0004 00AF     	 add r7,sp,#0
 653              	.LCFI32:
 654              	 .cfi_def_cfa_register 7
 655 0006 7860     	 str r0,[r7,#4]
 656 0008 081C     	 mov r0,r1
 657 000a 111C     	 mov r1,r2
 658 000c FB1C     	 add r3,r7,#3
 659 000e 021C     	 add r2,r0,#0
 660 0010 1A70     	 strb r2,[r3]
 661 0012 BB1C     	 add r3,r7,#2
 662 0014 0A1C     	 add r2,r1,#0
 663 0016 1A70     	 strb r2,[r3]
 305:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 306:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 664              	 .loc 1 306 0
 665 0018 0F23     	 mov r3,#15
 666 001a FB18     	 add r3,r7,r3
 667 001c FA1C     	 add r2,r7,#3
 668 001e 1278     	 ldrb r2,[r2]
 669 0020 9208     	 lsr r2,r2,#2
 670 0022 1A70     	 strb r2,[r3]
 307:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 671              	 .loc 1 307 0
 672 0024 FB1C     	 add r3,r7,#3
 673 0026 1B78     	 ldrb r3,[r3]
 674 0028 0322     	 mov r2,#3
 675 002a 1340     	 and r3,r2
 676 002c DAB2     	 uxtb r2,r3
 677 002e 0E23     	 mov r3,#14
 678 0030 FB18     	 add r3,r7,r3
 679 0032 D200     	 lsl r2,r2,#3
 680 0034 1A70     	 strb r2,[r3]
 308:../Libraries/XMCLib/src/xmc_ledts.c **** 
 309:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Column_Brightness:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(led
 310:../Libraries/XMCLib/src/xmc_ledts.c **** 
 311:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[reg_index];
 681              	 .loc 1 311 0
 682 0036 0F23     	 mov r3,#15
 683 0038 FB18     	 add r3,r7,r3
 684 003a 1B78     	 ldrb r3,[r3]
 685 003c 7A68     	 ldr r2,[r7,#4]
 686 003e 0633     	 add r3,r3,#6
 687 0040 9B00     	 lsl r3,r3,#2
 688 0042 D318     	 add r3,r2,r3
 689 0044 5B68     	 ldr r3,[r3,#4]
 690 0046 BB60     	 str r3,[r7,#8]
 312:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 691              	 .loc 1 312 0
 692 0048 0E23     	 mov r3,#14
 693 004a FB18     	 add r3,r7,r3
 694 004c 1B78     	 ldrb r3,[r3]
 695 004e FF22     	 mov r2,#255
 696 0050 9A40     	 lsl r2,r2,r3
 697 0052 131C     	 mov r3,r2
 698 0054 DB43     	 mvn r3,r3
 699 0056 1A1C     	 mov r2,r3
 700 0058 BB68     	 ldr r3,[r7,#8]
 701 005a 1340     	 and r3,r2
 702 005c BB60     	 str r3,[r7,#8]
 313:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= brightness << bit_shift_count;
 703              	 .loc 1 313 0
 704 005e BB1C     	 add r3,r7,#2
 705 0060 1A78     	 ldrb r2,[r3]
 706 0062 0E23     	 mov r3,#14
 707 0064 FB18     	 add r3,r7,r3
 708 0066 1B78     	 ldrb r3,[r3]
 709 0068 9A40     	 lsl r2,r2,r3
 710 006a 131C     	 mov r3,r2
 711 006c 1A1C     	 mov r2,r3
 712 006e BB68     	 ldr r3,[r7,#8]
 713 0070 1343     	 orr r3,r2
 714 0072 BB60     	 str r3,[r7,#8]
 314:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[reg_index] = reg;
 715              	 .loc 1 314 0
 716 0074 0F23     	 mov r3,#15
 717 0076 FB18     	 add r3,r7,r3
 718 0078 1B78     	 ldrb r3,[r3]
 719 007a 7A68     	 ldr r2,[r7,#4]
 720 007c 0633     	 add r3,r3,#6
 721 007e 9B00     	 lsl r3,r3,#2
 722 0080 D318     	 add r3,r2,r3
 723 0082 BA68     	 ldr r2,[r7,#8]
 724 0084 5A60     	 str r2,[r3,#4]
 315:../Libraries/XMCLib/src/xmc_ledts.c **** }
 725              	 .loc 1 315 0
 726 0086 BD46     	 mov sp,r7
 727 0088 04B0     	 add sp,sp,#16
 728              	 
 729 008a 80BD     	 pop {r7,pc}
 730              	 .cfi_endproc
 731              	.LFE74:
 733              	 .section .text.XMC_LEDTS_SetCommonOscillationWindow,"ax",%progbits
 734              	 .align 2
 735              	 .global XMC_LEDTS_SetCommonOscillationWindow
 736              	 .code 16
 737              	 .thumb_func
 739              	XMC_LEDTS_SetCommonOscillationWindow:
 740              	.LFB75:
 316:../Libraries/XMCLib/src/xmc_ledts.c **** 
 317:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 318:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to set common oscillation window size for touch-sense inputs
 319:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 320:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetCommonOscillationWindow(XMC_LEDTS_t *const ledts, const uint8_t common_size)
 321:../Libraries/XMCLib/src/xmc_ledts.c **** {
 741              	 .loc 1 321 0
 742              	 .cfi_startproc
 743 0000 80B5     	 push {r7,lr}
 744              	.LCFI33:
 745              	 .cfi_def_cfa_offset 8
 746              	 .cfi_offset 7,-8
 747              	 .cfi_offset 14,-4
 748 0002 84B0     	 sub sp,sp,#16
 749              	.LCFI34:
 750              	 .cfi_def_cfa_offset 24
 751 0004 00AF     	 add r7,sp,#0
 752              	.LCFI35:
 753              	 .cfi_def_cfa_register 7
 754 0006 7860     	 str r0,[r7,#4]
 755 0008 0A1C     	 mov r2,r1
 756 000a FB1C     	 add r3,r7,#3
 757 000c 1A70     	 strb r2,[r3]
 322:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 323:../Libraries/XMCLib/src/xmc_ledts.c **** 
 324:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Common_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL
 325:../Libraries/XMCLib/src/xmc_ledts.c **** 
 326:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[1];
 758              	 .loc 1 326 0
 759 000e 7B68     	 ldr r3,[r7,#4]
 760 0010 1B6A     	 ldr r3,[r3,#32]
 761 0012 FB60     	 str r3,[r7,#12]
 327:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~LEDTS_LDCMP1_CMP_LDA_TSCOM_Msk;
 762              	 .loc 1 327 0
 763 0014 FB68     	 ldr r3,[r7,#12]
 764 0016 1B02     	 lsl r3,r3,#8
 765 0018 1B0A     	 lsr r3,r3,#8
 766 001a FB60     	 str r3,[r7,#12]
 328:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (common_size << LEDTS_LDCMP1_CMP_LDA_TSCOM_Pos);
 767              	 .loc 1 328 0
 768 001c FB1C     	 add r3,r7,#3
 769 001e 1B78     	 ldrb r3,[r3]
 770 0020 1B06     	 lsl r3,r3,#24
 771 0022 1A1C     	 mov r2,r3
 772 0024 FB68     	 ldr r3,[r7,#12]
 773 0026 1343     	 orr r3,r2
 774 0028 FB60     	 str r3,[r7,#12]
 329:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[1] = reg;
 775              	 .loc 1 329 0
 776 002a 7B68     	 ldr r3,[r7,#4]
 777 002c FA68     	 ldr r2,[r7,#12]
 778 002e 1A62     	 str r2,[r3,#32]
 330:../Libraries/XMCLib/src/xmc_ledts.c **** }
 779              	 .loc 1 330 0
 780 0030 BD46     	 mov sp,r7
 781 0032 04B0     	 add sp,sp,#16
 782              	 
 783 0034 80BD     	 pop {r7,pc}
 784              	 .cfi_endproc
 785              	.LFE75:
 787 0036 C046     	 .section .text.XMC_LEDTS_ReadFNCOL,"ax",%progbits
 788              	 .align 2
 789              	 .global XMC_LEDTS_ReadFNCOL
 790              	 .code 16
 791              	 .thumb_func
 793              	XMC_LEDTS_ReadFNCOL:
 794              	.LFB76:
 331:../Libraries/XMCLib/src/xmc_ledts.c **** 
 332:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 333:../Libraries/XMCLib/src/xmc_ledts.c ****   * Checking the previous active function or LED column status
 334:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 335:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadFNCOL(XMC_LEDTS_t *const ledts)
 336:../Libraries/XMCLib/src/xmc_ledts.c **** {
 795              	 .loc 1 336 0
 796              	 .cfi_startproc
 797 0000 80B5     	 push {r7,lr}
 798              	.LCFI36:
 799              	 .cfi_def_cfa_offset 8
 800              	 .cfi_offset 7,-8
 801              	 .cfi_offset 14,-4
 802 0002 84B0     	 sub sp,sp,#16
 803              	.LCFI37:
 804              	 .cfi_def_cfa_offset 24
 805 0004 00AF     	 add r7,sp,#0
 806              	.LCFI38:
 807              	 .cfi_def_cfa_register 7
 808 0006 7860     	 str r0,[r7,#4]
 337:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t fncol_read;
 338:../Libraries/XMCLib/src/xmc_ledts.c **** 
 339:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_FNCOL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 340:../Libraries/XMCLib/src/xmc_ledts.c **** 
 341:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read = ledts->FNCTL & LEDTS_FNCTL_FNCOL_Msk;
 809              	 .loc 1 341 0
 810 0008 7B68     	 ldr r3,[r7,#4]
 811 000a 9B68     	 ldr r3,[r3,#8]
 812 000c E022     	 mov r2,#224
 813 000e 1340     	 and r3,r2
 814 0010 FB60     	 str r3,[r7,#12]
 342:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 815              	 .loc 1 342 0
 816 0012 FB68     	 ldr r3,[r7,#12]
 817 0014 5B09     	 lsr r3,r3,#5
 818 0016 FB60     	 str r3,[r7,#12]
 343:../Libraries/XMCLib/src/xmc_ledts.c **** 
 344:../Libraries/XMCLib/src/xmc_ledts.c ****   return fncol_read;
 819              	 .loc 1 344 0
 820 0018 FB68     	 ldr r3,[r7,#12]
 345:../Libraries/XMCLib/src/xmc_ledts.c **** }
 821              	 .loc 1 345 0
 822 001a 181C     	 mov r0,r3
 823 001c BD46     	 mov sp,r7
 824 001e 04B0     	 add sp,sp,#16
 825              	 
 826 0020 80BD     	 pop {r7,pc}
 827              	 .cfi_endproc
 828              	.LFE76:
 830 0022 C046     	 .section .text.XMC_LEDTS_SetNumOfLEDColumns,"ax",%progbits
 831              	 .align 2
 832              	 .global XMC_LEDTS_SetNumOfLEDColumns
 833              	 .code 16
 834              	 .thumb_func
 836              	XMC_LEDTS_SetNumOfLEDColumns:
 837              	.LFB77:
 346:../Libraries/XMCLib/src/xmc_ledts.c **** 
 347:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 348:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the number of LED column Enabled
 349:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 350:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetNumOfLEDColumns(XMC_LEDTS_t *const ledts, uint8_t count)
 351:../Libraries/XMCLib/src/xmc_ledts.c **** {
 838              	 .loc 1 351 0
 839              	 .cfi_startproc
 840 0000 80B5     	 push {r7,lr}
 841              	.LCFI39:
 842              	 .cfi_def_cfa_offset 8
 843              	 .cfi_offset 7,-8
 844              	 .cfi_offset 14,-4
 845 0002 82B0     	 sub sp,sp,#8
 846              	.LCFI40:
 847              	 .cfi_def_cfa_offset 16
 848 0004 00AF     	 add r7,sp,#0
 849              	.LCFI41:
 850              	 .cfi_def_cfa_register 7
 851 0006 7860     	 str r0,[r7,#4]
 852 0008 0A1C     	 mov r2,r1
 853 000a FB1C     	 add r3,r7,#3
 854 000c 1A70     	 strb r2,[r3]
 352:../Libraries/XMCLib/src/xmc_ledts.c **** 
 353:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetNumOfLEDColumns:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 354:../Libraries/XMCLib/src/xmc_ledts.c **** 
 355:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_NR_LEDCOL_Msk);
 855              	 .loc 1 355 0
 856 000e 7B68     	 ldr r3,[r7,#4]
 857 0010 9B68     	 ldr r3,[r3,#8]
 858 0012 DB00     	 lsl r3,r3,#3
 859 0014 DA08     	 lsr r2,r3,#3
 860 0016 7B68     	 ldr r3,[r7,#4]
 861 0018 9A60     	 str r2,[r3,#8]
 356:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 862              	 .loc 1 356 0
 863 001a 7B68     	 ldr r3,[r7,#4]
 864 001c 9B68     	 ldr r3,[r3,#8]
 865 001e FA1C     	 add r2,r7,#3
 866 0020 1278     	 ldrb r2,[r2]
 867 0022 5207     	 lsl r2,r2,#29
 868 0024 1A43     	 orr r2,r3
 869 0026 7B68     	 ldr r3,[r7,#4]
 870 0028 9A60     	 str r2,[r3,#8]
 357:../Libraries/XMCLib/src/xmc_ledts.c **** }
 871              	 .loc 1 357 0
 872 002a BD46     	 mov sp,r7
 873 002c 02B0     	 add sp,sp,#8
 874              	 
 875 002e 80BD     	 pop {r7,pc}
 876              	 .cfi_endproc
 877              	.LFE77:
 879              	 .section .text.XMC_LEDTS_ReadTSVAL,"ax",%progbits
 880              	 .align 2
 881              	 .global XMC_LEDTS_ReadTSVAL
 882              	 .code 16
 883              	 .thumb_func
 885              	XMC_LEDTS_ReadTSVAL:
 886              	.LFB78:
 358:../Libraries/XMCLib/src/xmc_ledts.c **** 
 359:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 360:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reading recorded number of oscillation counts
 361:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 362:../Libraries/XMCLib/src/xmc_ledts.c **** uint16_t XMC_LEDTS_ReadTSVAL(XMC_LEDTS_t *const ledts)
 363:../Libraries/XMCLib/src/xmc_ledts.c **** {
 887              	 .loc 1 363 0
 888              	 .cfi_startproc
 889 0000 80B5     	 push {r7,lr}
 890              	.LCFI42:
 891              	 .cfi_def_cfa_offset 8
 892              	 .cfi_offset 7,-8
 893              	 .cfi_offset 14,-4
 894 0002 84B0     	 sub sp,sp,#16
 895              	.LCFI43:
 896              	 .cfi_def_cfa_offset 24
 897 0004 00AF     	 add r7,sp,#0
 898              	.LCFI44:
 899              	 .cfi_def_cfa_register 7
 900 0006 7860     	 str r0,[r7,#4]
 364:../Libraries/XMCLib/src/xmc_ledts.c ****   uint16_t no_of_oscillations;
 365:../Libraries/XMCLib/src/xmc_ledts.c **** 
 366:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_TSVAL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 367:../Libraries/XMCLib/src/xmc_ledts.c **** 
 368:../Libraries/XMCLib/src/xmc_ledts.c ****   no_of_oscillations = (ledts->TSVAL & 0xFFFF);
 901              	 .loc 1 368 0
 902 0008 7B68     	 ldr r3,[r7,#4]
 903 000a 1A69     	 ldr r2,[r3,#16]
 904 000c 0E23     	 mov r3,#14
 905 000e FB18     	 add r3,r7,r3
 906 0010 1A80     	 strh r2,[r3]
 369:../Libraries/XMCLib/src/xmc_ledts.c **** 
 370:../Libraries/XMCLib/src/xmc_ledts.c ****   return no_of_oscillations;
 907              	 .loc 1 370 0
 908 0012 0E23     	 mov r3,#14
 909 0014 FB18     	 add r3,r7,r3
 910 0016 1B88     	 ldrh r3,[r3]
 371:../Libraries/XMCLib/src/xmc_ledts.c **** }
 911              	 .loc 1 371 0
 912 0018 181C     	 mov r0,r3
 913 001a BD46     	 mov sp,r7
 914 001c 04B0     	 add sp,sp,#16
 915              	 
 916 001e 80BD     	 pop {r7,pc}
 917              	 .cfi_endproc
 918              	.LFE78:
 920              	 .section .text.XMC_LEDTS_SetOscillationWindow,"ax",%progbits
 921              	 .align 2
 922              	 .global XMC_LEDTS_SetOscillationWindow
 923              	 .code 16
 924              	 .thumb_func
 926              	XMC_LEDTS_SetOscillationWindow:
 927              	.LFB79:
 372:../Libraries/XMCLib/src/xmc_ledts.c **** 
 373:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 374:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust the size of oscillation window
 375:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 376:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetOscillationWindow(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t touchpad,
 377:../Libraries/XMCLib/src/xmc_ledts.c **** {
 928              	 .loc 1 377 0
 929              	 .cfi_startproc
 930 0000 80B5     	 push {r7,lr}
 931              	.LCFI45:
 932              	 .cfi_def_cfa_offset 8
 933              	 .cfi_offset 7,-8
 934              	 .cfi_offset 14,-4
 935 0002 84B0     	 sub sp,sp,#16
 936              	.LCFI46:
 937              	 .cfi_def_cfa_offset 24
 938 0004 00AF     	 add r7,sp,#0
 939              	.LCFI47:
 940              	 .cfi_def_cfa_register 7
 941 0006 7860     	 str r0,[r7,#4]
 942 0008 081C     	 mov r0,r1
 943 000a 111C     	 mov r1,r2
 944 000c FB1C     	 add r3,r7,#3
 945 000e 021C     	 add r2,r0,#0
 946 0010 1A70     	 strb r2,[r3]
 947 0012 BB1C     	 add r3,r7,#2
 948 0014 0A1C     	 add r2,r1,#0
 949 0016 1A70     	 strb r2,[r3]
 378:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 379:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)touchpad) >> 2;
 950              	 .loc 1 379 0
 951 0018 0F23     	 mov r3,#15
 952 001a FB18     	 add r3,r7,r3
 953 001c FA1C     	 add r2,r7,#3
 954 001e 1278     	 ldrb r2,[r2]
 955 0020 9208     	 lsr r2,r2,#2
 956 0022 1A70     	 strb r2,[r3]
 380:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)touchpad & 0x03) * 8;
 957              	 .loc 1 380 0
 958 0024 FB1C     	 add r3,r7,#3
 959 0026 1B78     	 ldrb r3,[r3]
 960 0028 0322     	 mov r2,#3
 961 002a 1340     	 and r3,r2
 962 002c DAB2     	 uxtb r2,r3
 963 002e 0E23     	 mov r3,#14
 964 0030 FB18     	 add r3,r7,r3
 965 0032 D200     	 lsl r2,r2,#3
 966 0034 1A70     	 strb r2,[r3]
 381:../Libraries/XMCLib/src/xmc_ledts.c **** 
 382:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(le
 383:../Libraries/XMCLib/src/xmc_ledts.c **** 
 384:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->TSCMP[reg_index];
 967              	 .loc 1 384 0
 968 0036 0F23     	 mov r3,#15
 969 0038 FB18     	 add r3,r7,r3
 970 003a 1B78     	 ldrb r3,[r3]
 971 003c 7A68     	 ldr r2,[r7,#4]
 972 003e 0833     	 add r3,r3,#8
 973 0040 9B00     	 lsl r3,r3,#2
 974 0042 D318     	 add r3,r2,r3
 975 0044 5B68     	 ldr r3,[r3,#4]
 976 0046 BB60     	 str r3,[r7,#8]
 385:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 977              	 .loc 1 385 0
 978 0048 0E23     	 mov r3,#14
 979 004a FB18     	 add r3,r7,r3
 980 004c 1B78     	 ldrb r3,[r3]
 981 004e FF22     	 mov r2,#255
 982 0050 9A40     	 lsl r2,r2,r3
 983 0052 131C     	 mov r3,r2
 984 0054 DB43     	 mvn r3,r3
 985 0056 1A1C     	 mov r2,r3
 986 0058 BB68     	 ldr r3,[r7,#8]
 987 005a 1340     	 and r3,r2
 988 005c BB60     	 str r3,[r7,#8]
 386:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= size << bit_shift_count;
 989              	 .loc 1 386 0
 990 005e BB1C     	 add r3,r7,#2
 991 0060 1A78     	 ldrb r2,[r3]
 992 0062 0E23     	 mov r3,#14
 993 0064 FB18     	 add r3,r7,r3
 994 0066 1B78     	 ldrb r3,[r3]
 995 0068 9A40     	 lsl r2,r2,r3
 996 006a 131C     	 mov r3,r2
 997 006c 1A1C     	 mov r2,r3
 998 006e BB68     	 ldr r3,[r7,#8]
 999 0070 1343     	 orr r3,r2
 1000 0072 BB60     	 str r3,[r7,#8]
 387:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->TSCMP[reg_index] = reg;
 1001              	 .loc 1 387 0
 1002 0074 0F23     	 mov r3,#15
 1003 0076 FB18     	 add r3,r7,r3
 1004 0078 1B78     	 ldrb r3,[r3]
 1005 007a 7A68     	 ldr r2,[r7,#4]
 1006 007c 0833     	 add r3,r3,#8
 1007 007e 9B00     	 lsl r3,r3,#2
 1008 0080 D318     	 add r3,r2,r3
 1009 0082 BA68     	 ldr r2,[r7,#8]
 1010 0084 5A60     	 str r2,[r3,#4]
 388:../Libraries/XMCLib/src/xmc_ledts.c **** }
 1011              	 .loc 1 388 0
 1012 0086 BD46     	 mov sp,r7
 1013 0088 04B0     	 add sp,sp,#16
 1014              	 
 1015 008a 80BD     	 pop {r7,pc}
 1016              	 .cfi_endproc
 1017              	.LFE79:
 1019              	 .text
 1020              	.Letext0:
 1021              	 .file 2 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1022              	 .file 3 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1023              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 1024              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_ledts.h"
 1025              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc1_scu.h"
 1026              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Include/cmsis_gcc.h"
 1027              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ledts.c
    {standard input}:18     .text.XMC_LEDTS_InitGlobal:00000000 $t
    {standard input}:23     .text.XMC_LEDTS_InitGlobal:00000000 XMC_LEDTS_InitGlobal
    {standard input}:99     .text.XMC_LEDTS_InitGlobal:0000005c $d
    {standard input}:106    .text.XMC_LEDTS_InitLED:00000000 $t
    {standard input}:111    .text.XMC_LEDTS_InitLED:00000000 XMC_LEDTS_InitLED
    {standard input}:173    .text.XMC_LEDTS_InitTSBasic:00000000 $t
    {standard input}:178    .text.XMC_LEDTS_InitTSBasic:00000000 XMC_LEDTS_InitTSBasic
    {standard input}:242    .text.XMC_LEDTS_InitTSBasic:0000004c $d
    {standard input}:247    .text.XMC_LEDTS_InitTSAdvanced:00000000 $t
    {standard input}:252    .text.XMC_LEDTS_InitTSAdvanced:00000000 XMC_LEDTS_InitTSAdvanced
    {standard input}:327    .text.XMC_LEDTS_InitTSAdvanced:00000060 $d
    {standard input}:333    .text.XMC_LEDTS_StartCounter:00000000 $t
    {standard input}:338    .text.XMC_LEDTS_StartCounter:00000000 XMC_LEDTS_StartCounter
    {standard input}:375    .text.XMC_LEDTS_StopCounter:00000000 $t
    {standard input}:380    .text.XMC_LEDTS_StopCounter:00000000 XMC_LEDTS_StopCounter
    {standard input}:412    .text.XMC_LEDTS_ReadInterruptFlag:00000000 $t
    {standard input}:417    .text.XMC_LEDTS_ReadInterruptFlag:00000000 XMC_LEDTS_ReadInterruptFlag
    {standard input}:448    .text.XMC_LEDTS_SetActivePADNo:00000000 $t
    {standard input}:453    .text.XMC_LEDTS_SetActivePADNo:00000000 XMC_LEDTS_SetActivePADNo
    {standard input}:500    .text.XMC_LEDTS_ClearInterruptFlag:00000000 $t
    {standard input}:505    .text.XMC_LEDTS_ClearInterruptFlag:00000000 XMC_LEDTS_ClearInterruptFlag
    {standard input}:536    .text.XMC_LEDTS_SetLEDLinePattern:00000000 $t
    {standard input}:541    .text.XMC_LEDTS_SetLEDLinePattern:00000000 XMC_LEDTS_SetLEDLinePattern
    {standard input}:635    .text.XMC_LEDTS_SetColumnBrightness:00000000 $t
    {standard input}:640    .text.XMC_LEDTS_SetColumnBrightness:00000000 XMC_LEDTS_SetColumnBrightness
    {standard input}:734    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 $t
    {standard input}:739    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 XMC_LEDTS_SetCommonOscillationWindow
    {standard input}:788    .text.XMC_LEDTS_ReadFNCOL:00000000 $t
    {standard input}:793    .text.XMC_LEDTS_ReadFNCOL:00000000 XMC_LEDTS_ReadFNCOL
    {standard input}:831    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 $t
    {standard input}:836    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 XMC_LEDTS_SetNumOfLEDColumns
    {standard input}:880    .text.XMC_LEDTS_ReadTSVAL:00000000 $t
    {standard input}:885    .text.XMC_LEDTS_ReadTSVAL:00000000 XMC_LEDTS_ReadTSVAL
    {standard input}:921    .text.XMC_LEDTS_SetOscillationWindow:00000000 $t
    {standard input}:926    .text.XMC_LEDTS_SetOscillationWindow:00000000 XMC_LEDTS_SetOscillationWindow
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
