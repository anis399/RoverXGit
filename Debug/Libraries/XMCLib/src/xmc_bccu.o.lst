   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_bccu.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_BCCU_GlobalInit,"ax",%progbits
  18              	 .align 2
  19              	 .global XMC_BCCU_GlobalInit
  20              	 .code 16
  21              	 .thumb_func
  23              	XMC_BCCU_GlobalInit:
  24              	.LFB96:
  25              	 .file 1 "../Libraries/XMCLib/src/xmc_bccu.c"
   1:../Libraries/XMCLib/src/xmc_bccu.c **** /**
   2:../Libraries/XMCLib/src/xmc_bccu.c ****  * @file xmc_bccu.c
   3:../Libraries/XMCLib/src/xmc_bccu.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_bccu.c ****  *
   5:../Libraries/XMCLib/src/xmc_bccu.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_bccu.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_bccu.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_bccu.c ****  *
   9:../Libraries/XMCLib/src/xmc_bccu.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_bccu.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  12:../Libraries/XMCLib/src/xmc_bccu.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  14:../Libraries/XMCLib/src/xmc_bccu.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_bccu.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_bccu.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_bccu.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_bccu.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_bccu.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  21:../Libraries/XMCLib/src/xmc_bccu.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_bccu.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_bccu.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_bccu.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_bccu.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_bccu.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  28:../Libraries/XMCLib/src/xmc_bccu.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_bccu.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_bccu.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_bccu.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_bccu.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_bccu.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_bccu.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  36:../Libraries/XMCLib/src/xmc_bccu.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_bccu.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_bccu.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_bccu.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  41:../Libraries/XMCLib/src/xmc_bccu.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_bccu.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  44:../Libraries/XMCLib/src/xmc_bccu.c ****  * 2015-02-19:
  45:../Libraries/XMCLib/src/xmc_bccu.c ****  *     - Initial draft <br>
  46:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  47:../Libraries/XMCLib/src/xmc_bccu.c ****  * 2015-05-08:
  48:../Libraries/XMCLib/src/xmc_bccu.c ****  *     - Minor bug fixes in following APIs: XMC_BCCU_ConcurrentStartDimming(), XMC_BCCU_ConcurrentA
  49:../Libraries/XMCLib/src/xmc_bccu.c ****  *               XMC_BCCU_SetGlobalDimmingLevel() <br>
  50:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  51:../Libraries/XMCLib/src/xmc_bccu.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_bccu.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  54:../Libraries/XMCLib/src/xmc_bccu.c ****  * 2019-12-16:
  55:../Libraries/XMCLib/src/xmc_bccu.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  56:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  57:../Libraries/XMCLib/src/xmc_bccu.c ****  * <b>Detailed description of file:</b><br>
  58:../Libraries/XMCLib/src/xmc_bccu.c ****  * APIs for the functional blocks of BCCU have been defined:<br>
  59:../Libraries/XMCLib/src/xmc_bccu.c ****  * -- GLOBAL configuration <br>
  60:../Libraries/XMCLib/src/xmc_bccu.c ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration <br>
  61:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  62:../Libraries/XMCLib/src/xmc_bccu.c ****  * @endcond
  63:../Libraries/XMCLib/src/xmc_bccu.c ****  *
  64:../Libraries/XMCLib/src/xmc_bccu.c ****  */
  65:../Libraries/XMCLib/src/xmc_bccu.c **** 
  66:../Libraries/XMCLib/src/xmc_bccu.c **** /**************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_bccu.c ****  * HEADER FILES
  68:../Libraries/XMCLib/src/xmc_bccu.c ****  **************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_bccu.c **** #include "xmc_bccu.h"
  70:../Libraries/XMCLib/src/xmc_bccu.c **** 
  71:../Libraries/XMCLib/src/xmc_bccu.c **** #if defined(BCCU0)
  72:../Libraries/XMCLib/src/xmc_bccu.c **** #include "xmc_scu.h"
  73:../Libraries/XMCLib/src/xmc_bccu.c **** 
  74:../Libraries/XMCLib/src/xmc_bccu.c **** /**************************************************************************************************
  75:../Libraries/XMCLib/src/xmc_bccu.c ****  * MACROS
  76:../Libraries/XMCLib/src/xmc_bccu.c ****  **************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_bccu.c **** #define XMC_BCCU_NO_OF_CHANNELS    (9U)
  78:../Libraries/XMCLib/src/xmc_bccu.c **** #define XMC_BCCU_CHANNEL_MASK      ((0x1 << XMC_BCCU_NO_OF_CHANNELS)-1)
  79:../Libraries/XMCLib/src/xmc_bccu.c **** #define XMC_BCCU_NO_OF_DIM_ENGINE  (3U)
  80:../Libraries/XMCLib/src/xmc_bccu.c **** #define XMC_BCCU_DIM_ENGINE_MASK   (((0x1 << XMC_BCCU_NO_OF_DIM_ENGINE)-1))
  81:../Libraries/XMCLib/src/xmc_bccu.c **** 
  82:../Libraries/XMCLib/src/xmc_bccu.c **** /**************************************************************************************************
  83:../Libraries/XMCLib/src/xmc_bccu.c ****  * ENUMS
  84:../Libraries/XMCLib/src/xmc_bccu.c ****  **************************************************************************************************
  85:../Libraries/XMCLib/src/xmc_bccu.c **** 
  86:../Libraries/XMCLib/src/xmc_bccu.c **** /**************************************************************************************************
  87:../Libraries/XMCLib/src/xmc_bccu.c ****  * DATA STRUCTURES
  88:../Libraries/XMCLib/src/xmc_bccu.c ****  **************************************************************************************************
  89:../Libraries/XMCLib/src/xmc_bccu.c **** 
  90:../Libraries/XMCLib/src/xmc_bccu.c **** /**************************************************************************************************
  91:../Libraries/XMCLib/src/xmc_bccu.c ****  * GLOBAL DATA
  92:../Libraries/XMCLib/src/xmc_bccu.c ****  **************************************************************************************************
  93:../Libraries/XMCLib/src/xmc_bccu.c **** 
  94:../Libraries/XMCLib/src/xmc_bccu.c **** /**************************************************************************************************
  95:../Libraries/XMCLib/src/xmc_bccu.c ****  * LOCAL/UTILITY ROUTINES
  96:../Libraries/XMCLib/src/xmc_bccu.c ****  **************************************************************************************************
  97:../Libraries/XMCLib/src/xmc_bccu.c **** 
  98:../Libraries/XMCLib/src/xmc_bccu.c **** /**************************************************************************************************
  99:../Libraries/XMCLib/src/xmc_bccu.c ****  * API IMPLEMENTATION
 100:../Libraries/XMCLib/src/xmc_bccu.c ****  **************************************************************************************************
 101:../Libraries/XMCLib/src/xmc_bccu.c **** 
 102:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 103:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to initialise the global resources of a BCCU module
 104:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 105:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_GlobalInit(XMC_BCCU_t *const bccu, const XMC_BCCU_GLOBAL_CONFIG_t *const config)
 106:../Libraries/XMCLib/src/xmc_bccu.c **** {
  26              	 .loc 1 106 0
  27              	 .cfi_startproc
  28 0000 80B5     	 push {r7,lr}
  29              	.LCFI0:
  30              	 .cfi_def_cfa_offset 8
  31              	 .cfi_offset 7,-8
  32              	 .cfi_offset 14,-4
  33 0002 82B0     	 sub sp,sp,#8
  34              	.LCFI1:
  35              	 .cfi_def_cfa_offset 16
  36 0004 00AF     	 add r7,sp,#0
  37              	.LCFI2:
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
  40 0008 3960     	 str r1,[r7]
 107:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_BCCU0);
  41              	 .loc 1 107 0
  42 000a 1020     	 mov r0,#16
  43 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 108:../Libraries/XMCLib/src/xmc_bccu.c **** 
 109:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON = config->globcon;
  44              	 .loc 1 109 0
  45 0010 3B68     	 ldr r3,[r7]
  46 0012 1A68     	 ldr r2,[r3]
  47 0014 7B68     	 ldr r3,[r7,#4]
  48 0016 1A60     	 str r2,[r3]
 110:../Libraries/XMCLib/src/xmc_bccu.c **** 
 111:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCLK = config->globclk;
  49              	 .loc 1 111 0
  50 0018 3B68     	 ldr r3,[r7]
  51 001a 5A68     	 ldr r2,[r3,#4]
  52 001c 7B68     	 ldr r3,[r7,#4]
  53 001e 5A60     	 str r2,[r3,#4]
 112:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBDIM = config->global_dimlevel;
  54              	 .loc 1 112 0
  55 0020 3B68     	 ldr r3,[r7]
  56 0022 9A68     	 ldr r2,[r3,#8]
  57 0024 7B68     	 ldr r3,[r7,#4]
  58 0026 9A62     	 str r2,[r3,#40]
 113:../Libraries/XMCLib/src/xmc_bccu.c **** 
 114:../Libraries/XMCLib/src/xmc_bccu.c **** }
  59              	 .loc 1 114 0
  60 0028 BD46     	 mov sp,r7
  61 002a 02B0     	 add sp,sp,#8
  62              	 
  63 002c 80BD     	 pop {r7,pc}
  64              	 .cfi_endproc
  65              	.LFE96:
  67 002e C046     	 .section .text.XMC_BCCU_ConfigGlobalTrigger,"ax",%progbits
  68              	 .align 2
  69              	 .global XMC_BCCU_ConfigGlobalTrigger
  70              	 .code 16
  71              	 .thumb_func
  73              	XMC_BCCU_ConfigGlobalTrigger:
  74              	.LFB97:
 115:../Libraries/XMCLib/src/xmc_bccu.c **** 
 116:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 117:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the global trigger mode & delay of a BCCU module
 118:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 119:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConfigGlobalTrigger(XMC_BCCU_t *const bccu, XMC_BCCU_TRIGMODE_t mode, XMC_BCCU_TRIGDE
 120:../Libraries/XMCLib/src/xmc_bccu.c **** {
  75              	 .loc 1 120 0
  76              	 .cfi_startproc
  77 0000 80B5     	 push {r7,lr}
  78              	.LCFI3:
  79              	 .cfi_def_cfa_offset 8
  80              	 .cfi_offset 7,-8
  81              	 .cfi_offset 14,-4
  82 0002 82B0     	 sub sp,sp,#8
  83              	.LCFI4:
  84              	 .cfi_def_cfa_offset 16
  85 0004 00AF     	 add r7,sp,#0
  86              	.LCFI5:
  87              	 .cfi_def_cfa_register 7
  88 0006 7860     	 str r0,[r7,#4]
  89 0008 081C     	 mov r0,r1
  90 000a 111C     	 mov r1,r2
  91 000c FB1C     	 add r3,r7,#3
  92 000e 021C     	 add r2,r0,#0
  93 0010 1A70     	 strb r2,[r3]
  94 0012 BB1C     	 add r3,r7,#2
  95 0014 0A1C     	 add r2,r1,#0
  96 0016 1A70     	 strb r2,[r3]
 121:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON &= ~(uint32_t)(BCCU_GLOBCON_TM_Msk | BCCU_GLOBCON_TRDEL_Msk);
  97              	 .loc 1 121 0
  98 0018 7B68     	 ldr r3,[r7,#4]
  99 001a 1B68     	 ldr r3,[r3]
 100 001c 0D22     	 mov r2,#13
 101 001e 9343     	 bic r3,r2
 102 0020 1A1C     	 mov r2,r3
 103 0022 7B68     	 ldr r3,[r7,#4]
 104 0024 1A60     	 str r2,[r3]
 122:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON |= ((uint32_t)mode | ((uint32_t)delay << BCCU_GLOBCON_TRDEL_Pos));
 105              	 .loc 1 122 0
 106 0026 7B68     	 ldr r3,[r7,#4]
 107 0028 1A68     	 ldr r2,[r3]
 108 002a FB1C     	 add r3,r7,#3
 109 002c 1978     	 ldrb r1,[r3]
 110 002e BB1C     	 add r3,r7,#2
 111 0030 1B78     	 ldrb r3,[r3]
 112 0032 9B00     	 lsl r3,r3,#2
 113 0034 0B43     	 orr r3,r1
 114 0036 1A43     	 orr r2,r3
 115 0038 7B68     	 ldr r3,[r7,#4]
 116 003a 1A60     	 str r2,[r3]
 123:../Libraries/XMCLib/src/xmc_bccu.c **** }
 117              	 .loc 1 123 0
 118 003c BD46     	 mov sp,r7
 119 003e 02B0     	 add sp,sp,#8
 120              	 
 121 0040 80BD     	 pop {r7,pc}
 122              	 .cfi_endproc
 123              	.LFE97:
 125 0042 C046     	 .section .text.XMC_BCCU_SelectTrapInput,"ax",%progbits
 126              	 .align 2
 127              	 .global XMC_BCCU_SelectTrapInput
 128              	 .code 16
 129              	 .thumb_func
 131              	XMC_BCCU_SelectTrapInput:
 132              	.LFB98:
 124:../Libraries/XMCLib/src/xmc_bccu.c **** 
 125:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 126:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the trap input selection of a BCCU module
 127:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 128:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_SelectTrapInput (XMC_BCCU_t *const bccu, XMC_BCCU_CH_TRAP_IN_t input)
 129:../Libraries/XMCLib/src/xmc_bccu.c **** {
 133              	 .loc 1 129 0
 134              	 .cfi_startproc
 135 0000 80B5     	 push {r7,lr}
 136              	.LCFI6:
 137              	 .cfi_def_cfa_offset 8
 138              	 .cfi_offset 7,-8
 139              	 .cfi_offset 14,-4
 140 0002 82B0     	 sub sp,sp,#8
 141              	.LCFI7:
 142              	 .cfi_def_cfa_offset 16
 143 0004 00AF     	 add r7,sp,#0
 144              	.LCFI8:
 145              	 .cfi_def_cfa_register 7
 146 0006 7860     	 str r0,[r7,#4]
 147 0008 0A1C     	 mov r2,r1
 148 000a FB1C     	 add r3,r7,#3
 149 000c 1A70     	 strb r2,[r3]
 130:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON &= ~(uint32_t)(BCCU_GLOBCON_TRAPIS_Msk);
 150              	 .loc 1 130 0
 151 000e 7B68     	 ldr r3,[r7,#4]
 152 0010 1B68     	 ldr r3,[r3]
 153 0012 074A     	 ldr r2,.L4
 154 0014 1A40     	 and r2,r3
 155 0016 7B68     	 ldr r3,[r7,#4]
 156 0018 1A60     	 str r2,[r3]
 131:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON |= ((uint32_t)input << BCCU_GLOBCON_TRAPIS_Pos);
 157              	 .loc 1 131 0
 158 001a 7B68     	 ldr r3,[r7,#4]
 159 001c 1A68     	 ldr r2,[r3]
 160 001e FB1C     	 add r3,r7,#3
 161 0020 1B78     	 ldrb r3,[r3]
 162 0022 9B01     	 lsl r3,r3,#6
 163 0024 1A43     	 orr r2,r3
 164 0026 7B68     	 ldr r3,[r7,#4]
 165 0028 1A60     	 str r2,[r3]
 132:../Libraries/XMCLib/src/xmc_bccu.c **** }
 166              	 .loc 1 132 0
 167 002a BD46     	 mov sp,r7
 168 002c 02B0     	 add sp,sp,#8
 169              	 
 170 002e 80BD     	 pop {r7,pc}
 171              	.L5:
 172              	 .align 2
 173              	.L4:
 174 0030 3FFCFFFF 	 .word -961
 175              	 .cfi_endproc
 176              	.LFE98:
 178              	 .section .text.XMC_BCCU_SetTrapEdge,"ax",%progbits
 179              	 .align 2
 180              	 .global XMC_BCCU_SetTrapEdge
 181              	 .code 16
 182              	 .thumb_func
 184              	XMC_BCCU_SetTrapEdge:
 185              	.LFB99:
 133:../Libraries/XMCLib/src/xmc_bccu.c **** 
 134:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 135:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the trap edge selection of a BCCU module
 136:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 137:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_SetTrapEdge (XMC_BCCU_t *const bccu, XMC_BCCU_CH_TRAP_EDGE_t edge)
 138:../Libraries/XMCLib/src/xmc_bccu.c **** {
 186              	 .loc 1 138 0
 187              	 .cfi_startproc
 188 0000 80B5     	 push {r7,lr}
 189              	.LCFI9:
 190              	 .cfi_def_cfa_offset 8
 191              	 .cfi_offset 7,-8
 192              	 .cfi_offset 14,-4
 193 0002 82B0     	 sub sp,sp,#8
 194              	.LCFI10:
 195              	 .cfi_def_cfa_offset 16
 196 0004 00AF     	 add r7,sp,#0
 197              	.LCFI11:
 198              	 .cfi_def_cfa_register 7
 199 0006 7860     	 str r0,[r7,#4]
 200 0008 0A1C     	 mov r2,r1
 201 000a FB1C     	 add r3,r7,#3
 202 000c 1A70     	 strb r2,[r3]
 139:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON &= ~(uint32_t)(BCCU_GLOBCON_TRAPED_Msk);
 203              	 .loc 1 139 0
 204 000e 7B68     	 ldr r3,[r7,#4]
 205 0010 1B68     	 ldr r3,[r3]
 206 0012 074A     	 ldr r2,.L7
 207 0014 1A40     	 and r2,r3
 208 0016 7B68     	 ldr r3,[r7,#4]
 209 0018 1A60     	 str r2,[r3]
 140:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON |= ((uint32_t)edge << BCCU_GLOBCON_TRAPED_Pos);
 210              	 .loc 1 140 0
 211 001a 7B68     	 ldr r3,[r7,#4]
 212 001c 1A68     	 ldr r2,[r3]
 213 001e FB1C     	 add r3,r7,#3
 214 0020 1B78     	 ldrb r3,[r3]
 215 0022 9B02     	 lsl r3,r3,#10
 216 0024 1A43     	 orr r2,r3
 217 0026 7B68     	 ldr r3,[r7,#4]
 218 0028 1A60     	 str r2,[r3]
 141:../Libraries/XMCLib/src/xmc_bccu.c **** }
 219              	 .loc 1 141 0
 220 002a BD46     	 mov sp,r7
 221 002c 02B0     	 add sp,sp,#8
 222              	 
 223 002e 80BD     	 pop {r7,pc}
 224              	.L8:
 225              	 .align 2
 226              	.L7:
 227 0030 FFFBFFFF 	 .word -1025
 228              	 .cfi_endproc
 229              	.LFE99:
 231              	 .section .text.XMC_BCCU_ConfigSuspendMode,"ax",%progbits
 232              	 .align 2
 233              	 .global XMC_BCCU_ConfigSuspendMode
 234              	 .code 16
 235              	 .thumb_func
 237              	XMC_BCCU_ConfigSuspendMode:
 238              	.LFB100:
 142:../Libraries/XMCLib/src/xmc_bccu.c **** 
 143:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 144:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the suspend mode of a BCCU module
 145:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 146:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConfigSuspendMode (XMC_BCCU_t *const bccu, XMC_BCCU_SUSPEND_MODE_t mode)
 147:../Libraries/XMCLib/src/xmc_bccu.c **** {
 239              	 .loc 1 147 0
 240              	 .cfi_startproc
 241 0000 80B5     	 push {r7,lr}
 242              	.LCFI12:
 243              	 .cfi_def_cfa_offset 8
 244              	 .cfi_offset 7,-8
 245              	 .cfi_offset 14,-4
 246 0002 82B0     	 sub sp,sp,#8
 247              	.LCFI13:
 248              	 .cfi_def_cfa_offset 16
 249 0004 00AF     	 add r7,sp,#0
 250              	.LCFI14:
 251              	 .cfi_def_cfa_register 7
 252 0006 7860     	 str r0,[r7,#4]
 253 0008 0A1C     	 mov r2,r1
 254 000a FB1C     	 add r3,r7,#3
 255 000c 1A70     	 strb r2,[r3]
 148:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON &= ~(uint32_t)(BCCU_GLOBCON_SUSCFG_Msk);
 256              	 .loc 1 148 0
 257 000e 7B68     	 ldr r3,[r7,#4]
 258 0010 1B68     	 ldr r3,[r3]
 259 0012 3022     	 mov r2,#48
 260 0014 9343     	 bic r3,r2
 261 0016 1A1C     	 mov r2,r3
 262 0018 7B68     	 ldr r3,[r7,#4]
 263 001a 1A60     	 str r2,[r3]
 149:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON |= ((uint32_t)mode << BCCU_GLOBCON_SUSCFG_Pos);
 264              	 .loc 1 149 0
 265 001c 7B68     	 ldr r3,[r7,#4]
 266 001e 1A68     	 ldr r2,[r3]
 267 0020 FB1C     	 add r3,r7,#3
 268 0022 1B78     	 ldrb r3,[r3]
 269 0024 1B01     	 lsl r3,r3,#4
 270 0026 1A43     	 orr r2,r3
 271 0028 7B68     	 ldr r3,[r7,#4]
 272 002a 1A60     	 str r2,[r3]
 150:../Libraries/XMCLib/src/xmc_bccu.c **** }
 273              	 .loc 1 150 0
 274 002c BD46     	 mov sp,r7
 275 002e 02B0     	 add sp,sp,#8
 276              	 
 277 0030 80BD     	 pop {r7,pc}
 278              	 .cfi_endproc
 279              	.LFE100:
 281 0032 C046     	 .section .text.XMC_BCCU_SetFlickerWDThreshold,"ax",%progbits
 282              	 .align 2
 283              	 .global XMC_BCCU_SetFlickerWDThreshold
 284              	 .code 16
 285              	 .thumb_func
 287              	XMC_BCCU_SetFlickerWDThreshold:
 288              	.LFB101:
 151:../Libraries/XMCLib/src/xmc_bccu.c **** 
 152:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 153:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure number of consecutive zeroes allowed at modulator output (flicker watch-dog num
 154:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 155:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_SetFlickerWDThreshold (XMC_BCCU_t *const bccu, uint32_t threshold_no)
 156:../Libraries/XMCLib/src/xmc_bccu.c **** {
 289              	 .loc 1 156 0
 290              	 .cfi_startproc
 291 0000 80B5     	 push {r7,lr}
 292              	.LCFI15:
 293              	 .cfi_def_cfa_offset 8
 294              	 .cfi_offset 7,-8
 295              	 .cfi_offset 14,-4
 296 0002 82B0     	 sub sp,sp,#8
 297              	.LCFI16:
 298              	 .cfi_def_cfa_offset 16
 299 0004 00AF     	 add r7,sp,#0
 300              	.LCFI17:
 301              	 .cfi_def_cfa_register 7
 302 0006 7860     	 str r0,[r7,#4]
 303 0008 3960     	 str r1,[r7]
 157:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_SetFlickerWDThreshold: Invalid threshold no", (threshold_no <= BCCU_GLOBCON_
 158:../Libraries/XMCLib/src/xmc_bccu.c **** 
 159:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON &= ~(uint32_t)(BCCU_GLOBCON_WDMBN_Msk);
 304              	 .loc 1 159 0
 305 000a 7B68     	 ldr r3,[r7,#4]
 306 000c 1B68     	 ldr r3,[r3]
 307 000e 074A     	 ldr r2,.L11
 308 0010 1A40     	 and r2,r3
 309 0012 7B68     	 ldr r3,[r7,#4]
 310 0014 1A60     	 str r2,[r3]
 160:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON |= (uint32_t)(threshold_no << BCCU_GLOBCON_WDMBN_Pos);
 311              	 .loc 1 160 0
 312 0016 7B68     	 ldr r3,[r7,#4]
 313 0018 1A68     	 ldr r2,[r3]
 314 001a 3B68     	 ldr r3,[r7]
 315 001c 1B04     	 lsl r3,r3,#16
 316 001e 1A43     	 orr r2,r3
 317 0020 7B68     	 ldr r3,[r7,#4]
 318 0022 1A60     	 str r2,[r3]
 161:../Libraries/XMCLib/src/xmc_bccu.c **** }
 319              	 .loc 1 161 0
 320 0024 BD46     	 mov sp,r7
 321 0026 02B0     	 add sp,sp,#8
 322              	 
 323 0028 80BD     	 pop {r7,pc}
 324              	.L12:
 325 002a C046     	 .align 2
 326              	.L11:
 327 002c FFFF00F0 	 .word -268369921
 328              	 .cfi_endproc
 329              	.LFE101:
 331              	 .section .text.XMC_BCCU_SetFastClockPrescaler,"ax",%progbits
 332              	 .align 2
 333              	 .global XMC_BCCU_SetFastClockPrescaler
 334              	 .code 16
 335              	 .thumb_func
 337              	XMC_BCCU_SetFastClockPrescaler:
 338              	.LFB102:
 162:../Libraries/XMCLib/src/xmc_bccu.c **** 
 163:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 164:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the fast clock prescaler factor of a BCCU module
 165:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 166:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_SetFastClockPrescaler (XMC_BCCU_t *const bccu, uint32_t div)
 167:../Libraries/XMCLib/src/xmc_bccu.c **** {
 339              	 .loc 1 167 0
 340              	 .cfi_startproc
 341 0000 80B5     	 push {r7,lr}
 342              	.LCFI18:
 343              	 .cfi_def_cfa_offset 8
 344              	 .cfi_offset 7,-8
 345              	 .cfi_offset 14,-4
 346 0002 82B0     	 sub sp,sp,#8
 347              	.LCFI19:
 348              	 .cfi_def_cfa_offset 16
 349 0004 00AF     	 add r7,sp,#0
 350              	.LCFI20:
 351              	 .cfi_def_cfa_register 7
 352 0006 7860     	 str r0,[r7,#4]
 353 0008 3960     	 str r1,[r7]
 168:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_SetFastClockPrescaler: Invalid divider value", (div <= BCCU_GLOBCLK_FCLK_PS_
 169:../Libraries/XMCLib/src/xmc_bccu.c **** 
 170:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCLK &= ~(uint32_t)(BCCU_GLOBCLK_FCLK_PS_Msk);
 354              	 .loc 1 170 0
 355 000a 7B68     	 ldr r3,[r7,#4]
 356 000c 5B68     	 ldr r3,[r3,#4]
 357 000e 1B0B     	 lsr r3,r3,#12
 358 0010 1A03     	 lsl r2,r3,#12
 359 0012 7B68     	 ldr r3,[r7,#4]
 360 0014 5A60     	 str r2,[r3,#4]
 171:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCLK |= div;
 361              	 .loc 1 171 0
 362 0016 7B68     	 ldr r3,[r7,#4]
 363 0018 5A68     	 ldr r2,[r3,#4]
 364 001a 3B68     	 ldr r3,[r7]
 365 001c 1A43     	 orr r2,r3
 366 001e 7B68     	 ldr r3,[r7,#4]
 367 0020 5A60     	 str r2,[r3,#4]
 172:../Libraries/XMCLib/src/xmc_bccu.c **** 
 173:../Libraries/XMCLib/src/xmc_bccu.c **** }
 368              	 .loc 1 173 0
 369 0022 BD46     	 mov sp,r7
 370 0024 02B0     	 add sp,sp,#8
 371              	 
 372 0026 80BD     	 pop {r7,pc}
 373              	 .cfi_endproc
 374              	.LFE102:
 376              	 .section .text.XMC_BCCU_SetDimClockPrescaler,"ax",%progbits
 377              	 .align 2
 378              	 .global XMC_BCCU_SetDimClockPrescaler
 379              	 .code 16
 380              	 .thumb_func
 382              	XMC_BCCU_SetDimClockPrescaler:
 383              	.LFB103:
 174:../Libraries/XMCLib/src/xmc_bccu.c **** 
 175:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 176:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the dimmer clock prescaler factor of a BCCU module
 177:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 178:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_SetDimClockPrescaler (XMC_BCCU_t *const bccu, uint32_t div)
 179:../Libraries/XMCLib/src/xmc_bccu.c **** {
 384              	 .loc 1 179 0
 385              	 .cfi_startproc
 386 0000 80B5     	 push {r7,lr}
 387              	.LCFI21:
 388              	 .cfi_def_cfa_offset 8
 389              	 .cfi_offset 7,-8
 390              	 .cfi_offset 14,-4
 391 0002 82B0     	 sub sp,sp,#8
 392              	.LCFI22:
 393              	 .cfi_def_cfa_offset 16
 394 0004 00AF     	 add r7,sp,#0
 395              	.LCFI23:
 396              	 .cfi_def_cfa_register 7
 397 0006 7860     	 str r0,[r7,#4]
 398 0008 3960     	 str r1,[r7]
 180:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_SetDimClockPrescaler: Invalid divider value", (div <= BCCU_GLOBCLK_DCLK_PS_M
 181:../Libraries/XMCLib/src/xmc_bccu.c **** 
 182:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCLK &= ~(uint32_t)(BCCU_GLOBCLK_DCLK_PS_Msk);
 399              	 .loc 1 182 0
 400 000a 7B68     	 ldr r3,[r7,#4]
 401 000c 5B68     	 ldr r3,[r3,#4]
 402 000e 074A     	 ldr r2,.L15
 403 0010 1A40     	 and r2,r3
 404 0012 7B68     	 ldr r3,[r7,#4]
 405 0014 5A60     	 str r2,[r3,#4]
 183:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCLK |= (uint32_t)(div << BCCU_GLOBCLK_DCLK_PS_Pos);
 406              	 .loc 1 183 0
 407 0016 7B68     	 ldr r3,[r7,#4]
 408 0018 5A68     	 ldr r2,[r3,#4]
 409 001a 3B68     	 ldr r3,[r7]
 410 001c 1B04     	 lsl r3,r3,#16
 411 001e 1A43     	 orr r2,r3
 412 0020 7B68     	 ldr r3,[r7,#4]
 413 0022 5A60     	 str r2,[r3,#4]
 184:../Libraries/XMCLib/src/xmc_bccu.c **** 
 185:../Libraries/XMCLib/src/xmc_bccu.c **** }
 414              	 .loc 1 185 0
 415 0024 BD46     	 mov sp,r7
 416 0026 02B0     	 add sp,sp,#8
 417              	 
 418 0028 80BD     	 pop {r7,pc}
 419              	.L16:
 420 002a C046     	 .align 2
 421              	.L15:
 422 002c FFFF00F0 	 .word -268369921
 423              	 .cfi_endproc
 424              	.LFE103:
 426              	 .section .text.XMC_BCCU_SelectBitClock,"ax",%progbits
 427              	 .align 2
 428              	 .global XMC_BCCU_SelectBitClock
 429              	 .code 16
 430              	 .thumb_func
 432              	XMC_BCCU_SelectBitClock:
 433              	.LFB104:
 186:../Libraries/XMCLib/src/xmc_bccu.c **** 
 187:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 188:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the modulator output (bit-time) clock prescaler factor of a BCCU module
 189:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 190:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_SelectBitClock (XMC_BCCU_t *const bccu, XMC_BCCU_BCLK_MODE_t div)
 191:../Libraries/XMCLib/src/xmc_bccu.c **** {
 434              	 .loc 1 191 0
 435              	 .cfi_startproc
 436 0000 80B5     	 push {r7,lr}
 437              	.LCFI24:
 438              	 .cfi_def_cfa_offset 8
 439              	 .cfi_offset 7,-8
 440              	 .cfi_offset 14,-4
 441 0002 82B0     	 sub sp,sp,#8
 442              	.LCFI25:
 443              	 .cfi_def_cfa_offset 16
 444 0004 00AF     	 add r7,sp,#0
 445              	.LCFI26:
 446              	 .cfi_def_cfa_register 7
 447 0006 7860     	 str r0,[r7,#4]
 448 0008 0A1C     	 mov r2,r1
 449 000a FB1C     	 add r3,r7,#3
 450 000c 1A70     	 strb r2,[r3]
 192:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCLK &= ~(uint32_t)(BCCU_GLOBCLK_BCS_Msk);
 451              	 .loc 1 192 0
 452 000e 7B68     	 ldr r3,[r7,#4]
 453 0010 5B68     	 ldr r3,[r3,#4]
 454 0012 074A     	 ldr r2,.L18
 455 0014 1A40     	 and r2,r3
 456 0016 7B68     	 ldr r3,[r7,#4]
 457 0018 5A60     	 str r2,[r3,#4]
 193:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCLK |= ((uint32_t)div << BCCU_GLOBCLK_BCS_Pos);
 458              	 .loc 1 193 0
 459 001a 7B68     	 ldr r3,[r7,#4]
 460 001c 5A68     	 ldr r2,[r3,#4]
 461 001e FB1C     	 add r3,r7,#3
 462 0020 1B78     	 ldrb r3,[r3]
 463 0022 DB03     	 lsl r3,r3,#15
 464 0024 1A43     	 orr r2,r3
 465 0026 7B68     	 ldr r3,[r7,#4]
 466 0028 5A60     	 str r2,[r3,#4]
 194:../Libraries/XMCLib/src/xmc_bccu.c **** }
 467              	 .loc 1 194 0
 468 002a BD46     	 mov sp,r7
 469 002c 02B0     	 add sp,sp,#8
 470              	 
 471 002e 80BD     	 pop {r7,pc}
 472              	.L19:
 473              	 .align 2
 474              	.L18:
 475 0030 FF7FFFFF 	 .word -32769
 476              	 .cfi_endproc
 477              	.LFE104:
 479              	 .section .text.XMC_BCCU_ConcurrentEnableChannels,"ax",%progbits
 480              	 .align 2
 481              	 .global XMC_BCCU_ConcurrentEnableChannels
 482              	 .code 16
 483              	 .thumb_func
 485              	XMC_BCCU_ConcurrentEnableChannels:
 486              	.LFB105:
 195:../Libraries/XMCLib/src/xmc_bccu.c **** 
 196:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 197:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to enable the channels at the same time
 198:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 199:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentEnableChannels (XMC_BCCU_t *const bccu, uint32_t mask)
 200:../Libraries/XMCLib/src/xmc_bccu.c **** {
 487              	 .loc 1 200 0
 488              	 .cfi_startproc
 489 0000 80B5     	 push {r7,lr}
 490              	.LCFI27:
 491              	 .cfi_def_cfa_offset 8
 492              	 .cfi_offset 7,-8
 493              	 .cfi_offset 14,-4
 494 0002 82B0     	 sub sp,sp,#8
 495              	.LCFI28:
 496              	 .cfi_def_cfa_offset 16
 497 0004 00AF     	 add r7,sp,#0
 498              	.LCFI29:
 499              	 .cfi_def_cfa_register 7
 500 0006 7860     	 str r0,[r7,#4]
 501 0008 3960     	 str r1,[r7]
 201:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentEnableChannels: Invalid channel mask", (mask <= XMC_BCCU_CHANNEL_M
 202:../Libraries/XMCLib/src/xmc_bccu.c **** 
 203:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHEN |= mask;
 502              	 .loc 1 203 0
 503 000a 7B68     	 ldr r3,[r7,#4]
 504 000c DA68     	 ldr r2,[r3,#12]
 505 000e 3B68     	 ldr r3,[r7]
 506 0010 1A43     	 orr r2,r3
 507 0012 7B68     	 ldr r3,[r7,#4]
 508 0014 DA60     	 str r2,[r3,#12]
 204:../Libraries/XMCLib/src/xmc_bccu.c **** }
 509              	 .loc 1 204 0
 510 0016 BD46     	 mov sp,r7
 511 0018 02B0     	 add sp,sp,#8
 512              	 
 513 001a 80BD     	 pop {r7,pc}
 514              	 .cfi_endproc
 515              	.LFE105:
 517              	 .section .text.XMC_BCCU_ConcurrentDisableChannels,"ax",%progbits
 518              	 .align 2
 519              	 .global XMC_BCCU_ConcurrentDisableChannels
 520              	 .code 16
 521              	 .thumb_func
 523              	XMC_BCCU_ConcurrentDisableChannels:
 524              	.LFB106:
 205:../Libraries/XMCLib/src/xmc_bccu.c **** 
 206:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 207:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to disable the channels at the same time
 208:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 209:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentDisableChannels (XMC_BCCU_t *const bccu, uint32_t mask)
 210:../Libraries/XMCLib/src/xmc_bccu.c **** {
 525              	 .loc 1 210 0
 526              	 .cfi_startproc
 527 0000 80B5     	 push {r7,lr}
 528              	.LCFI30:
 529              	 .cfi_def_cfa_offset 8
 530              	 .cfi_offset 7,-8
 531              	 .cfi_offset 14,-4
 532 0002 82B0     	 sub sp,sp,#8
 533              	.LCFI31:
 534              	 .cfi_def_cfa_offset 16
 535 0004 00AF     	 add r7,sp,#0
 536              	.LCFI32:
 537              	 .cfi_def_cfa_register 7
 538 0006 7860     	 str r0,[r7,#4]
 539 0008 3960     	 str r1,[r7]
 211:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentDisableChannels: Invalid channel mask", (mask <= XMC_BCCU_CHANNEL_
 212:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHEN &= ~(uint32_t)(mask);
 540              	 .loc 1 212 0
 541 000a 7B68     	 ldr r3,[r7,#4]
 542 000c DB68     	 ldr r3,[r3,#12]
 543 000e 3A68     	 ldr r2,[r7]
 544 0010 D243     	 mvn r2,r2
 545 0012 1A40     	 and r2,r3
 546 0014 7B68     	 ldr r3,[r7,#4]
 547 0016 DA60     	 str r2,[r3,#12]
 213:../Libraries/XMCLib/src/xmc_bccu.c **** }
 548              	 .loc 1 213 0
 549 0018 BD46     	 mov sp,r7
 550 001a 02B0     	 add sp,sp,#8
 551              	 
 552 001c 80BD     	 pop {r7,pc}
 553              	 .cfi_endproc
 554              	.LFE106:
 556 001e C046     	 .section .text.XMC_BCCU_ConcurrentSetOutputPassiveLevel,"ax",%progbits
 557              	 .align 2
 558              	 .global XMC_BCCU_ConcurrentSetOutputPassiveLevel
 559              	 .code 16
 560              	 .thumb_func
 562              	XMC_BCCU_ConcurrentSetOutputPassiveLevel:
 563              	.LFB107:
 214:../Libraries/XMCLib/src/xmc_bccu.c **** 
 215:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 216:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to set the channel's output passive levels at the same time
 217:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 218:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentSetOutputPassiveLevel(XMC_BCCU_t *const bccu, uint32_t chan_mask, XMC_BCCU_
 219:../Libraries/XMCLib/src/xmc_bccu.c **** {
 564              	 .loc 1 219 0
 565              	 .cfi_startproc
 566 0000 80B5     	 push {r7,lr}
 567              	.LCFI33:
 568              	 .cfi_def_cfa_offset 8
 569              	 .cfi_offset 7,-8
 570              	 .cfi_offset 14,-4
 571 0002 84B0     	 sub sp,sp,#16
 572              	.LCFI34:
 573              	 .cfi_def_cfa_offset 24
 574 0004 00AF     	 add r7,sp,#0
 575              	.LCFI35:
 576              	 .cfi_def_cfa_register 7
 577 0006 F860     	 str r0,[r7,#12]
 578 0008 B960     	 str r1,[r7,#8]
 579 000a FB1D     	 add r3,r7,#7
 580 000c 1A70     	 strb r2,[r3]
 220:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentSetOutputPassiveLevel: Invalid channel mask", (chan_mask <= XMC_BC
 221:../Libraries/XMCLib/src/xmc_bccu.c **** 
 222:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHOCON &= ~(uint32_t)(chan_mask);
 581              	 .loc 1 222 0
 582 000e FB68     	 ldr r3,[r7,#12]
 583 0010 1B69     	 ldr r3,[r3,#16]
 584 0012 BA68     	 ldr r2,[r7,#8]
 585 0014 D243     	 mvn r2,r2
 586 0016 1A40     	 and r2,r3
 587 0018 FB68     	 ldr r3,[r7,#12]
 588 001a 1A61     	 str r2,[r3,#16]
 223:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHOCON |= (chan_mask * (uint32_t)level);
 589              	 .loc 1 223 0
 590 001c FB68     	 ldr r3,[r7,#12]
 591 001e 1A69     	 ldr r2,[r3,#16]
 592 0020 FB1D     	 add r3,r7,#7
 593 0022 1B78     	 ldrb r3,[r3]
 594 0024 B968     	 ldr r1,[r7,#8]
 595 0026 4B43     	 mul r3,r1
 596 0028 1A43     	 orr r2,r3
 597 002a FB68     	 ldr r3,[r7,#12]
 598 002c 1A61     	 str r2,[r3,#16]
 224:../Libraries/XMCLib/src/xmc_bccu.c **** }
 599              	 .loc 1 224 0
 600 002e BD46     	 mov sp,r7
 601 0030 04B0     	 add sp,sp,#16
 602              	 
 603 0032 80BD     	 pop {r7,pc}
 604              	 .cfi_endproc
 605              	.LFE107:
 607              	 .section .text.XMC_BCCU_ConcurrentEnableTrap,"ax",%progbits
 608              	 .align 2
 609              	 .global XMC_BCCU_ConcurrentEnableTrap
 610              	 .code 16
 611              	 .thumb_func
 613              	XMC_BCCU_ConcurrentEnableTrap:
 614              	.LFB108:
 225:../Libraries/XMCLib/src/xmc_bccu.c **** 
 226:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 227:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to enable the various types of traps at the same time
 228:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 229:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentEnableTrap (XMC_BCCU_t *const bccu, uint32_t mask)
 230:../Libraries/XMCLib/src/xmc_bccu.c **** {
 615              	 .loc 1 230 0
 616              	 .cfi_startproc
 617 0000 80B5     	 push {r7,lr}
 618              	.LCFI36:
 619              	 .cfi_def_cfa_offset 8
 620              	 .cfi_offset 7,-8
 621              	 .cfi_offset 14,-4
 622 0002 82B0     	 sub sp,sp,#8
 623              	.LCFI37:
 624              	 .cfi_def_cfa_offset 16
 625 0004 00AF     	 add r7,sp,#0
 626              	.LCFI38:
 627              	 .cfi_def_cfa_register 7
 628 0006 7860     	 str r0,[r7,#4]
 629 0008 3960     	 str r1,[r7]
 231:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentEnableTrap: Invalid channel mask", (mask <= XMC_BCCU_CHANNEL_MASK)
 232:../Libraries/XMCLib/src/xmc_bccu.c **** 
 233:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHOCON |= (uint32_t)(mask << BCCU_CHOCON_CH0TPE_Pos);
 630              	 .loc 1 233 0
 631 000a 7B68     	 ldr r3,[r7,#4]
 632 000c 1A69     	 ldr r2,[r3,#16]
 633 000e 3B68     	 ldr r3,[r7]
 634 0010 1B04     	 lsl r3,r3,#16
 635 0012 1A43     	 orr r2,r3
 636 0014 7B68     	 ldr r3,[r7,#4]
 637 0016 1A61     	 str r2,[r3,#16]
 234:../Libraries/XMCLib/src/xmc_bccu.c **** }
 638              	 .loc 1 234 0
 639 0018 BD46     	 mov sp,r7
 640 001a 02B0     	 add sp,sp,#8
 641              	 
 642 001c 80BD     	 pop {r7,pc}
 643              	 .cfi_endproc
 644              	.LFE108:
 646 001e C046     	 .section .text.XMC_BCCU_ConcurrentDisableTrap,"ax",%progbits
 647              	 .align 2
 648              	 .global XMC_BCCU_ConcurrentDisableTrap
 649              	 .code 16
 650              	 .thumb_func
 652              	XMC_BCCU_ConcurrentDisableTrap:
 653              	.LFB109:
 235:../Libraries/XMCLib/src/xmc_bccu.c **** 
 236:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 237:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to disable the various types of traps at the same time
 238:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 239:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentDisableTrap (XMC_BCCU_t *const bccu, uint32_t mask)
 240:../Libraries/XMCLib/src/xmc_bccu.c **** {
 654              	 .loc 1 240 0
 655              	 .cfi_startproc
 656 0000 80B5     	 push {r7,lr}
 657              	.LCFI39:
 658              	 .cfi_def_cfa_offset 8
 659              	 .cfi_offset 7,-8
 660              	 .cfi_offset 14,-4
 661 0002 82B0     	 sub sp,sp,#8
 662              	.LCFI40:
 663              	 .cfi_def_cfa_offset 16
 664 0004 00AF     	 add r7,sp,#0
 665              	.LCFI41:
 666              	 .cfi_def_cfa_register 7
 667 0006 7860     	 str r0,[r7,#4]
 668 0008 3960     	 str r1,[r7]
 241:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentDisableTrap: Invalid channel mask", (mask <= XMC_BCCU_CHANNEL_MASK
 242:../Libraries/XMCLib/src/xmc_bccu.c **** 
 243:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHOCON &= ~(uint32_t)(mask << BCCU_CHOCON_CH0TPE_Pos);
 669              	 .loc 1 243 0
 670 000a 7B68     	 ldr r3,[r7,#4]
 671 000c 1B69     	 ldr r3,[r3,#16]
 672 000e 3A68     	 ldr r2,[r7]
 673 0010 1204     	 lsl r2,r2,#16
 674 0012 D243     	 mvn r2,r2
 675 0014 1A40     	 and r2,r3
 676 0016 7B68     	 ldr r3,[r7,#4]
 677 0018 1A61     	 str r2,[r3,#16]
 244:../Libraries/XMCLib/src/xmc_bccu.c **** }
 678              	 .loc 1 244 0
 679 001a BD46     	 mov sp,r7
 680 001c 02B0     	 add sp,sp,#8
 681              	 
 682 001e 80BD     	 pop {r7,pc}
 683              	 .cfi_endproc
 684              	.LFE109:
 686              	 .section .text.XMC_BCCU_ConcurrentConfigTrigger,"ax",%progbits
 687              	 .align 2
 688              	 .global XMC_BCCU_ConcurrentConfigTrigger
 689              	 .code 16
 690              	 .thumb_func
 692              	XMC_BCCU_ConcurrentConfigTrigger:
 693              	.LFB110:
 245:../Libraries/XMCLib/src/xmc_bccu.c **** 
 246:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 247:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure trigger mode and trigger delay at the same time, and also configure the channel
 248:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 249:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentConfigTrigger (XMC_BCCU_t *const bccu, XMC_BCCU_TRIG_CONFIG_t *trig)
 250:../Libraries/XMCLib/src/xmc_bccu.c **** {
 694              	 .loc 1 250 0
 695              	 .cfi_startproc
 696 0000 80B5     	 push {r7,lr}
 697              	.LCFI42:
 698              	 .cfi_def_cfa_offset 8
 699              	 .cfi_offset 7,-8
 700              	 .cfi_offset 14,-4
 701 0002 84B0     	 sub sp,sp,#16
 702              	.LCFI43:
 703              	 .cfi_def_cfa_offset 24
 704 0004 00AF     	 add r7,sp,#0
 705              	.LCFI44:
 706              	 .cfi_def_cfa_register 7
 707 0006 7860     	 str r0,[r7,#4]
 708 0008 3960     	 str r1,[r7]
 251:../Libraries/XMCLib/src/xmc_bccu.c ****   uint32_t reg;
 252:../Libraries/XMCLib/src/xmc_bccu.c **** 
 253:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentConfigTrigger: Invalid channel mask", (trig->mask_chans <= XMC_BCC
 254:../Libraries/XMCLib/src/xmc_bccu.c **** 
 255:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON &= ~(uint32_t)(BCCU_GLOBCON_TM_Msk | BCCU_GLOBCON_TRDEL_Msk);
 709              	 .loc 1 255 0
 710 000a 7B68     	 ldr r3,[r7,#4]
 711 000c 1B68     	 ldr r3,[r3]
 712 000e 0D22     	 mov r2,#13
 713 0010 9343     	 bic r3,r2
 714 0012 1A1C     	 mov r2,r3
 715 0014 7B68     	 ldr r3,[r7,#4]
 716 0016 1A60     	 str r2,[r3]
 256:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBCON |= ((uint32_t)trig->mode | ((uint32_t)trig->delay << BCCU_GLOBCON_TRDEL_Pos));
 717              	 .loc 1 256 0
 718 0018 7B68     	 ldr r3,[r7,#4]
 719 001a 1A68     	 ldr r2,[r3]
 720 001c 3B68     	 ldr r3,[r7]
 721 001e 1B78     	 ldrb r3,[r3]
 722 0020 191C     	 mov r1,r3
 723 0022 3B68     	 ldr r3,[r7]
 724 0024 5B78     	 ldrb r3,[r3,#1]
 725 0026 9B00     	 lsl r3,r3,#2
 726 0028 0B43     	 orr r3,r1
 727 002a 1A43     	 orr r2,r3
 728 002c 7B68     	 ldr r3,[r7,#4]
 729 002e 1A60     	 str r2,[r3]
 257:../Libraries/XMCLib/src/xmc_bccu.c ****   reg = 0U;
 730              	 .loc 1 257 0
 731 0030 0023     	 mov r3,#0
 732 0032 FB60     	 str r3,[r7,#12]
 258:../Libraries/XMCLib/src/xmc_bccu.c ****   reg |= trig->mask_chans;
 733              	 .loc 1 258 0
 734 0034 3B68     	 ldr r3,[r7]
 735 0036 5B88     	 ldrh r3,[r3,#2]
 736 0038 1A1C     	 mov r2,r3
 737 003a FB68     	 ldr r3,[r7,#12]
 738 003c 1343     	 orr r3,r2
 739 003e FB60     	 str r3,[r7,#12]
 259:../Libraries/XMCLib/src/xmc_bccu.c ****   reg |= ((uint32_t)trig->mask_trig_lines << BCCU_CHTRIG_TOS0_Pos);
 740              	 .loc 1 259 0
 741 0040 3B68     	 ldr r3,[r7]
 742 0042 9B88     	 ldrh r3,[r3,#4]
 743 0044 1B04     	 lsl r3,r3,#16
 744 0046 FA68     	 ldr r2,[r7,#12]
 745 0048 1343     	 orr r3,r2
 746 004a FB60     	 str r3,[r7,#12]
 260:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHTRIG = reg;
 747              	 .loc 1 260 0
 748 004c 7B68     	 ldr r3,[r7,#4]
 749 004e FA68     	 ldr r2,[r7,#12]
 750 0050 5A61     	 str r2,[r3,#20]
 261:../Libraries/XMCLib/src/xmc_bccu.c **** }
 751              	 .loc 1 261 0
 752 0052 BD46     	 mov sp,r7
 753 0054 04B0     	 add sp,sp,#16
 754              	 
 755 0056 80BD     	 pop {r7,pc}
 756              	 .cfi_endproc
 757              	.LFE110:
 759              	 .section .text.XMC_BCCU_ConcurrentStartLinearWalk,"ax",%progbits
 760              	 .align 2
 761              	 .global XMC_BCCU_ConcurrentStartLinearWalk
 762              	 .code 16
 763              	 .thumb_func
 765              	XMC_BCCU_ConcurrentStartLinearWalk:
 766              	.LFB111:
 262:../Libraries/XMCLib/src/xmc_bccu.c **** 
 263:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 264:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to start the linear walk of the channels to change towards target intensity at the same time
 265:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 266:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentStartLinearWalk (XMC_BCCU_t *const bccu, uint32_t mask)
 267:../Libraries/XMCLib/src/xmc_bccu.c **** {
 767              	 .loc 1 267 0
 768              	 .cfi_startproc
 769 0000 80B5     	 push {r7,lr}
 770              	.LCFI45:
 771              	 .cfi_def_cfa_offset 8
 772              	 .cfi_offset 7,-8
 773              	 .cfi_offset 14,-4
 774 0002 82B0     	 sub sp,sp,#8
 775              	.LCFI46:
 776              	 .cfi_def_cfa_offset 16
 777 0004 00AF     	 add r7,sp,#0
 778              	.LCFI47:
 779              	 .cfi_def_cfa_register 7
 780 0006 7860     	 str r0,[r7,#4]
 781 0008 3960     	 str r1,[r7]
 268:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentStartLinearWalk: Invalid channel mask", (mask <= XMC_BCCU_CHANNEL_
 269:../Libraries/XMCLib/src/xmc_bccu.c **** 
 270:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHSTRCON |= (uint32_t)(mask);
 782              	 .loc 1 270 0
 783 000a 7B68     	 ldr r3,[r7,#4]
 784 000c 9A69     	 ldr r2,[r3,#24]
 785 000e 3B68     	 ldr r3,[r7]
 786 0010 1A43     	 orr r2,r3
 787 0012 7B68     	 ldr r3,[r7,#4]
 788 0014 9A61     	 str r2,[r3,#24]
 271:../Libraries/XMCLib/src/xmc_bccu.c **** }
 789              	 .loc 1 271 0
 790 0016 BD46     	 mov sp,r7
 791 0018 02B0     	 add sp,sp,#8
 792              	 
 793 001a 80BD     	 pop {r7,pc}
 794              	 .cfi_endproc
 795              	.LFE111:
 797              	 .section .text.XMC_BCCU_ConcurrentAbortLinearWalk,"ax",%progbits
 798              	 .align 2
 799              	 .global XMC_BCCU_ConcurrentAbortLinearWalk
 800              	 .code 16
 801              	 .thumb_func
 803              	XMC_BCCU_ConcurrentAbortLinearWalk:
 804              	.LFB112:
 272:../Libraries/XMCLib/src/xmc_bccu.c **** 
 273:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 274:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to abort the linear walk of the channels at the same time
 275:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 276:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentAbortLinearWalk (XMC_BCCU_t *const bccu, uint32_t mask)
 277:../Libraries/XMCLib/src/xmc_bccu.c **** {
 805              	 .loc 1 277 0
 806              	 .cfi_startproc
 807 0000 80B5     	 push {r7,lr}
 808              	.LCFI48:
 809              	 .cfi_def_cfa_offset 8
 810              	 .cfi_offset 7,-8
 811              	 .cfi_offset 14,-4
 812 0002 82B0     	 sub sp,sp,#8
 813              	.LCFI49:
 814              	 .cfi_def_cfa_offset 16
 815 0004 00AF     	 add r7,sp,#0
 816              	.LCFI50:
 817              	 .cfi_def_cfa_register 7
 818 0006 7860     	 str r0,[r7,#4]
 819 0008 3960     	 str r1,[r7]
 278:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentAbortLinearWalk: Invalid channel mask", (mask <= XMC_BCCU_CHANNEL_
 279:../Libraries/XMCLib/src/xmc_bccu.c **** 
 280:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHSTRCON |= (uint32_t)(mask << BCCU_CHSTRCON_CH0A_Pos);
 820              	 .loc 1 280 0
 821 000a 7B68     	 ldr r3,[r7,#4]
 822 000c 9A69     	 ldr r2,[r3,#24]
 823 000e 3B68     	 ldr r3,[r7]
 824 0010 1B04     	 lsl r3,r3,#16
 825 0012 1A43     	 orr r2,r3
 826 0014 7B68     	 ldr r3,[r7,#4]
 827 0016 9A61     	 str r2,[r3,#24]
 281:../Libraries/XMCLib/src/xmc_bccu.c **** }
 828              	 .loc 1 281 0
 829 0018 BD46     	 mov sp,r7
 830 001a 02B0     	 add sp,sp,#8
 831              	 
 832 001c 80BD     	 pop {r7,pc}
 833              	 .cfi_endproc
 834              	.LFE112:
 836 001e C046     	 .section .text.XMC_BCCU_ConcurrentEnableDimmingEngine,"ax",%progbits
 837              	 .align 2
 838              	 .global XMC_BCCU_ConcurrentEnableDimmingEngine
 839              	 .code 16
 840              	 .thumb_func
 842              	XMC_BCCU_ConcurrentEnableDimmingEngine:
 843              	.LFB113:
 282:../Libraries/XMCLib/src/xmc_bccu.c **** 
 283:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 284:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to enable the dimming engines at the same time
 285:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 286:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentEnableDimmingEngine (XMC_BCCU_t *const bccu, uint32_t mask)
 287:../Libraries/XMCLib/src/xmc_bccu.c **** {
 844              	 .loc 1 287 0
 845              	 .cfi_startproc
 846 0000 80B5     	 push {r7,lr}
 847              	.LCFI51:
 848              	 .cfi_def_cfa_offset 8
 849              	 .cfi_offset 7,-8
 850              	 .cfi_offset 14,-4
 851 0002 82B0     	 sub sp,sp,#8
 852              	.LCFI52:
 853              	 .cfi_def_cfa_offset 16
 854 0004 00AF     	 add r7,sp,#0
 855              	.LCFI53:
 856              	 .cfi_def_cfa_register 7
 857 0006 7860     	 str r0,[r7,#4]
 858 0008 3960     	 str r1,[r7]
 288:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentEnableDimmingEngine: Invalid dimming engine mask", (mask <= XMC_BC
 289:../Libraries/XMCLib/src/xmc_bccu.c **** 
 290:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->DEEN = (uint32_t)(mask);
 859              	 .loc 1 290 0
 860 000a 7B68     	 ldr r3,[r7,#4]
 861 000c 3A68     	 ldr r2,[r7]
 862 000e 1A62     	 str r2,[r3,#32]
 291:../Libraries/XMCLib/src/xmc_bccu.c **** }
 863              	 .loc 1 291 0
 864 0010 BD46     	 mov sp,r7
 865 0012 02B0     	 add sp,sp,#8
 866              	 
 867 0014 80BD     	 pop {r7,pc}
 868              	 .cfi_endproc
 869              	.LFE113:
 871 0016 C046     	 .section .text.XMC_BCCU_ConcurrentDisableDimmingEngine,"ax",%progbits
 872              	 .align 2
 873              	 .global XMC_BCCU_ConcurrentDisableDimmingEngine
 874              	 .code 16
 875              	 .thumb_func
 877              	XMC_BCCU_ConcurrentDisableDimmingEngine:
 878              	.LFB114:
 292:../Libraries/XMCLib/src/xmc_bccu.c **** 
 293:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 294:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to enable the dimming engines at the same time
 295:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 296:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentDisableDimmingEngine (XMC_BCCU_t *const bccu, uint32_t mask)
 297:../Libraries/XMCLib/src/xmc_bccu.c **** {
 879              	 .loc 1 297 0
 880              	 .cfi_startproc
 881 0000 80B5     	 push {r7,lr}
 882              	.LCFI54:
 883              	 .cfi_def_cfa_offset 8
 884              	 .cfi_offset 7,-8
 885              	 .cfi_offset 14,-4
 886 0002 82B0     	 sub sp,sp,#8
 887              	.LCFI55:
 888              	 .cfi_def_cfa_offset 16
 889 0004 00AF     	 add r7,sp,#0
 890              	.LCFI56:
 891              	 .cfi_def_cfa_register 7
 892 0006 7860     	 str r0,[r7,#4]
 893 0008 3960     	 str r1,[r7]
 298:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentDisableDimmingEngine: Invalid dimming engine mask", (mask <= XMC_B
 299:../Libraries/XMCLib/src/xmc_bccu.c **** 
 300:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->DEEN &= ~(uint32_t)(mask);
 894              	 .loc 1 300 0
 895 000a 7B68     	 ldr r3,[r7,#4]
 896 000c 1B6A     	 ldr r3,[r3,#32]
 897 000e 3A68     	 ldr r2,[r7]
 898 0010 D243     	 mvn r2,r2
 899 0012 1A40     	 and r2,r3
 900 0014 7B68     	 ldr r3,[r7,#4]
 901 0016 1A62     	 str r2,[r3,#32]
 301:../Libraries/XMCLib/src/xmc_bccu.c **** }
 902              	 .loc 1 301 0
 903 0018 BD46     	 mov sp,r7
 904 001a 02B0     	 add sp,sp,#8
 905              	 
 906 001c 80BD     	 pop {r7,pc}
 907              	 .cfi_endproc
 908              	.LFE114:
 910 001e C046     	 .section .text.XMC_BCCU_ConcurrentStartDimming,"ax",%progbits
 911              	 .align 2
 912              	 .global XMC_BCCU_ConcurrentStartDimming
 913              	 .code 16
 914              	 .thumb_func
 916              	XMC_BCCU_ConcurrentStartDimming:
 917              	.LFB115:
 302:../Libraries/XMCLib/src/xmc_bccu.c **** 
 303:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 304:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to start the dimming engines at the same time to change towards target dim level
 305:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 306:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentStartDimming (XMC_BCCU_t *const bccu, uint32_t mask)
 307:../Libraries/XMCLib/src/xmc_bccu.c **** {
 918              	 .loc 1 307 0
 919              	 .cfi_startproc
 920 0000 80B5     	 push {r7,lr}
 921              	.LCFI57:
 922              	 .cfi_def_cfa_offset 8
 923              	 .cfi_offset 7,-8
 924              	 .cfi_offset 14,-4
 925 0002 82B0     	 sub sp,sp,#8
 926              	.LCFI58:
 927              	 .cfi_def_cfa_offset 16
 928 0004 00AF     	 add r7,sp,#0
 929              	.LCFI59:
 930              	 .cfi_def_cfa_register 7
 931 0006 7860     	 str r0,[r7,#4]
 932 0008 3960     	 str r1,[r7]
 308:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentStartDimming: Invalid dimming engine mask", (mask <= XMC_BCCU_DIM_
 309:../Libraries/XMCLib/src/xmc_bccu.c **** 
 310:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->DESTRCON = (uint32_t)(mask);
 933              	 .loc 1 310 0
 934 000a 7B68     	 ldr r3,[r7,#4]
 935 000c 3A68     	 ldr r2,[r7]
 936 000e 5A62     	 str r2,[r3,#36]
 311:../Libraries/XMCLib/src/xmc_bccu.c **** }
 937              	 .loc 1 311 0
 938 0010 BD46     	 mov sp,r7
 939 0012 02B0     	 add sp,sp,#8
 940              	 
 941 0014 80BD     	 pop {r7,pc}
 942              	 .cfi_endproc
 943              	.LFE115:
 945 0016 C046     	 .section .text.XMC_BCCU_ConcurrentAbortDimming,"ax",%progbits
 946              	 .align 2
 947              	 .global XMC_BCCU_ConcurrentAbortDimming
 948              	 .code 16
 949              	 .thumb_func
 951              	XMC_BCCU_ConcurrentAbortDimming:
 952              	.LFB116:
 312:../Libraries/XMCLib/src/xmc_bccu.c **** 
 313:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 314:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to abort the dimming engines at the same time
 315:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 316:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_ConcurrentAbortDimming (XMC_BCCU_t *const bccu, uint32_t mask)
 317:../Libraries/XMCLib/src/xmc_bccu.c **** {
 953              	 .loc 1 317 0
 954              	 .cfi_startproc
 955 0000 80B5     	 push {r7,lr}
 956              	.LCFI60:
 957              	 .cfi_def_cfa_offset 8
 958              	 .cfi_offset 7,-8
 959              	 .cfi_offset 14,-4
 960 0002 82B0     	 sub sp,sp,#8
 961              	.LCFI61:
 962              	 .cfi_def_cfa_offset 16
 963 0004 00AF     	 add r7,sp,#0
 964              	.LCFI62:
 965              	 .cfi_def_cfa_register 7
 966 0006 7860     	 str r0,[r7,#4]
 967 0008 3960     	 str r1,[r7]
 318:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_ConcurrentAbortDimming: Invalid dimming engine mask", (mask <= XMC_BCCU_DIM_
 319:../Libraries/XMCLib/src/xmc_bccu.c **** 
 320:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->DESTRCON = (uint32_t)(mask << BCCU_DESTRCON_DE0A_Pos);
 968              	 .loc 1 320 0
 969 000a 3B68     	 ldr r3,[r7]
 970 000c 1A04     	 lsl r2,r3,#16
 971 000e 7B68     	 ldr r3,[r7,#4]
 972 0010 5A62     	 str r2,[r3,#36]
 321:../Libraries/XMCLib/src/xmc_bccu.c **** }
 973              	 .loc 1 321 0
 974 0012 BD46     	 mov sp,r7
 975 0014 02B0     	 add sp,sp,#8
 976              	 
 977 0016 80BD     	 pop {r7,pc}
 978              	 .cfi_endproc
 979              	.LFE116:
 981              	 .section .text.XMC_BCCU_SetGlobalDimmingLevel,"ax",%progbits
 982              	 .align 2
 983              	 .global XMC_BCCU_SetGlobalDimmingLevel
 984              	 .code 16
 985              	 .thumb_func
 987              	XMC_BCCU_SetGlobalDimmingLevel:
 988              	.LFB117:
 322:../Libraries/XMCLib/src/xmc_bccu.c **** 
 323:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 324:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the dim level of a dimming engine
 325:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 326:../Libraries/XMCLib/src/xmc_bccu.c **** void  XMC_BCCU_SetGlobalDimmingLevel (XMC_BCCU_t *const bccu, uint32_t level)
 327:../Libraries/XMCLib/src/xmc_bccu.c **** {
 989              	 .loc 1 327 0
 990              	 .cfi_startproc
 991 0000 80B5     	 push {r7,lr}
 992              	.LCFI63:
 993              	 .cfi_def_cfa_offset 8
 994              	 .cfi_offset 7,-8
 995              	 .cfi_offset 14,-4
 996 0002 82B0     	 sub sp,sp,#8
 997              	.LCFI64:
 998              	 .cfi_def_cfa_offset 16
 999 0004 00AF     	 add r7,sp,#0
 1000              	.LCFI65:
 1001              	 .cfi_def_cfa_register 7
 1002 0006 7860     	 str r0,[r7,#4]
 1003 0008 3960     	 str r1,[r7]
 328:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_SetGlobalDimmingLevel: Invalid global dimming level", (level <= BCCU_GLOBDIM
 329:../Libraries/XMCLib/src/xmc_bccu.c **** 
 330:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->GLOBDIM = level;
 1004              	 .loc 1 330 0
 1005 000a 7B68     	 ldr r3,[r7,#4]
 1006 000c 3A68     	 ldr r2,[r7]
 1007 000e 9A62     	 str r2,[r3,#40]
 331:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1008              	 .loc 1 331 0
 1009 0010 BD46     	 mov sp,r7
 1010 0012 02B0     	 add sp,sp,#8
 1011              	 
 1012 0014 80BD     	 pop {r7,pc}
 1013              	 .cfi_endproc
 1014              	.LFE117:
 1016 0016 C046     	 .section .text.XMC_BCCU_EnableChannel,"ax",%progbits
 1017              	 .align 2
 1018              	 .global XMC_BCCU_EnableChannel
 1019              	 .code 16
 1020              	 .thumb_func
 1022              	XMC_BCCU_EnableChannel:
 1023              	.LFB118:
 332:../Libraries/XMCLib/src/xmc_bccu.c **** 
 333:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 334:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to enable a specific channel
 335:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 336:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_EnableChannel (XMC_BCCU_t *const bccu, uint32_t chan_no)
 337:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1024              	 .loc 1 337 0
 1025              	 .cfi_startproc
 1026 0000 80B5     	 push {r7,lr}
 1027              	.LCFI66:
 1028              	 .cfi_def_cfa_offset 8
 1029              	 .cfi_offset 7,-8
 1030              	 .cfi_offset 14,-4
 1031 0002 82B0     	 sub sp,sp,#8
 1032              	.LCFI67:
 1033              	 .cfi_def_cfa_offset 16
 1034 0004 00AF     	 add r7,sp,#0
 1035              	.LCFI68:
 1036              	 .cfi_def_cfa_register 7
 1037 0006 7860     	 str r0,[r7,#4]
 1038 0008 3960     	 str r1,[r7]
 338:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_EnableChannel: Invalid channel number", (chan_no <= (XMC_BCCU_NO_OF_CHANNELS
 339:../Libraries/XMCLib/src/xmc_bccu.c **** 
 340:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHEN |= (uint32_t)(BCCU_CHEN_ECH0_Msk << chan_no);
 1039              	 .loc 1 340 0
 1040 000a 7B68     	 ldr r3,[r7,#4]
 1041 000c DA68     	 ldr r2,[r3,#12]
 1042 000e 3B68     	 ldr r3,[r7]
 1043 0010 0121     	 mov r1,#1
 1044 0012 9940     	 lsl r1,r1,r3
 1045 0014 0B1C     	 mov r3,r1
 1046 0016 1A43     	 orr r2,r3
 1047 0018 7B68     	 ldr r3,[r7,#4]
 1048 001a DA60     	 str r2,[r3,#12]
 341:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1049              	 .loc 1 341 0
 1050 001c BD46     	 mov sp,r7
 1051 001e 02B0     	 add sp,sp,#8
 1052              	 
 1053 0020 80BD     	 pop {r7,pc}
 1054              	 .cfi_endproc
 1055              	.LFE118:
 1057 0022 C046     	 .section .text.XMC_BCCU_DisableChannel,"ax",%progbits
 1058              	 .align 2
 1059              	 .global XMC_BCCU_DisableChannel
 1060              	 .code 16
 1061              	 .thumb_func
 1063              	XMC_BCCU_DisableChannel:
 1064              	.LFB119:
 342:../Libraries/XMCLib/src/xmc_bccu.c **** 
 343:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 344:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to disable a specific channel
 345:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 346:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_DisableChannel (XMC_BCCU_t *const bccu, uint32_t chan_no)
 347:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1065              	 .loc 1 347 0
 1066              	 .cfi_startproc
 1067 0000 80B5     	 push {r7,lr}
 1068              	.LCFI69:
 1069              	 .cfi_def_cfa_offset 8
 1070              	 .cfi_offset 7,-8
 1071              	 .cfi_offset 14,-4
 1072 0002 82B0     	 sub sp,sp,#8
 1073              	.LCFI70:
 1074              	 .cfi_def_cfa_offset 16
 1075 0004 00AF     	 add r7,sp,#0
 1076              	.LCFI71:
 1077              	 .cfi_def_cfa_register 7
 1078 0006 7860     	 str r0,[r7,#4]
 1079 0008 3960     	 str r1,[r7]
 348:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_DisableChannel: Invalid channel number", (chan_no <= (XMC_BCCU_NO_OF_CHANNEL
 349:../Libraries/XMCLib/src/xmc_bccu.c **** 
 350:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHEN &= ~(uint32_t)(BCCU_CHEN_ECH0_Msk << chan_no);
 1080              	 .loc 1 350 0
 1081 000a 7B68     	 ldr r3,[r7,#4]
 1082 000c DB68     	 ldr r3,[r3,#12]
 1083 000e 3A68     	 ldr r2,[r7]
 1084 0010 0121     	 mov r1,#1
 1085 0012 9140     	 lsl r1,r1,r2
 1086 0014 0A1C     	 mov r2,r1
 1087 0016 D243     	 mvn r2,r2
 1088 0018 1A40     	 and r2,r3
 1089 001a 7B68     	 ldr r3,[r7,#4]
 1090 001c DA60     	 str r2,[r3,#12]
 351:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1091              	 .loc 1 351 0
 1092 001e BD46     	 mov sp,r7
 1093 0020 02B0     	 add sp,sp,#8
 1094              	 
 1095 0022 80BD     	 pop {r7,pc}
 1096              	 .cfi_endproc
 1097              	.LFE119:
 1099              	 .section .text.XMC_BCCU_SetOutputPassiveLevel,"ax",%progbits
 1100              	 .align 2
 1101              	 .global XMC_BCCU_SetOutputPassiveLevel
 1102              	 .code 16
 1103              	 .thumb_func
 1105              	XMC_BCCU_SetOutputPassiveLevel:
 1106              	.LFB120:
 352:../Libraries/XMCLib/src/xmc_bccu.c **** 
 353:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 354:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to set the specific channel's passive level
 355:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 356:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_SetOutputPassiveLevel(XMC_BCCU_t *const bccu, uint32_t chan_no, XMC_BCCU_CH_ACTIVE_LE
 357:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1107              	 .loc 1 357 0
 1108              	 .cfi_startproc
 1109 0000 80B5     	 push {r7,lr}
 1110              	.LCFI72:
 1111              	 .cfi_def_cfa_offset 8
 1112              	 .cfi_offset 7,-8
 1113              	 .cfi_offset 14,-4
 1114 0002 84B0     	 sub sp,sp,#16
 1115              	.LCFI73:
 1116              	 .cfi_def_cfa_offset 24
 1117 0004 00AF     	 add r7,sp,#0
 1118              	.LCFI74:
 1119              	 .cfi_def_cfa_register 7
 1120 0006 F860     	 str r0,[r7,#12]
 1121 0008 B960     	 str r1,[r7,#8]
 1122 000a FB1D     	 add r3,r7,#7
 1123 000c 1A70     	 strb r2,[r3]
 358:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_SetOutputPassiveLevel: Invalid channel number", (chan_no <= (XMC_BCCU_NO_OF_
 359:../Libraries/XMCLib/src/xmc_bccu.c **** 
 360:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHOCON |= ((uint32_t)level << chan_no);
 1124              	 .loc 1 360 0
 1125 000e FB68     	 ldr r3,[r7,#12]
 1126 0010 1A69     	 ldr r2,[r3,#16]
 1127 0012 FB1D     	 add r3,r7,#7
 1128 0014 1978     	 ldrb r1,[r3]
 1129 0016 BB68     	 ldr r3,[r7,#8]
 1130 0018 9940     	 lsl r1,r1,r3
 1131 001a 0B1C     	 mov r3,r1
 1132 001c 1A43     	 orr r2,r3
 1133 001e FB68     	 ldr r3,[r7,#12]
 1134 0020 1A61     	 str r2,[r3,#16]
 361:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1135              	 .loc 1 361 0
 1136 0022 BD46     	 mov sp,r7
 1137 0024 04B0     	 add sp,sp,#16
 1138              	 
 1139 0026 80BD     	 pop {r7,pc}
 1140              	 .cfi_endproc
 1141              	.LFE120:
 1143              	 .section .text.XMC_BCCU_EnableTrap,"ax",%progbits
 1144              	 .align 2
 1145              	 .global XMC_BCCU_EnableTrap
 1146              	 .code 16
 1147              	 .thumb_func
 1149              	XMC_BCCU_EnableTrap:
 1150              	.LFB121:
 362:../Libraries/XMCLib/src/xmc_bccu.c **** 
 363:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 364:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to enable the specific channel trap
 365:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 366:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_EnableTrap (XMC_BCCU_t *const bccu, uint32_t chan_no)
 367:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1151              	 .loc 1 367 0
 1152              	 .cfi_startproc
 1153 0000 80B5     	 push {r7,lr}
 1154              	.LCFI75:
 1155              	 .cfi_def_cfa_offset 8
 1156              	 .cfi_offset 7,-8
 1157              	 .cfi_offset 14,-4
 1158 0002 82B0     	 sub sp,sp,#8
 1159              	.LCFI76:
 1160              	 .cfi_def_cfa_offset 16
 1161 0004 00AF     	 add r7,sp,#0
 1162              	.LCFI77:
 1163              	 .cfi_def_cfa_register 7
 1164 0006 7860     	 str r0,[r7,#4]
 1165 0008 3960     	 str r1,[r7]
 368:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_EnableTrap: Invalid channel number", (chan_no <= (XMC_BCCU_NO_OF_CHANNELS - 
 369:../Libraries/XMCLib/src/xmc_bccu.c **** 
 370:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHOCON |= (uint32_t)(BCCU_CHOCON_CH0TPE_Msk << chan_no);
 1166              	 .loc 1 370 0
 1167 000a 7B68     	 ldr r3,[r7,#4]
 1168 000c 1A69     	 ldr r2,[r3,#16]
 1169 000e 3B68     	 ldr r3,[r7]
 1170 0010 8021     	 mov r1,#128
 1171 0012 4902     	 lsl r1,r1,#9
 1172 0014 9940     	 lsl r1,r1,r3
 1173 0016 0B1C     	 mov r3,r1
 1174 0018 1A43     	 orr r2,r3
 1175 001a 7B68     	 ldr r3,[r7,#4]
 1176 001c 1A61     	 str r2,[r3,#16]
 371:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1177              	 .loc 1 371 0
 1178 001e BD46     	 mov sp,r7
 1179 0020 02B0     	 add sp,sp,#8
 1180              	 
 1181 0022 80BD     	 pop {r7,pc}
 1182              	 .cfi_endproc
 1183              	.LFE121:
 1185              	 .section .text.XMC_BCCU_DisableTrap,"ax",%progbits
 1186              	 .align 2
 1187              	 .global XMC_BCCU_DisableTrap
 1188              	 .code 16
 1189              	 .thumb_func
 1191              	XMC_BCCU_DisableTrap:
 1192              	.LFB122:
 372:../Libraries/XMCLib/src/xmc_bccu.c **** 
 373:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 374:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to disable the specific channel trap
 375:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 376:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_DisableTrap (XMC_BCCU_t *const bccu, uint32_t chan_no)
 377:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1193              	 .loc 1 377 0
 1194              	 .cfi_startproc
 1195 0000 80B5     	 push {r7,lr}
 1196              	.LCFI78:
 1197              	 .cfi_def_cfa_offset 8
 1198              	 .cfi_offset 7,-8
 1199              	 .cfi_offset 14,-4
 1200 0002 82B0     	 sub sp,sp,#8
 1201              	.LCFI79:
 1202              	 .cfi_def_cfa_offset 16
 1203 0004 00AF     	 add r7,sp,#0
 1204              	.LCFI80:
 1205              	 .cfi_def_cfa_register 7
 1206 0006 7860     	 str r0,[r7,#4]
 1207 0008 3960     	 str r1,[r7]
 378:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_DisableTrap: Invalid channel number", (chan_no <= (XMC_BCCU_NO_OF_CHANNELS -
 379:../Libraries/XMCLib/src/xmc_bccu.c **** 
 380:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHOCON &= ~(uint32_t)(BCCU_CHOCON_CH0TPE_Msk << chan_no);
 1208              	 .loc 1 380 0
 1209 000a 7B68     	 ldr r3,[r7,#4]
 1210 000c 1B69     	 ldr r3,[r3,#16]
 1211 000e 3A68     	 ldr r2,[r7]
 1212 0010 8021     	 mov r1,#128
 1213 0012 4902     	 lsl r1,r1,#9
 1214 0014 9140     	 lsl r1,r1,r2
 1215 0016 0A1C     	 mov r2,r1
 1216 0018 D243     	 mvn r2,r2
 1217 001a 1A40     	 and r2,r3
 1218 001c 7B68     	 ldr r3,[r7,#4]
 1219 001e 1A61     	 str r2,[r3,#16]
 381:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1220              	 .loc 1 381 0
 1221 0020 BD46     	 mov sp,r7
 1222 0022 02B0     	 add sp,sp,#8
 1223              	 
 1224 0024 80BD     	 pop {r7,pc}
 1225              	 .cfi_endproc
 1226              	.LFE122:
 1228 0026 C046     	 .section .text.XMC_BCCU_EnableChannelTrigger,"ax",%progbits
 1229              	 .align 2
 1230              	 .global XMC_BCCU_EnableChannelTrigger
 1231              	 .code 16
 1232              	 .thumb_func
 1234              	XMC_BCCU_EnableChannelTrigger:
 1235              	.LFB123:
 382:../Libraries/XMCLib/src/xmc_bccu.c **** 
 383:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 384:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure specific channel trigger enable and trigger line.
 385:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 386:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_EnableChannelTrigger (XMC_BCCU_t *const bccu, uint32_t chan_no, XMC_BCCU_CH_TRIGOUT_t
 387:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1236              	 .loc 1 387 0
 1237              	 .cfi_startproc
 1238 0000 80B5     	 push {r7,lr}
 1239              	.LCFI81:
 1240              	 .cfi_def_cfa_offset 8
 1241              	 .cfi_offset 7,-8
 1242              	 .cfi_offset 14,-4
 1243 0002 86B0     	 sub sp,sp,#24
 1244              	.LCFI82:
 1245              	 .cfi_def_cfa_offset 32
 1246 0004 00AF     	 add r7,sp,#0
 1247              	.LCFI83:
 1248              	 .cfi_def_cfa_register 7
 1249 0006 F860     	 str r0,[r7,#12]
 1250 0008 B960     	 str r1,[r7,#8]
 1251 000a FB1D     	 add r3,r7,#7
 1252 000c 1A70     	 strb r2,[r3]
 388:../Libraries/XMCLib/src/xmc_bccu.c ****   uint32_t reg;
 389:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_EnableChannelTrigger: Invalid channel number", (chan_no <= (XMC_BCCU_NO_OF_C
 390:../Libraries/XMCLib/src/xmc_bccu.c **** 
 391:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHTRIG &= ~(uint32_t)(BCCU_CHTRIG_TOS0_Msk << chan_no);
 1253              	 .loc 1 391 0
 1254 000e FB68     	 ldr r3,[r7,#12]
 1255 0010 5B69     	 ldr r3,[r3,#20]
 1256 0012 BA68     	 ldr r2,[r7,#8]
 1257 0014 8021     	 mov r1,#128
 1258 0016 4902     	 lsl r1,r1,#9
 1259 0018 9140     	 lsl r1,r1,r2
 1260 001a 0A1C     	 mov r2,r1
 1261 001c D243     	 mvn r2,r2
 1262 001e 1A40     	 and r2,r3
 1263 0020 FB68     	 ldr r3,[r7,#12]
 1264 0022 5A61     	 str r2,[r3,#20]
 392:../Libraries/XMCLib/src/xmc_bccu.c ****   reg = (uint32_t)(BCCU_CHTRIG_ET0_Msk << chan_no);
 1265              	 .loc 1 392 0
 1266 0024 BB68     	 ldr r3,[r7,#8]
 1267 0026 0122     	 mov r2,#1
 1268 0028 9A40     	 lsl r2,r2,r3
 1269 002a 131C     	 mov r3,r2
 1270 002c 7B61     	 str r3,[r7,#20]
 393:../Libraries/XMCLib/src/xmc_bccu.c ****   reg |= ((uint32_t)trig_line << (BCCU_CHTRIG_TOS0_Pos + chan_no));
 1271              	 .loc 1 393 0
 1272 002e FB1D     	 add r3,r7,#7
 1273 0030 1B78     	 ldrb r3,[r3]
 1274 0032 BA68     	 ldr r2,[r7,#8]
 1275 0034 1032     	 add r2,r2,#16
 1276 0036 9340     	 lsl r3,r3,r2
 1277 0038 7A69     	 ldr r2,[r7,#20]
 1278 003a 1343     	 orr r3,r2
 1279 003c 7B61     	 str r3,[r7,#20]
 394:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHTRIG |= reg;
 1280              	 .loc 1 394 0
 1281 003e FB68     	 ldr r3,[r7,#12]
 1282 0040 5A69     	 ldr r2,[r3,#20]
 1283 0042 7B69     	 ldr r3,[r7,#20]
 1284 0044 1A43     	 orr r2,r3
 1285 0046 FB68     	 ldr r3,[r7,#12]
 1286 0048 5A61     	 str r2,[r3,#20]
 395:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1287              	 .loc 1 395 0
 1288 004a BD46     	 mov sp,r7
 1289 004c 06B0     	 add sp,sp,#24
 1290              	 
 1291 004e 80BD     	 pop {r7,pc}
 1292              	 .cfi_endproc
 1293              	.LFE123:
 1295              	 .section .text.XMC_BCCU_DisableChannelTrigger,"ax",%progbits
 1296              	 .align 2
 1297              	 .global XMC_BCCU_DisableChannelTrigger
 1298              	 .code 16
 1299              	 .thumb_func
 1301              	XMC_BCCU_DisableChannelTrigger:
 1302              	.LFB124:
 396:../Libraries/XMCLib/src/xmc_bccu.c **** 
 397:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 398:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to disable specific channel
 399:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 400:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_DisableChannelTrigger (XMC_BCCU_t *const bccu, uint32_t chan_no)
 401:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1303              	 .loc 1 401 0
 1304              	 .cfi_startproc
 1305 0000 80B5     	 push {r7,lr}
 1306              	.LCFI84:
 1307              	 .cfi_def_cfa_offset 8
 1308              	 .cfi_offset 7,-8
 1309              	 .cfi_offset 14,-4
 1310 0002 82B0     	 sub sp,sp,#8
 1311              	.LCFI85:
 1312              	 .cfi_def_cfa_offset 16
 1313 0004 00AF     	 add r7,sp,#0
 1314              	.LCFI86:
 1315              	 .cfi_def_cfa_register 7
 1316 0006 7860     	 str r0,[r7,#4]
 1317 0008 3960     	 str r1,[r7]
 402:../Libraries/XMCLib/src/xmc_bccu.c ****   XMC_ASSERT("XMC_BCCU_DisableChannelTrigger: Invalid channel number", (chan_no <= (XMC_BCCU_NO_OF_
 403:../Libraries/XMCLib/src/xmc_bccu.c **** 
 404:../Libraries/XMCLib/src/xmc_bccu.c ****   bccu->CHTRIG &= ~(uint32_t)(BCCU_CHTRIG_ET0_Msk << chan_no);
 1318              	 .loc 1 404 0
 1319 000a 7B68     	 ldr r3,[r7,#4]
 1320 000c 5B69     	 ldr r3,[r3,#20]
 1321 000e 3A68     	 ldr r2,[r7]
 1322 0010 0121     	 mov r1,#1
 1323 0012 9140     	 lsl r1,r1,r2
 1324 0014 0A1C     	 mov r2,r1
 1325 0016 D243     	 mvn r2,r2
 1326 0018 1A40     	 and r2,r3
 1327 001a 7B68     	 ldr r3,[r7,#4]
 1328 001c 5A61     	 str r2,[r3,#20]
 405:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1329              	 .loc 1 405 0
 1330 001e BD46     	 mov sp,r7
 1331 0020 02B0     	 add sp,sp,#8
 1332              	 
 1333 0022 80BD     	 pop {r7,pc}
 1334              	 .cfi_endproc
 1335              	.LFE124:
 1337              	 .section .text.XMC_BCCU_CH_Init,"ax",%progbits
 1338              	 .align 2
 1339              	 .global XMC_BCCU_CH_Init
 1340              	 .code 16
 1341              	 .thumb_func
 1343              	XMC_BCCU_CH_Init:
 1344              	.LFB125:
 406:../Libraries/XMCLib/src/xmc_bccu.c **** 
 407:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 408:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to initialise the channel of a BCCU module
 409:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 410:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_Init (XMC_BCCU_CH_t *const channel, const XMC_BCCU_CH_CONFIG_t *const config)
 411:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1345              	 .loc 1 411 0
 1346              	 .cfi_startproc
 1347 0000 80B5     	 push {r7,lr}
 1348              	.LCFI87:
 1349              	 .cfi_def_cfa_offset 8
 1350              	 .cfi_offset 7,-8
 1351              	 .cfi_offset 14,-4
 1352 0002 82B0     	 sub sp,sp,#8
 1353              	.LCFI88:
 1354              	 .cfi_def_cfa_offset 16
 1355 0004 00AF     	 add r7,sp,#0
 1356              	.LCFI89:
 1357              	 .cfi_def_cfa_register 7
 1358 0006 7860     	 str r0,[r7,#4]
 1359 0008 3960     	 str r1,[r7]
 412:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG = config->chconfig;
 1360              	 .loc 1 412 0
 1361 000a 3B68     	 ldr r3,[r7]
 1362 000c 1A68     	 ldr r2,[r3]
 1363 000e 7B68     	 ldr r3,[r7,#4]
 1364 0010 9A60     	 str r2,[r3,#8]
 413:../Libraries/XMCLib/src/xmc_bccu.c **** 
 414:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCMP = config->pkcmp;
 1365              	 .loc 1 414 0
 1366 0012 3B68     	 ldr r3,[r7]
 1367 0014 5A68     	 ldr r2,[r3,#4]
 1368 0016 7B68     	 ldr r3,[r7,#4]
 1369 0018 DA60     	 str r2,[r3,#12]
 415:../Libraries/XMCLib/src/xmc_bccu.c **** 
 416:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCNTR = config->pkcntr;
 1370              	 .loc 1 416 0
 1371 001a 3B68     	 ldr r3,[r7]
 1372 001c 9A68     	 ldr r2,[r3,#8]
 1373 001e 7B68     	 ldr r3,[r7,#4]
 1374 0020 1A61     	 str r2,[r3,#16]
 417:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1375              	 .loc 1 417 0
 1376 0022 BD46     	 mov sp,r7
 1377 0024 02B0     	 add sp,sp,#8
 1378              	 
 1379 0026 80BD     	 pop {r7,pc}
 1380              	 .cfi_endproc
 1381              	.LFE125:
 1383              	 .section .text.XMC_BCCU_CH_ConfigTrigger,"ax",%progbits
 1384              	 .align 2
 1385              	 .global XMC_BCCU_CH_ConfigTrigger
 1386              	 .code 16
 1387              	 .thumb_func
 1389              	XMC_BCCU_CH_ConfigTrigger:
 1390              	.LFB126:
 418:../Libraries/XMCLib/src/xmc_bccu.c **** 
 419:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 420:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure channel trigger edge and force trigger edge
 421:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 422:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_ConfigTrigger (XMC_BCCU_CH_t *const channel, XMC_BCCU_CH_TRIG_EDGE_t edge, uint32_
 423:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1391              	 .loc 1 423 0
 1392              	 .cfi_startproc
 1393 0000 80B5     	 push {r7,lr}
 1394              	.LCFI90:
 1395              	 .cfi_def_cfa_offset 8
 1396              	 .cfi_offset 7,-8
 1397              	 .cfi_offset 14,-4
 1398 0002 86B0     	 sub sp,sp,#24
 1399              	.LCFI91:
 1400              	 .cfi_def_cfa_offset 32
 1401 0004 00AF     	 add r7,sp,#0
 1402              	.LCFI92:
 1403              	 .cfi_def_cfa_register 7
 1404 0006 F860     	 str r0,[r7,#12]
 1405 0008 7A60     	 str r2,[r7,#4]
 1406 000a 0B23     	 mov r3,#11
 1407 000c FB18     	 add r3,r7,r3
 1408 000e 0A1C     	 add r2,r1,#0
 1409 0010 1A70     	 strb r2,[r3]
 424:../Libraries/XMCLib/src/xmc_bccu.c ****   uint32_t reg;
 425:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG &= ~(uint32_t)(BCCU_CH_CHCONFIG_TRED_Msk | BCCU_CH_CHCONFIG_ENFT_Msk);
 1410              	 .loc 1 425 0
 1411 0012 FB68     	 ldr r3,[r7,#12]
 1412 0014 9B68     	 ldr r3,[r3,#8]
 1413 0016 0B4A     	 ldr r2,.L42
 1414 0018 1A40     	 and r2,r3
 1415 001a FB68     	 ldr r3,[r7,#12]
 1416 001c 9A60     	 str r2,[r3,#8]
 426:../Libraries/XMCLib/src/xmc_bccu.c **** 
 427:../Libraries/XMCLib/src/xmc_bccu.c ****   reg = ((uint32_t)edge << BCCU_CH_CHCONFIG_TRED_Pos);
 1417              	 .loc 1 427 0
 1418 001e 0B23     	 mov r3,#11
 1419 0020 FB18     	 add r3,r7,r3
 1420 0022 1B78     	 ldrb r3,[r3]
 1421 0024 9B02     	 lsl r3,r3,#10
 1422 0026 7B61     	 str r3,[r7,#20]
 428:../Libraries/XMCLib/src/xmc_bccu.c ****   reg |= (uint32_t)(force_trig_en << BCCU_CH_CHCONFIG_ENFT_Pos);
 1423              	 .loc 1 428 0
 1424 0028 7B68     	 ldr r3,[r7,#4]
 1425 002a DB02     	 lsl r3,r3,#11
 1426 002c 7A69     	 ldr r2,[r7,#20]
 1427 002e 1343     	 orr r3,r2
 1428 0030 7B61     	 str r3,[r7,#20]
 429:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG |= reg;
 1429              	 .loc 1 429 0
 1430 0032 FB68     	 ldr r3,[r7,#12]
 1431 0034 9A68     	 ldr r2,[r3,#8]
 1432 0036 7B69     	 ldr r3,[r7,#20]
 1433 0038 1A43     	 orr r2,r3
 1434 003a FB68     	 ldr r3,[r7,#12]
 1435 003c 9A60     	 str r2,[r3,#8]
 430:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1436              	 .loc 1 430 0
 1437 003e BD46     	 mov sp,r7
 1438 0040 06B0     	 add sp,sp,#24
 1439              	 
 1440 0042 80BD     	 pop {r7,pc}
 1441              	.L43:
 1442              	 .align 2
 1443              	.L42:
 1444 0044 FFF3FFFF 	 .word -3073
 1445              	 .cfi_endproc
 1446              	.LFE126:
 1448              	 .section .text.XMC_BCCU_CH_SetLinearWalkPrescaler,"ax",%progbits
 1449              	 .align 2
 1450              	 .global XMC_BCCU_CH_SetLinearWalkPrescaler
 1451              	 .code 16
 1452              	 .thumb_func
 1454              	XMC_BCCU_CH_SetLinearWalkPrescaler:
 1455              	.LFB127:
 431:../Libraries/XMCLib/src/xmc_bccu.c **** 
 432:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 433:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the linear walker clock prescaler factor of a BCCU channel
 434:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 435:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_SetLinearWalkPrescaler (XMC_BCCU_CH_t *const channel, uint32_t clk_div)
 436:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1456              	 .loc 1 436 0
 1457              	 .cfi_startproc
 1458 0000 80B5     	 push {r7,lr}
 1459              	.LCFI93:
 1460              	 .cfi_def_cfa_offset 8
 1461              	 .cfi_offset 7,-8
 1462              	 .cfi_offset 14,-4
 1463 0002 82B0     	 sub sp,sp,#8
 1464              	.LCFI94:
 1465              	 .cfi_def_cfa_offset 16
 1466 0004 00AF     	 add r7,sp,#0
 1467              	.LCFI95:
 1468              	 .cfi_def_cfa_register 7
 1469 0006 7860     	 str r0,[r7,#4]
 1470 0008 3960     	 str r1,[r7]
 437:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG &= ~(uint32_t)(BCCU_CH_CHCONFIG_LINPRES_Msk);
 1471              	 .loc 1 437 0
 1472 000a 7B68     	 ldr r3,[r7,#4]
 1473 000c 9B68     	 ldr r3,[r3,#8]
 1474 000e 074A     	 ldr r2,.L45
 1475 0010 1A40     	 and r2,r3
 1476 0012 7B68     	 ldr r3,[r7,#4]
 1477 0014 9A60     	 str r2,[r3,#8]
 438:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG |= (uint32_t)(clk_div << BCCU_CH_CHCONFIG_LINPRES_Pos);
 1478              	 .loc 1 438 0
 1479 0016 7B68     	 ldr r3,[r7,#4]
 1480 0018 9A68     	 ldr r2,[r3,#8]
 1481 001a 3B68     	 ldr r3,[r7]
 1482 001c 1B04     	 lsl r3,r3,#16
 1483 001e 1A43     	 orr r2,r3
 1484 0020 7B68     	 ldr r3,[r7,#4]
 1485 0022 9A60     	 str r2,[r3,#8]
 439:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1486              	 .loc 1 439 0
 1487 0024 BD46     	 mov sp,r7
 1488 0026 02B0     	 add sp,sp,#8
 1489              	 
 1490 0028 80BD     	 pop {r7,pc}
 1491              	.L46:
 1492 002a C046     	 .align 2
 1493              	.L45:
 1494 002c FFFF00FC 	 .word -67043329
 1495              	 .cfi_endproc
 1496              	.LFE127:
 1498              	 .section .text.XMC_BCCU_CH_SetTargetIntensity,"ax",%progbits
 1499              	 .align 2
 1500              	 .global XMC_BCCU_CH_SetTargetIntensity
 1501              	 .code 16
 1502              	 .thumb_func
 1504              	XMC_BCCU_CH_SetTargetIntensity:
 1505              	.LFB128:
 440:../Libraries/XMCLib/src/xmc_bccu.c **** 
 441:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 442:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to set channel target intensity
 443:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 444:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_SetTargetIntensity (XMC_BCCU_CH_t *const channel, uint32_t ch_int)
 445:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1506              	 .loc 1 445 0
 1507              	 .cfi_startproc
 1508 0000 80B5     	 push {r7,lr}
 1509              	.LCFI96:
 1510              	 .cfi_def_cfa_offset 8
 1511              	 .cfi_offset 7,-8
 1512              	 .cfi_offset 14,-4
 1513 0002 82B0     	 sub sp,sp,#8
 1514              	.LCFI97:
 1515              	 .cfi_def_cfa_offset 16
 1516 0004 00AF     	 add r7,sp,#0
 1517              	.LCFI98:
 1518              	 .cfi_def_cfa_register 7
 1519 0006 7860     	 str r0,[r7,#4]
 1520 0008 3960     	 str r1,[r7]
 446:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->INTS = ch_int;
 1521              	 .loc 1 446 0
 1522 000a 7B68     	 ldr r3,[r7,#4]
 1523 000c 3A68     	 ldr r2,[r7]
 1524 000e 1A60     	 str r2,[r3]
 447:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1525              	 .loc 1 447 0
 1526 0010 BD46     	 mov sp,r7
 1527 0012 02B0     	 add sp,sp,#8
 1528              	 
 1529 0014 80BD     	 pop {r7,pc}
 1530              	 .cfi_endproc
 1531              	.LFE128:
 1533 0016 C046     	 .section .text.XMC_BCCU_CH_ReadIntensity,"ax",%progbits
 1534              	 .align 2
 1535              	 .global XMC_BCCU_CH_ReadIntensity
 1536              	 .code 16
 1537              	 .thumb_func
 1539              	XMC_BCCU_CH_ReadIntensity:
 1540              	.LFB129:
 448:../Libraries/XMCLib/src/xmc_bccu.c **** 
 449:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 450:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to retrieve the channel actual intensity
 451:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 452:../Libraries/XMCLib/src/xmc_bccu.c **** uint32_t XMC_BCCU_CH_ReadIntensity (XMC_BCCU_CH_t *const channel)
 453:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1541              	 .loc 1 453 0
 1542              	 .cfi_startproc
 1543 0000 80B5     	 push {r7,lr}
 1544              	.LCFI99:
 1545              	 .cfi_def_cfa_offset 8
 1546              	 .cfi_offset 7,-8
 1547              	 .cfi_offset 14,-4
 1548 0002 82B0     	 sub sp,sp,#8
 1549              	.LCFI100:
 1550              	 .cfi_def_cfa_offset 16
 1551 0004 00AF     	 add r7,sp,#0
 1552              	.LCFI101:
 1553              	 .cfi_def_cfa_register 7
 1554 0006 7860     	 str r0,[r7,#4]
 454:../Libraries/XMCLib/src/xmc_bccu.c ****   return (uint32_t)(channel->INT &BCCU_CH_INT_CHINT_Msk);
 1555              	 .loc 1 454 0
 1556 0008 7B68     	 ldr r3,[r7,#4]
 1557 000a 5B68     	 ldr r3,[r3,#4]
 1558 000c 1B05     	 lsl r3,r3,#20
 1559 000e 1B0D     	 lsr r3,r3,#20
 455:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1560              	 .loc 1 455 0
 1561 0010 181C     	 mov r0,r3
 1562 0012 BD46     	 mov sp,r7
 1563 0014 02B0     	 add sp,sp,#8
 1564              	 
 1565 0016 80BD     	 pop {r7,pc}
 1566              	 .cfi_endproc
 1567              	.LFE129:
 1569              	 .section .text.XMC_BCCU_CH_EnablePacker,"ax",%progbits
 1570              	 .align 2
 1571              	 .global XMC_BCCU_CH_EnablePacker
 1572              	 .code 16
 1573              	 .thumb_func
 1575              	XMC_BCCU_CH_EnablePacker:
 1576              	.LFB130:
 456:../Libraries/XMCLib/src/xmc_bccu.c **** 
 457:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 458:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to enable packer. Also configures packer threshold, off-time and on-time compare levels
 459:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 460:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_EnablePacker (XMC_BCCU_CH_t *const channel, uint32_t thresh, uint32_t off_comp, ui
 461:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1577              	 .loc 1 461 0
 1578              	 .cfi_startproc
 1579 0000 80B5     	 push {r7,lr}
 1580              	.LCFI102:
 1581              	 .cfi_def_cfa_offset 8
 1582              	 .cfi_offset 7,-8
 1583              	 .cfi_offset 14,-4
 1584 0002 84B0     	 sub sp,sp,#16
 1585              	.LCFI103:
 1586              	 .cfi_def_cfa_offset 24
 1587 0004 00AF     	 add r7,sp,#0
 1588              	.LCFI104:
 1589              	 .cfi_def_cfa_register 7
 1590 0006 F860     	 str r0,[r7,#12]
 1591 0008 B960     	 str r1,[r7,#8]
 1592 000a 7A60     	 str r2,[r7,#4]
 1593 000c 3B60     	 str r3,[r7]
 462:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG &= ~(uint32_t)(BCCU_CH_CHCONFIG_PEN_Msk | BCCU_CH_CHCONFIG_PKTH_Msk);
 1594              	 .loc 1 462 0
 1595 000e FB68     	 ldr r3,[r7,#12]
 1596 0010 9B68     	 ldr r3,[r3,#8]
 1597 0012 0F22     	 mov r2,#15
 1598 0014 9343     	 bic r3,r2
 1599 0016 1A1C     	 mov r2,r3
 1600 0018 FB68     	 ldr r3,[r7,#12]
 1601 001a 9A60     	 str r2,[r3,#8]
 463:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG |= thresh;
 1602              	 .loc 1 463 0
 1603 001c FB68     	 ldr r3,[r7,#12]
 1604 001e 9A68     	 ldr r2,[r3,#8]
 1605 0020 BB68     	 ldr r3,[r7,#8]
 1606 0022 1A43     	 orr r2,r3
 1607 0024 FB68     	 ldr r3,[r7,#12]
 1608 0026 9A60     	 str r2,[r3,#8]
 464:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCMP = (off_comp | (uint32_t)(on_comp << BCCU_CH_PKCMP_ONCMP_Pos));
 1609              	 .loc 1 464 0
 1610 0028 3B68     	 ldr r3,[r7]
 1611 002a 1A04     	 lsl r2,r3,#16
 1612 002c 7B68     	 ldr r3,[r7,#4]
 1613 002e 1A43     	 orr r2,r3
 1614 0030 FB68     	 ldr r3,[r7,#12]
 1615 0032 DA60     	 str r2,[r3,#12]
 465:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG |= (uint32_t)BCCU_CH_CHCONFIG_PEN_Msk;
 1616              	 .loc 1 465 0
 1617 0034 FB68     	 ldr r3,[r7,#12]
 1618 0036 9B68     	 ldr r3,[r3,#8]
 1619 0038 0822     	 mov r2,#8
 1620 003a 1A43     	 orr r2,r3
 1621 003c FB68     	 ldr r3,[r7,#12]
 1622 003e 9A60     	 str r2,[r3,#8]
 466:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1623              	 .loc 1 466 0
 1624 0040 BD46     	 mov sp,r7
 1625 0042 04B0     	 add sp,sp,#16
 1626              	 
 1627 0044 80BD     	 pop {r7,pc}
 1628              	 .cfi_endproc
 1629              	.LFE130:
 1631 0046 C046     	 .section .text.XMC_BCCU_CH_SetPackerThreshold,"ax",%progbits
 1632              	 .align 2
 1633              	 .global XMC_BCCU_CH_SetPackerThreshold
 1634              	 .code 16
 1635              	 .thumb_func
 1637              	XMC_BCCU_CH_SetPackerThreshold:
 1638              	.LFB131:
 467:../Libraries/XMCLib/src/xmc_bccu.c **** 
 468:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 469:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure packer threshold
 470:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 471:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_SetPackerThreshold (XMC_BCCU_CH_t *const channel, uint32_t val)
 472:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1639              	 .loc 1 472 0
 1640              	 .cfi_startproc
 1641 0000 80B5     	 push {r7,lr}
 1642              	.LCFI105:
 1643              	 .cfi_def_cfa_offset 8
 1644              	 .cfi_offset 7,-8
 1645              	 .cfi_offset 14,-4
 1646 0002 82B0     	 sub sp,sp,#8
 1647              	.LCFI106:
 1648              	 .cfi_def_cfa_offset 16
 1649 0004 00AF     	 add r7,sp,#0
 1650              	.LCFI107:
 1651              	 .cfi_def_cfa_register 7
 1652 0006 7860     	 str r0,[r7,#4]
 1653 0008 3960     	 str r1,[r7]
 473:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG &= ~(uint32_t)(BCCU_CH_CHCONFIG_PKTH_Msk);
 1654              	 .loc 1 473 0
 1655 000a 7B68     	 ldr r3,[r7,#4]
 1656 000c 9B68     	 ldr r3,[r3,#8]
 1657 000e 0722     	 mov r2,#7
 1658 0010 9343     	 bic r3,r2
 1659 0012 1A1C     	 mov r2,r3
 1660 0014 7B68     	 ldr r3,[r7,#4]
 1661 0016 9A60     	 str r2,[r3,#8]
 474:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG |= val;
 1662              	 .loc 1 474 0
 1663 0018 7B68     	 ldr r3,[r7,#4]
 1664 001a 9A68     	 ldr r2,[r3,#8]
 1665 001c 3B68     	 ldr r3,[r7]
 1666 001e 1A43     	 orr r2,r3
 1667 0020 7B68     	 ldr r3,[r7,#4]
 1668 0022 9A60     	 str r2,[r3,#8]
 475:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1669              	 .loc 1 475 0
 1670 0024 BD46     	 mov sp,r7
 1671 0026 02B0     	 add sp,sp,#8
 1672              	 
 1673 0028 80BD     	 pop {r7,pc}
 1674              	 .cfi_endproc
 1675              	.LFE131:
 1677 002a C046     	 .section .text.XMC_BCCU_CH_SetPackerOffCompare,"ax",%progbits
 1678              	 .align 2
 1679              	 .global XMC_BCCU_CH_SetPackerOffCompare
 1680              	 .code 16
 1681              	 .thumb_func
 1683              	XMC_BCCU_CH_SetPackerOffCompare:
 1684              	.LFB132:
 476:../Libraries/XMCLib/src/xmc_bccu.c **** 
 477:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 478:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure packer off-time compare level
 479:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 480:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_SetPackerOffCompare (XMC_BCCU_CH_t *const channel, uint32_t level)
 481:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1685              	 .loc 1 481 0
 1686              	 .cfi_startproc
 1687 0000 80B5     	 push {r7,lr}
 1688              	.LCFI108:
 1689              	 .cfi_def_cfa_offset 8
 1690              	 .cfi_offset 7,-8
 1691              	 .cfi_offset 14,-4
 1692 0002 82B0     	 sub sp,sp,#8
 1693              	.LCFI109:
 1694              	 .cfi_def_cfa_offset 16
 1695 0004 00AF     	 add r7,sp,#0
 1696              	.LCFI110:
 1697              	 .cfi_def_cfa_register 7
 1698 0006 7860     	 str r0,[r7,#4]
 1699 0008 3960     	 str r1,[r7]
 482:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCMP &= ~(uint32_t)(BCCU_CH_PKCMP_OFFCMP_Msk);
 1700              	 .loc 1 482 0
 1701 000a 7B68     	 ldr r3,[r7,#4]
 1702 000c DB68     	 ldr r3,[r3,#12]
 1703 000e FF22     	 mov r2,#255
 1704 0010 9343     	 bic r3,r2
 1705 0012 1A1C     	 mov r2,r3
 1706 0014 7B68     	 ldr r3,[r7,#4]
 1707 0016 DA60     	 str r2,[r3,#12]
 483:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCMP |= level;
 1708              	 .loc 1 483 0
 1709 0018 7B68     	 ldr r3,[r7,#4]
 1710 001a DA68     	 ldr r2,[r3,#12]
 1711 001c 3B68     	 ldr r3,[r7]
 1712 001e 1A43     	 orr r2,r3
 1713 0020 7B68     	 ldr r3,[r7,#4]
 1714 0022 DA60     	 str r2,[r3,#12]
 484:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1715              	 .loc 1 484 0
 1716 0024 BD46     	 mov sp,r7
 1717 0026 02B0     	 add sp,sp,#8
 1718              	 
 1719 0028 80BD     	 pop {r7,pc}
 1720              	 .cfi_endproc
 1721              	.LFE132:
 1723 002a C046     	 .section .text.XMC_BCCU_CH_SetPackerOnCompare,"ax",%progbits
 1724              	 .align 2
 1725              	 .global XMC_BCCU_CH_SetPackerOnCompare
 1726              	 .code 16
 1727              	 .thumb_func
 1729              	XMC_BCCU_CH_SetPackerOnCompare:
 1730              	.LFB133:
 485:../Libraries/XMCLib/src/xmc_bccu.c **** 
 486:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 487:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure packer on-time compare level.
 488:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 489:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_SetPackerOnCompare (XMC_BCCU_CH_t *const channel, uint32_t level)
 490:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1731              	 .loc 1 490 0
 1732              	 .cfi_startproc
 1733 0000 80B5     	 push {r7,lr}
 1734              	.LCFI111:
 1735              	 .cfi_def_cfa_offset 8
 1736              	 .cfi_offset 7,-8
 1737              	 .cfi_offset 14,-4
 1738 0002 82B0     	 sub sp,sp,#8
 1739              	.LCFI112:
 1740              	 .cfi_def_cfa_offset 16
 1741 0004 00AF     	 add r7,sp,#0
 1742              	.LCFI113:
 1743              	 .cfi_def_cfa_register 7
 1744 0006 7860     	 str r0,[r7,#4]
 1745 0008 3960     	 str r1,[r7]
 491:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCMP &= ~(uint32_t)(BCCU_CH_PKCMP_ONCMP_Msk);
 1746              	 .loc 1 491 0
 1747 000a 7B68     	 ldr r3,[r7,#4]
 1748 000c DB68     	 ldr r3,[r3,#12]
 1749 000e 074A     	 ldr r2,.L54
 1750 0010 1A40     	 and r2,r3
 1751 0012 7B68     	 ldr r3,[r7,#4]
 1752 0014 DA60     	 str r2,[r3,#12]
 492:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCMP |= (level << BCCU_CH_PKCMP_ONCMP_Pos);
 1753              	 .loc 1 492 0
 1754 0016 7B68     	 ldr r3,[r7,#4]
 1755 0018 DA68     	 ldr r2,[r3,#12]
 1756 001a 3B68     	 ldr r3,[r7]
 1757 001c 1B04     	 lsl r3,r3,#16
 1758 001e 1A43     	 orr r2,r3
 1759 0020 7B68     	 ldr r3,[r7,#4]
 1760 0022 DA60     	 str r2,[r3,#12]
 493:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1761              	 .loc 1 493 0
 1762 0024 BD46     	 mov sp,r7
 1763 0026 02B0     	 add sp,sp,#8
 1764              	 
 1765 0028 80BD     	 pop {r7,pc}
 1766              	.L55:
 1767 002a C046     	 .align 2
 1768              	.L54:
 1769 002c FFFF00FF 	 .word -16711681
 1770              	 .cfi_endproc
 1771              	.LFE133:
 1773              	 .section .text.XMC_BCCU_CH_DisablePacker,"ax",%progbits
 1774              	 .align 2
 1775              	 .global XMC_BCCU_CH_DisablePacker
 1776              	 .code 16
 1777              	 .thumb_func
 1779              	XMC_BCCU_CH_DisablePacker:
 1780              	.LFB134:
 494:../Libraries/XMCLib/src/xmc_bccu.c **** 
 495:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 496:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to disable a packer.
 497:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 498:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_DisablePacker (XMC_BCCU_CH_t *const channel)
 499:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1781              	 .loc 1 499 0
 1782              	 .cfi_startproc
 1783 0000 80B5     	 push {r7,lr}
 1784              	.LCFI114:
 1785              	 .cfi_def_cfa_offset 8
 1786              	 .cfi_offset 7,-8
 1787              	 .cfi_offset 14,-4
 1788 0002 82B0     	 sub sp,sp,#8
 1789              	.LCFI115:
 1790              	 .cfi_def_cfa_offset 16
 1791 0004 00AF     	 add r7,sp,#0
 1792              	.LCFI116:
 1793              	 .cfi_def_cfa_register 7
 1794 0006 7860     	 str r0,[r7,#4]
 500:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG &= ~(uint32_t)(BCCU_CH_CHCONFIG_PEN_Msk);
 1795              	 .loc 1 500 0
 1796 0008 7B68     	 ldr r3,[r7,#4]
 1797 000a 9B68     	 ldr r3,[r3,#8]
 1798 000c 0822     	 mov r2,#8
 1799 000e 9343     	 bic r3,r2
 1800 0010 1A1C     	 mov r2,r3
 1801 0012 7B68     	 ldr r3,[r7,#4]
 1802 0014 9A60     	 str r2,[r3,#8]
 501:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1803              	 .loc 1 501 0
 1804 0016 BD46     	 mov sp,r7
 1805 0018 02B0     	 add sp,sp,#8
 1806              	 
 1807 001a 80BD     	 pop {r7,pc}
 1808              	 .cfi_endproc
 1809              	.LFE134:
 1811              	 .section .text.XMC_BCCU_CH_SetPackerOffCounter,"ax",%progbits
 1812              	 .align 2
 1813              	 .global XMC_BCCU_CH_SetPackerOffCounter
 1814              	 .code 16
 1815              	 .thumb_func
 1817              	XMC_BCCU_CH_SetPackerOffCounter:
 1818              	.LFB135:
 502:../Libraries/XMCLib/src/xmc_bccu.c **** 
 503:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 504:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to set packer off-time counter value
 505:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 506:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_SetPackerOffCounter (XMC_BCCU_CH_t *const channel, uint32_t cnt_val)
 507:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1819              	 .loc 1 507 0
 1820              	 .cfi_startproc
 1821 0000 80B5     	 push {r7,lr}
 1822              	.LCFI117:
 1823              	 .cfi_def_cfa_offset 8
 1824              	 .cfi_offset 7,-8
 1825              	 .cfi_offset 14,-4
 1826 0002 82B0     	 sub sp,sp,#8
 1827              	.LCFI118:
 1828              	 .cfi_def_cfa_offset 16
 1829 0004 00AF     	 add r7,sp,#0
 1830              	.LCFI119:
 1831              	 .cfi_def_cfa_register 7
 1832 0006 7860     	 str r0,[r7,#4]
 1833 0008 3960     	 str r1,[r7]
 508:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCNTR &= ~(uint32_t)(BCCU_CH_PKCNTR_OFFCNTVAL_Msk);
 1834              	 .loc 1 508 0
 1835 000a 7B68     	 ldr r3,[r7,#4]
 1836 000c 1B69     	 ldr r3,[r3,#16]
 1837 000e FF22     	 mov r2,#255
 1838 0010 9343     	 bic r3,r2
 1839 0012 1A1C     	 mov r2,r3
 1840 0014 7B68     	 ldr r3,[r7,#4]
 1841 0016 1A61     	 str r2,[r3,#16]
 509:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCNTR |= cnt_val;
 1842              	 .loc 1 509 0
 1843 0018 7B68     	 ldr r3,[r7,#4]
 1844 001a 1A69     	 ldr r2,[r3,#16]
 1845 001c 3B68     	 ldr r3,[r7]
 1846 001e 1A43     	 orr r2,r3
 1847 0020 7B68     	 ldr r3,[r7,#4]
 1848 0022 1A61     	 str r2,[r3,#16]
 510:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1849              	 .loc 1 510 0
 1850 0024 BD46     	 mov sp,r7
 1851 0026 02B0     	 add sp,sp,#8
 1852              	 
 1853 0028 80BD     	 pop {r7,pc}
 1854              	 .cfi_endproc
 1855              	.LFE135:
 1857 002a C046     	 .section .text.XMC_BCCU_CH_SetPackerOnCounter,"ax",%progbits
 1858              	 .align 2
 1859              	 .global XMC_BCCU_CH_SetPackerOnCounter
 1860              	 .code 16
 1861              	 .thumb_func
 1863              	XMC_BCCU_CH_SetPackerOnCounter:
 1864              	.LFB136:
 511:../Libraries/XMCLib/src/xmc_bccu.c **** 
 512:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 513:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to set packer on-time counter value
 514:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 515:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_SetPackerOnCounter (XMC_BCCU_CH_t *const channel, uint32_t cnt_val)
 516:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1865              	 .loc 1 516 0
 1866              	 .cfi_startproc
 1867 0000 80B5     	 push {r7,lr}
 1868              	.LCFI120:
 1869              	 .cfi_def_cfa_offset 8
 1870              	 .cfi_offset 7,-8
 1871              	 .cfi_offset 14,-4
 1872 0002 82B0     	 sub sp,sp,#8
 1873              	.LCFI121:
 1874              	 .cfi_def_cfa_offset 16
 1875 0004 00AF     	 add r7,sp,#0
 1876              	.LCFI122:
 1877              	 .cfi_def_cfa_register 7
 1878 0006 7860     	 str r0,[r7,#4]
 1879 0008 3960     	 str r1,[r7]
 517:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCNTR &= ~(uint32_t)(BCCU_CH_PKCNTR_ONCNTVAL_Msk);
 1880              	 .loc 1 517 0
 1881 000a 7B68     	 ldr r3,[r7,#4]
 1882 000c 1B69     	 ldr r3,[r3,#16]
 1883 000e 074A     	 ldr r2,.L59
 1884 0010 1A40     	 and r2,r3
 1885 0012 7B68     	 ldr r3,[r7,#4]
 1886 0014 1A61     	 str r2,[r3,#16]
 518:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->PKCNTR |= (uint32_t)(cnt_val << BCCU_CH_PKCNTR_ONCNTVAL_Pos);
 1887              	 .loc 1 518 0
 1888 0016 7B68     	 ldr r3,[r7,#4]
 1889 0018 1A69     	 ldr r2,[r3,#16]
 1890 001a 3B68     	 ldr r3,[r7]
 1891 001c 1B04     	 lsl r3,r3,#16
 1892 001e 1A43     	 orr r2,r3
 1893 0020 7B68     	 ldr r3,[r7,#4]
 1894 0022 1A61     	 str r2,[r3,#16]
 519:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1895              	 .loc 1 519 0
 1896 0024 BD46     	 mov sp,r7
 1897 0026 02B0     	 add sp,sp,#8
 1898              	 
 1899 0028 80BD     	 pop {r7,pc}
 1900              	.L60:
 1901 002a C046     	 .align 2
 1902              	.L59:
 1903 002c FFFF00FF 	 .word -16711681
 1904              	 .cfi_endproc
 1905              	.LFE136:
 1907              	 .section .text.XMC_BCCU_CH_SelectDimEngine,"ax",%progbits
 1908              	 .align 2
 1909              	 .global XMC_BCCU_CH_SelectDimEngine
 1910              	 .code 16
 1911              	 .thumb_func
 1913              	XMC_BCCU_CH_SelectDimEngine:
 1914              	.LFB137:
 520:../Libraries/XMCLib/src/xmc_bccu.c **** 
 521:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 522:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to select the dimming engine of a channel
 523:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 524:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_SelectDimEngine (XMC_BCCU_CH_t *const channel, XMC_BCCU_CH_DIMMING_SOURCE_t sel)
 525:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1915              	 .loc 1 525 0
 1916              	 .cfi_startproc
 1917 0000 80B5     	 push {r7,lr}
 1918              	.LCFI123:
 1919              	 .cfi_def_cfa_offset 8
 1920              	 .cfi_offset 7,-8
 1921              	 .cfi_offset 14,-4
 1922 0002 82B0     	 sub sp,sp,#8
 1923              	.LCFI124:
 1924              	 .cfi_def_cfa_offset 16
 1925 0004 00AF     	 add r7,sp,#0
 1926              	.LCFI125:
 1927              	 .cfi_def_cfa_register 7
 1928 0006 7860     	 str r0,[r7,#4]
 1929 0008 0A1C     	 mov r2,r1
 1930 000a FB1C     	 add r3,r7,#3
 1931 000c 1A70     	 strb r2,[r3]
 526:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG &= ~(uint32_t)(BCCU_CH_CHCONFIG_DSEL_Msk);
 1932              	 .loc 1 526 0
 1933 000e 7B68     	 ldr r3,[r7,#4]
 1934 0010 9B68     	 ldr r3,[r3,#8]
 1935 0012 7022     	 mov r2,#112
 1936 0014 9343     	 bic r3,r2
 1937 0016 1A1C     	 mov r2,r3
 1938 0018 7B68     	 ldr r3,[r7,#4]
 1939 001a 9A60     	 str r2,[r3,#8]
 527:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG |= ((uint32_t)sel << BCCU_CH_CHCONFIG_DSEL_Pos);
 1940              	 .loc 1 527 0
 1941 001c 7B68     	 ldr r3,[r7,#4]
 1942 001e 9A68     	 ldr r2,[r3,#8]
 1943 0020 FB1C     	 add r3,r7,#3
 1944 0022 1B78     	 ldrb r3,[r3]
 1945 0024 1B01     	 lsl r3,r3,#4
 1946 0026 1A43     	 orr r2,r3
 1947 0028 7B68     	 ldr r3,[r7,#4]
 1948 002a 9A60     	 str r2,[r3,#8]
 528:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1949              	 .loc 1 528 0
 1950 002c BD46     	 mov sp,r7
 1951 002e 02B0     	 add sp,sp,#8
 1952              	 
 1953 0030 80BD     	 pop {r7,pc}
 1954              	 .cfi_endproc
 1955              	.LFE137:
 1957 0032 C046     	 .section .text.XMC_BCCU_CH_EnableDimmingBypass,"ax",%progbits
 1958              	 .align 2
 1959              	 .global XMC_BCCU_CH_EnableDimmingBypass
 1960              	 .code 16
 1961              	 .thumb_func
 1963              	XMC_BCCU_CH_EnableDimmingBypass:
 1964              	.LFB138:
 529:../Libraries/XMCLib/src/xmc_bccu.c **** 
 530:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 531:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to bypass the dimming engine. And the brightness of channel is depending only on
 532:../Libraries/XMCLib/src/xmc_bccu.c ****  * intensity of the channel.
 533:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 534:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_EnableDimmingBypass (XMC_BCCU_CH_t *const channel)
 535:../Libraries/XMCLib/src/xmc_bccu.c **** {
 1965              	 .loc 1 535 0
 1966              	 .cfi_startproc
 1967 0000 80B5     	 push {r7,lr}
 1968              	.LCFI126:
 1969              	 .cfi_def_cfa_offset 8
 1970              	 .cfi_offset 7,-8
 1971              	 .cfi_offset 14,-4
 1972 0002 82B0     	 sub sp,sp,#8
 1973              	.LCFI127:
 1974              	 .cfi_def_cfa_offset 16
 1975 0004 00AF     	 add r7,sp,#0
 1976              	.LCFI128:
 1977              	 .cfi_def_cfa_register 7
 1978 0006 7860     	 str r0,[r7,#4]
 536:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG |= (uint32_t)(BCCU_CH_CHCONFIG_DBP_Msk);
 1979              	 .loc 1 536 0
 1980 0008 7B68     	 ldr r3,[r7,#4]
 1981 000a 9B68     	 ldr r3,[r3,#8]
 1982 000c 8022     	 mov r2,#128
 1983 000e 1A43     	 orr r2,r3
 1984 0010 7B68     	 ldr r3,[r7,#4]
 1985 0012 9A60     	 str r2,[r3,#8]
 537:../Libraries/XMCLib/src/xmc_bccu.c **** }
 1986              	 .loc 1 537 0
 1987 0014 BD46     	 mov sp,r7
 1988 0016 02B0     	 add sp,sp,#8
 1989              	 
 1990 0018 80BD     	 pop {r7,pc}
 1991              	 .cfi_endproc
 1992              	.LFE138:
 1994 001a C046     	 .section .text.XMC_BCCU_CH_DisableDimmingBypass,"ax",%progbits
 1995              	 .align 2
 1996              	 .global XMC_BCCU_CH_DisableDimmingBypass
 1997              	 .code 16
 1998              	 .thumb_func
 2000              	XMC_BCCU_CH_DisableDimmingBypass:
 2001              	.LFB139:
 538:../Libraries/XMCLib/src/xmc_bccu.c **** 
 539:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 540:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to disable the bypass of dimming engine. And the brightness of channel is depending
 541:../Libraries/XMCLib/src/xmc_bccu.c ****  * on intensity of channel and dimming level of dimming engine.
 542:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 543:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_CH_DisableDimmingBypass (XMC_BCCU_CH_t *const channel)
 544:../Libraries/XMCLib/src/xmc_bccu.c **** {
 2002              	 .loc 1 544 0
 2003              	 .cfi_startproc
 2004 0000 80B5     	 push {r7,lr}
 2005              	.LCFI129:
 2006              	 .cfi_def_cfa_offset 8
 2007              	 .cfi_offset 7,-8
 2008              	 .cfi_offset 14,-4
 2009 0002 82B0     	 sub sp,sp,#8
 2010              	.LCFI130:
 2011              	 .cfi_def_cfa_offset 16
 2012 0004 00AF     	 add r7,sp,#0
 2013              	.LCFI131:
 2014              	 .cfi_def_cfa_register 7
 2015 0006 7860     	 str r0,[r7,#4]
 545:../Libraries/XMCLib/src/xmc_bccu.c ****   channel->CHCONFIG &= ~(uint32_t)(BCCU_CH_CHCONFIG_DBP_Msk);
 2016              	 .loc 1 545 0
 2017 0008 7B68     	 ldr r3,[r7,#4]
 2018 000a 9B68     	 ldr r3,[r3,#8]
 2019 000c 8022     	 mov r2,#128
 2020 000e 9343     	 bic r3,r2
 2021 0010 1A1C     	 mov r2,r3
 2022 0012 7B68     	 ldr r3,[r7,#4]
 2023 0014 9A60     	 str r2,[r3,#8]
 546:../Libraries/XMCLib/src/xmc_bccu.c **** }
 2024              	 .loc 1 546 0
 2025 0016 BD46     	 mov sp,r7
 2026 0018 02B0     	 add sp,sp,#8
 2027              	 
 2028 001a 80BD     	 pop {r7,pc}
 2029              	 .cfi_endproc
 2030              	.LFE139:
 2032              	 .section .text.XMC_BCCU_DIM_Init,"ax",%progbits
 2033              	 .align 2
 2034              	 .global XMC_BCCU_DIM_Init
 2035              	 .code 16
 2036              	 .thumb_func
 2038              	XMC_BCCU_DIM_Init:
 2039              	.LFB140:
 547:../Libraries/XMCLib/src/xmc_bccu.c **** 
 548:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 549:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to initialise a specific dimming engine of a BCCU module
 550:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 551:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_DIM_Init (XMC_BCCU_DIM_t *const dim_engine, const XMC_BCCU_DIM_CONFIG_t *const config
 552:../Libraries/XMCLib/src/xmc_bccu.c **** {
 2040              	 .loc 1 552 0
 2041              	 .cfi_startproc
 2042 0000 80B5     	 push {r7,lr}
 2043              	.LCFI132:
 2044              	 .cfi_def_cfa_offset 8
 2045              	 .cfi_offset 7,-8
 2046              	 .cfi_offset 14,-4
 2047 0002 82B0     	 sub sp,sp,#8
 2048              	.LCFI133:
 2049              	 .cfi_def_cfa_offset 16
 2050 0004 00AF     	 add r7,sp,#0
 2051              	.LCFI134:
 2052              	 .cfi_def_cfa_register 7
 2053 0006 7860     	 str r0,[r7,#4]
 2054 0008 3960     	 str r1,[r7]
 553:../Libraries/XMCLib/src/xmc_bccu.c ****   dim_engine->DTT = config->dtt;
 2055              	 .loc 1 553 0
 2056 000a 3B68     	 ldr r3,[r7]
 2057 000c 1A68     	 ldr r2,[r3]
 2058 000e 7B68     	 ldr r3,[r7,#4]
 2059 0010 9A60     	 str r2,[r3,#8]
 554:../Libraries/XMCLib/src/xmc_bccu.c **** }
 2060              	 .loc 1 554 0
 2061 0012 BD46     	 mov sp,r7
 2062 0014 02B0     	 add sp,sp,#8
 2063              	 
 2064 0016 80BD     	 pop {r7,pc}
 2065              	 .cfi_endproc
 2066              	.LFE140:
 2068              	 .section .text.XMC_BCCU_DIM_SetTargetDimmingLevel,"ax",%progbits
 2069              	 .align 2
 2070              	 .global XMC_BCCU_DIM_SetTargetDimmingLevel
 2071              	 .code 16
 2072              	 .thumb_func
 2074              	XMC_BCCU_DIM_SetTargetDimmingLevel:
 2075              	.LFB141:
 555:../Libraries/XMCLib/src/xmc_bccu.c **** 
 556:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 557:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to set dimming engine target dim level
 558:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 559:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_DIM_SetTargetDimmingLevel (XMC_BCCU_DIM_t *const dim_engine, uint32_t level)
 560:../Libraries/XMCLib/src/xmc_bccu.c **** {
 2076              	 .loc 1 560 0
 2077              	 .cfi_startproc
 2078 0000 80B5     	 push {r7,lr}
 2079              	.LCFI135:
 2080              	 .cfi_def_cfa_offset 8
 2081              	 .cfi_offset 7,-8
 2082              	 .cfi_offset 14,-4
 2083 0002 82B0     	 sub sp,sp,#8
 2084              	.LCFI136:
 2085              	 .cfi_def_cfa_offset 16
 2086 0004 00AF     	 add r7,sp,#0
 2087              	.LCFI137:
 2088              	 .cfi_def_cfa_register 7
 2089 0006 7860     	 str r0,[r7,#4]
 2090 0008 3960     	 str r1,[r7]
 561:../Libraries/XMCLib/src/xmc_bccu.c ****   dim_engine->DLS = level;
 2091              	 .loc 1 561 0
 2092 000a 7B68     	 ldr r3,[r7,#4]
 2093 000c 3A68     	 ldr r2,[r7]
 2094 000e 1A60     	 str r2,[r3]
 562:../Libraries/XMCLib/src/xmc_bccu.c **** }
 2095              	 .loc 1 562 0
 2096 0010 BD46     	 mov sp,r7
 2097 0012 02B0     	 add sp,sp,#8
 2098              	 
 2099 0014 80BD     	 pop {r7,pc}
 2100              	 .cfi_endproc
 2101              	.LFE141:
 2103 0016 C046     	 .section .text.XMC_BCCU_DIM_SetDimDivider,"ax",%progbits
 2104              	 .align 2
 2105              	 .global XMC_BCCU_DIM_SetDimDivider
 2106              	 .code 16
 2107              	 .thumb_func
 2109              	XMC_BCCU_DIM_SetDimDivider:
 2110              	.LFB142:
 563:../Libraries/XMCLib/src/xmc_bccu.c **** 
 564:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 565:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the dimming clock prescaler factor of a dimming engine
 566:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 567:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_DIM_SetDimDivider (XMC_BCCU_DIM_t *const dim_engine, uint32_t div)
 568:../Libraries/XMCLib/src/xmc_bccu.c **** {
 2111              	 .loc 1 568 0
 2112              	 .cfi_startproc
 2113 0000 80B5     	 push {r7,lr}
 2114              	.LCFI138:
 2115              	 .cfi_def_cfa_offset 8
 2116              	 .cfi_offset 7,-8
 2117              	 .cfi_offset 14,-4
 2118 0002 82B0     	 sub sp,sp,#8
 2119              	.LCFI139:
 2120              	 .cfi_def_cfa_offset 16
 2121 0004 00AF     	 add r7,sp,#0
 2122              	.LCFI140:
 2123              	 .cfi_def_cfa_register 7
 2124 0006 7860     	 str r0,[r7,#4]
 2125 0008 3960     	 str r1,[r7]
 569:../Libraries/XMCLib/src/xmc_bccu.c ****   dim_engine->DTT &= ~(uint32_t)(BCCU_DE_DTT_DIMDIV_Msk);
 2126              	 .loc 1 569 0
 2127 000a 7B68     	 ldr r3,[r7,#4]
 2128 000c 9B68     	 ldr r3,[r3,#8]
 2129 000e 9B0A     	 lsr r3,r3,#10
 2130 0010 9A02     	 lsl r2,r3,#10
 2131 0012 7B68     	 ldr r3,[r7,#4]
 2132 0014 9A60     	 str r2,[r3,#8]
 570:../Libraries/XMCLib/src/xmc_bccu.c ****   dim_engine->DTT |= div;
 2133              	 .loc 1 570 0
 2134 0016 7B68     	 ldr r3,[r7,#4]
 2135 0018 9A68     	 ldr r2,[r3,#8]
 2136 001a 3B68     	 ldr r3,[r7]
 2137 001c 1A43     	 orr r2,r3
 2138 001e 7B68     	 ldr r3,[r7,#4]
 2139 0020 9A60     	 str r2,[r3,#8]
 571:../Libraries/XMCLib/src/xmc_bccu.c **** }
 2140              	 .loc 1 571 0
 2141 0022 BD46     	 mov sp,r7
 2142 0024 02B0     	 add sp,sp,#8
 2143              	 
 2144 0026 80BD     	 pop {r7,pc}
 2145              	 .cfi_endproc
 2146              	.LFE142:
 2148              	 .section .text.XMC_BCCU_DIM_ConfigDimCurve,"ax",%progbits
 2149              	 .align 2
 2150              	 .global XMC_BCCU_DIM_ConfigDimCurve
 2151              	 .code 16
 2152              	 .thumb_func
 2154              	XMC_BCCU_DIM_ConfigDimCurve:
 2155              	.LFB143:
 572:../Libraries/XMCLib/src/xmc_bccu.c **** 
 573:../Libraries/XMCLib/src/xmc_bccu.c **** /*
 574:../Libraries/XMCLib/src/xmc_bccu.c ****  * API to configure the dimming curve
 575:../Libraries/XMCLib/src/xmc_bccu.c ****  */
 576:../Libraries/XMCLib/src/xmc_bccu.c **** void XMC_BCCU_DIM_ConfigDimCurve (XMC_BCCU_DIM_t *const dim_engine, uint32_t dither_en, XMC_BCCU_DI
 577:../Libraries/XMCLib/src/xmc_bccu.c **** {
 2156              	 .loc 1 577 0
 2157              	 .cfi_startproc
 2158 0000 80B5     	 push {r7,lr}
 2159              	.LCFI141:
 2160              	 .cfi_def_cfa_offset 8
 2161              	 .cfi_offset 7,-8
 2162              	 .cfi_offset 14,-4
 2163 0002 86B0     	 sub sp,sp,#24
 2164              	.LCFI142:
 2165              	 .cfi_def_cfa_offset 32
 2166 0004 00AF     	 add r7,sp,#0
 2167              	.LCFI143:
 2168              	 .cfi_def_cfa_register 7
 2169 0006 F860     	 str r0,[r7,#12]
 2170 0008 B960     	 str r1,[r7,#8]
 2171 000a FB1D     	 add r3,r7,#7
 2172 000c 1A70     	 strb r2,[r3]
 578:../Libraries/XMCLib/src/xmc_bccu.c ****   uint32_t reg;
 579:../Libraries/XMCLib/src/xmc_bccu.c ****   dim_engine->DTT &= ~(uint32_t)(BCCU_DE_DTT_DTEN_Msk | BCCU_DE_DTT_CSEL_Msk);
 2173              	 .loc 1 579 0
 2174 000e FB68     	 ldr r3,[r7,#12]
 2175 0010 9B68     	 ldr r3,[r3,#8]
 2176 0012 0B4A     	 ldr r2,.L68
 2177 0014 1A40     	 and r2,r3
 2178 0016 FB68     	 ldr r3,[r7,#12]
 2179 0018 9A60     	 str r2,[r3,#8]
 580:../Libraries/XMCLib/src/xmc_bccu.c ****   reg = (uint32_t)(dither_en << BCCU_DE_DTT_DTEN_Pos);
 2180              	 .loc 1 580 0
 2181 001a BB68     	 ldr r3,[r7,#8]
 2182 001c 1B04     	 lsl r3,r3,#16
 2183 001e 7B61     	 str r3,[r7,#20]
 581:../Libraries/XMCLib/src/xmc_bccu.c ****   reg |= ((uint32_t)sel << BCCU_DE_DTT_CSEL_Pos);
 2184              	 .loc 1 581 0
 2185 0020 FB1D     	 add r3,r7,#7
 2186 0022 1B78     	 ldrb r3,[r3]
 2187 0024 5B04     	 lsl r3,r3,#17
 2188 0026 7A69     	 ldr r2,[r7,#20]
 2189 0028 1343     	 orr r3,r2
 2190 002a 7B61     	 str r3,[r7,#20]
 582:../Libraries/XMCLib/src/xmc_bccu.c ****   dim_engine->DTT |= reg;
 2191              	 .loc 1 582 0
 2192 002c FB68     	 ldr r3,[r7,#12]
 2193 002e 9A68     	 ldr r2,[r3,#8]
 2194 0030 7B69     	 ldr r3,[r7,#20]
 2195 0032 1A43     	 orr r2,r3
 2196 0034 FB68     	 ldr r3,[r7,#12]
 2197 0036 9A60     	 str r2,[r3,#8]
 583:../Libraries/XMCLib/src/xmc_bccu.c **** }
 2198              	 .loc 1 583 0
 2199 0038 BD46     	 mov sp,r7
 2200 003a 06B0     	 add sp,sp,#24
 2201              	 
 2202 003c 80BD     	 pop {r7,pc}
 2203              	.L69:
 2204 003e C046     	 .align 2
 2205              	.L68:
 2206 0040 FFFFFCFF 	 .word -196609
 2207              	 .cfi_endproc
 2208              	.LFE143:
 2210              	 .text
 2211              	.Letext0:
 2212              	 .file 2 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2213              	 .file 3 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2214              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 2215              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_bccu.h"
 2216              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc1_scu.h"
 2217              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Include/cmsis_gcc.h"
 2218              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_bccu.c
    {standard input}:18     .text.XMC_BCCU_GlobalInit:00000000 $t
    {standard input}:23     .text.XMC_BCCU_GlobalInit:00000000 XMC_BCCU_GlobalInit
    {standard input}:68     .text.XMC_BCCU_ConfigGlobalTrigger:00000000 $t
    {standard input}:73     .text.XMC_BCCU_ConfigGlobalTrigger:00000000 XMC_BCCU_ConfigGlobalTrigger
    {standard input}:126    .text.XMC_BCCU_SelectTrapInput:00000000 $t
    {standard input}:131    .text.XMC_BCCU_SelectTrapInput:00000000 XMC_BCCU_SelectTrapInput
    {standard input}:174    .text.XMC_BCCU_SelectTrapInput:00000030 $d
    {standard input}:179    .text.XMC_BCCU_SetTrapEdge:00000000 $t
    {standard input}:184    .text.XMC_BCCU_SetTrapEdge:00000000 XMC_BCCU_SetTrapEdge
    {standard input}:227    .text.XMC_BCCU_SetTrapEdge:00000030 $d
    {standard input}:232    .text.XMC_BCCU_ConfigSuspendMode:00000000 $t
    {standard input}:237    .text.XMC_BCCU_ConfigSuspendMode:00000000 XMC_BCCU_ConfigSuspendMode
    {standard input}:282    .text.XMC_BCCU_SetFlickerWDThreshold:00000000 $t
    {standard input}:287    .text.XMC_BCCU_SetFlickerWDThreshold:00000000 XMC_BCCU_SetFlickerWDThreshold
    {standard input}:327    .text.XMC_BCCU_SetFlickerWDThreshold:0000002c $d
    {standard input}:332    .text.XMC_BCCU_SetFastClockPrescaler:00000000 $t
    {standard input}:337    .text.XMC_BCCU_SetFastClockPrescaler:00000000 XMC_BCCU_SetFastClockPrescaler
    {standard input}:377    .text.XMC_BCCU_SetDimClockPrescaler:00000000 $t
    {standard input}:382    .text.XMC_BCCU_SetDimClockPrescaler:00000000 XMC_BCCU_SetDimClockPrescaler
    {standard input}:422    .text.XMC_BCCU_SetDimClockPrescaler:0000002c $d
    {standard input}:427    .text.XMC_BCCU_SelectBitClock:00000000 $t
    {standard input}:432    .text.XMC_BCCU_SelectBitClock:00000000 XMC_BCCU_SelectBitClock
    {standard input}:475    .text.XMC_BCCU_SelectBitClock:00000030 $d
    {standard input}:480    .text.XMC_BCCU_ConcurrentEnableChannels:00000000 $t
    {standard input}:485    .text.XMC_BCCU_ConcurrentEnableChannels:00000000 XMC_BCCU_ConcurrentEnableChannels
    {standard input}:518    .text.XMC_BCCU_ConcurrentDisableChannels:00000000 $t
    {standard input}:523    .text.XMC_BCCU_ConcurrentDisableChannels:00000000 XMC_BCCU_ConcurrentDisableChannels
    {standard input}:557    .text.XMC_BCCU_ConcurrentSetOutputPassiveLevel:00000000 $t
    {standard input}:562    .text.XMC_BCCU_ConcurrentSetOutputPassiveLevel:00000000 XMC_BCCU_ConcurrentSetOutputPassiveLevel
    {standard input}:608    .text.XMC_BCCU_ConcurrentEnableTrap:00000000 $t
    {standard input}:613    .text.XMC_BCCU_ConcurrentEnableTrap:00000000 XMC_BCCU_ConcurrentEnableTrap
    {standard input}:647    .text.XMC_BCCU_ConcurrentDisableTrap:00000000 $t
    {standard input}:652    .text.XMC_BCCU_ConcurrentDisableTrap:00000000 XMC_BCCU_ConcurrentDisableTrap
    {standard input}:687    .text.XMC_BCCU_ConcurrentConfigTrigger:00000000 $t
    {standard input}:692    .text.XMC_BCCU_ConcurrentConfigTrigger:00000000 XMC_BCCU_ConcurrentConfigTrigger
    {standard input}:760    .text.XMC_BCCU_ConcurrentStartLinearWalk:00000000 $t
    {standard input}:765    .text.XMC_BCCU_ConcurrentStartLinearWalk:00000000 XMC_BCCU_ConcurrentStartLinearWalk
    {standard input}:798    .text.XMC_BCCU_ConcurrentAbortLinearWalk:00000000 $t
    {standard input}:803    .text.XMC_BCCU_ConcurrentAbortLinearWalk:00000000 XMC_BCCU_ConcurrentAbortLinearWalk
    {standard input}:837    .text.XMC_BCCU_ConcurrentEnableDimmingEngine:00000000 $t
    {standard input}:842    .text.XMC_BCCU_ConcurrentEnableDimmingEngine:00000000 XMC_BCCU_ConcurrentEnableDimmingEngine
    {standard input}:872    .text.XMC_BCCU_ConcurrentDisableDimmingEngine:00000000 $t
    {standard input}:877    .text.XMC_BCCU_ConcurrentDisableDimmingEngine:00000000 XMC_BCCU_ConcurrentDisableDimmingEngine
    {standard input}:911    .text.XMC_BCCU_ConcurrentStartDimming:00000000 $t
    {standard input}:916    .text.XMC_BCCU_ConcurrentStartDimming:00000000 XMC_BCCU_ConcurrentStartDimming
    {standard input}:946    .text.XMC_BCCU_ConcurrentAbortDimming:00000000 $t
    {standard input}:951    .text.XMC_BCCU_ConcurrentAbortDimming:00000000 XMC_BCCU_ConcurrentAbortDimming
    {standard input}:982    .text.XMC_BCCU_SetGlobalDimmingLevel:00000000 $t
    {standard input}:987    .text.XMC_BCCU_SetGlobalDimmingLevel:00000000 XMC_BCCU_SetGlobalDimmingLevel
    {standard input}:1017   .text.XMC_BCCU_EnableChannel:00000000 $t
    {standard input}:1022   .text.XMC_BCCU_EnableChannel:00000000 XMC_BCCU_EnableChannel
    {standard input}:1058   .text.XMC_BCCU_DisableChannel:00000000 $t
    {standard input}:1063   .text.XMC_BCCU_DisableChannel:00000000 XMC_BCCU_DisableChannel
    {standard input}:1100   .text.XMC_BCCU_SetOutputPassiveLevel:00000000 $t
    {standard input}:1105   .text.XMC_BCCU_SetOutputPassiveLevel:00000000 XMC_BCCU_SetOutputPassiveLevel
    {standard input}:1144   .text.XMC_BCCU_EnableTrap:00000000 $t
    {standard input}:1149   .text.XMC_BCCU_EnableTrap:00000000 XMC_BCCU_EnableTrap
    {standard input}:1186   .text.XMC_BCCU_DisableTrap:00000000 $t
    {standard input}:1191   .text.XMC_BCCU_DisableTrap:00000000 XMC_BCCU_DisableTrap
    {standard input}:1229   .text.XMC_BCCU_EnableChannelTrigger:00000000 $t
    {standard input}:1234   .text.XMC_BCCU_EnableChannelTrigger:00000000 XMC_BCCU_EnableChannelTrigger
    {standard input}:1296   .text.XMC_BCCU_DisableChannelTrigger:00000000 $t
    {standard input}:1301   .text.XMC_BCCU_DisableChannelTrigger:00000000 XMC_BCCU_DisableChannelTrigger
    {standard input}:1338   .text.XMC_BCCU_CH_Init:00000000 $t
    {standard input}:1343   .text.XMC_BCCU_CH_Init:00000000 XMC_BCCU_CH_Init
    {standard input}:1384   .text.XMC_BCCU_CH_ConfigTrigger:00000000 $t
    {standard input}:1389   .text.XMC_BCCU_CH_ConfigTrigger:00000000 XMC_BCCU_CH_ConfigTrigger
    {standard input}:1444   .text.XMC_BCCU_CH_ConfigTrigger:00000044 $d
    {standard input}:1449   .text.XMC_BCCU_CH_SetLinearWalkPrescaler:00000000 $t
    {standard input}:1454   .text.XMC_BCCU_CH_SetLinearWalkPrescaler:00000000 XMC_BCCU_CH_SetLinearWalkPrescaler
    {standard input}:1494   .text.XMC_BCCU_CH_SetLinearWalkPrescaler:0000002c $d
    {standard input}:1499   .text.XMC_BCCU_CH_SetTargetIntensity:00000000 $t
    {standard input}:1504   .text.XMC_BCCU_CH_SetTargetIntensity:00000000 XMC_BCCU_CH_SetTargetIntensity
    {standard input}:1534   .text.XMC_BCCU_CH_ReadIntensity:00000000 $t
    {standard input}:1539   .text.XMC_BCCU_CH_ReadIntensity:00000000 XMC_BCCU_CH_ReadIntensity
    {standard input}:1570   .text.XMC_BCCU_CH_EnablePacker:00000000 $t
    {standard input}:1575   .text.XMC_BCCU_CH_EnablePacker:00000000 XMC_BCCU_CH_EnablePacker
    {standard input}:1632   .text.XMC_BCCU_CH_SetPackerThreshold:00000000 $t
    {standard input}:1637   .text.XMC_BCCU_CH_SetPackerThreshold:00000000 XMC_BCCU_CH_SetPackerThreshold
    {standard input}:1678   .text.XMC_BCCU_CH_SetPackerOffCompare:00000000 $t
    {standard input}:1683   .text.XMC_BCCU_CH_SetPackerOffCompare:00000000 XMC_BCCU_CH_SetPackerOffCompare
    {standard input}:1724   .text.XMC_BCCU_CH_SetPackerOnCompare:00000000 $t
    {standard input}:1729   .text.XMC_BCCU_CH_SetPackerOnCompare:00000000 XMC_BCCU_CH_SetPackerOnCompare
    {standard input}:1769   .text.XMC_BCCU_CH_SetPackerOnCompare:0000002c $d
    {standard input}:1774   .text.XMC_BCCU_CH_DisablePacker:00000000 $t
    {standard input}:1779   .text.XMC_BCCU_CH_DisablePacker:00000000 XMC_BCCU_CH_DisablePacker
    {standard input}:1812   .text.XMC_BCCU_CH_SetPackerOffCounter:00000000 $t
    {standard input}:1817   .text.XMC_BCCU_CH_SetPackerOffCounter:00000000 XMC_BCCU_CH_SetPackerOffCounter
    {standard input}:1858   .text.XMC_BCCU_CH_SetPackerOnCounter:00000000 $t
    {standard input}:1863   .text.XMC_BCCU_CH_SetPackerOnCounter:00000000 XMC_BCCU_CH_SetPackerOnCounter
    {standard input}:1903   .text.XMC_BCCU_CH_SetPackerOnCounter:0000002c $d
    {standard input}:1908   .text.XMC_BCCU_CH_SelectDimEngine:00000000 $t
    {standard input}:1913   .text.XMC_BCCU_CH_SelectDimEngine:00000000 XMC_BCCU_CH_SelectDimEngine
    {standard input}:1958   .text.XMC_BCCU_CH_EnableDimmingBypass:00000000 $t
    {standard input}:1963   .text.XMC_BCCU_CH_EnableDimmingBypass:00000000 XMC_BCCU_CH_EnableDimmingBypass
    {standard input}:1995   .text.XMC_BCCU_CH_DisableDimmingBypass:00000000 $t
    {standard input}:2000   .text.XMC_BCCU_CH_DisableDimmingBypass:00000000 XMC_BCCU_CH_DisableDimmingBypass
    {standard input}:2033   .text.XMC_BCCU_DIM_Init:00000000 $t
    {standard input}:2038   .text.XMC_BCCU_DIM_Init:00000000 XMC_BCCU_DIM_Init
    {standard input}:2069   .text.XMC_BCCU_DIM_SetTargetDimmingLevel:00000000 $t
    {standard input}:2074   .text.XMC_BCCU_DIM_SetTargetDimmingLevel:00000000 XMC_BCCU_DIM_SetTargetDimmingLevel
    {standard input}:2104   .text.XMC_BCCU_DIM_SetDimDivider:00000000 $t
    {standard input}:2109   .text.XMC_BCCU_DIM_SetDimDivider:00000000 XMC_BCCU_DIM_SetDimDivider
    {standard input}:2149   .text.XMC_BCCU_DIM_ConfigDimCurve:00000000 $t
    {standard input}:2154   .text.XMC_BCCU_DIM_ConfigDimCurve:00000000 XMC_BCCU_DIM_ConfigDimCurve
    {standard input}:2206   .text.XMC_BCCU_DIM_ConfigDimCurve:00000040 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
