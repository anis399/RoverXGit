   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_usic.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_USIC_CH_SetInputTriggerCombinationMode,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_USIC_CH_SetInputTriggerCombinationMode:
  23              	.LFB56:
  24              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2020-12-05
   4:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.
  11:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  12:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  14:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * do so, all subject to the following:
  20:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  21:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * a source language processor.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * at XMCSupport@infineon.com.
  39:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
  40:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  41:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  42:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  43:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  44:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  45:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  47:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  50:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  52:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  54:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  56:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  57:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  58:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  59:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  60:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  62:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  63:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  64:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  65:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  68:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  69:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  70:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  71:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  72:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  73:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  74:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  75:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  76:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  77:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  79:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  80:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  82:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  83:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  84:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  86:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  87:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  88:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  89:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  90:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  92:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  93:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  95:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  96:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-09-30:
  98:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_InvalidateReadData(), XMC_USIC_CH_EnableWordLengthControl() and XMC_USIC
  99:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 100:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-12-05:
 101:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_PutDataEx()
 102:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 103:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-04-30:
 104:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_SetTriggerLimit()
 105:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 106:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-12-05:
 107:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S to XMC_USIC_CH_BRG_CLOCK_SOURCE_t
 108:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CTQSEL_t
 109:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
 110:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 111:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
 112:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 114:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
 116:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
 117:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 119:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 122:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 124:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 126:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 129:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 130:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 131:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 132:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 133:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 134:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 135:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 136:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 137:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 138:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 139:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 140:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 141:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 142:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 143:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 144:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 145:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 146:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 147:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 148:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 149:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 150:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 152:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 153:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 154:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 155:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 157:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 158:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 161:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 162:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 164:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 167:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 171:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 172:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 173:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 174:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 175:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 176:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 177:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 178:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 179:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 180:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 181:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 182:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 183:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 185:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc1_usic_map.h"
 186:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 187:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 188:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 189:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc4_usic_map.h"
 190:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 191:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 192:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 193:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 194:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 195:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 196:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 197:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 198:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 200:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 201:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 202:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 203:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 205:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 206:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 207:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 208:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 210:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 211:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 212:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 213:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 214:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 215:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 216:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 217:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 218:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 219:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 220:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 221:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 222:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 224:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 228:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 231:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 233:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 235:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 236:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 238:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 241:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 243:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 244:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 246:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 247:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 248:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 249:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 250:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 251:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 252:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 253:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 254:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 255:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 256:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 257:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 258:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 259:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 260:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 261:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 262:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 263:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 264:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 265:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 266:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 267:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 268:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 269:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 270:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 271:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 272:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 273:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 274:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 275:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 276:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 277:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 278:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 279:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 280:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 281:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 282:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 283:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 284:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 285:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 286:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 287:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 288:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 289:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 290:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 292:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 293:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 294:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 295:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 296:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 298:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 299:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 300:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 301:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 304:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 306:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 308:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 309:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 310:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 311:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 313:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 314:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 315:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 316:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 317:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 318:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 319:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 320:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 321:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 322:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 323:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 324:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 325:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 326:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 327:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 328:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 329:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 330:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 332:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 333:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 334:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 335:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 336:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 337:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 338:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 339:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 340:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 341:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 342:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 343:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 344:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 345:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 346:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 347:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 348:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 349:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 350:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 351:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 352:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 353:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 354:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 355:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 356:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 357:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 358:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 359:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 360:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 361:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 362:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 363:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 364:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 365:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 367:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 368:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 369:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 370:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 371:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 372:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 373:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 374:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 375:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 376:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 377:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 378:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 379:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 380:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 381:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 382:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 383:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 384:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 385:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 386:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 387:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 388:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 389:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 390:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 393:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 395:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 397:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 398:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 399:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 402:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 404:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 406:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 407:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 408:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 409:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 410:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 411:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 412:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 413:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 414:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 415:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 416:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 417:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 418:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 421:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 423:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 425:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 426:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 427:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 428:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 431:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 433:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 435:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos,  /**< Baudrate generator 
 436:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S    = 0x3UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 437:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 438:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 439:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 440:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel input selection for CTQ
 441:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 442:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CTQSEL
 443:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 444:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PDIV = 0x0UL, /**< fCTQIN = fPDIV */
 445:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PPP  = 0x1UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fPPP */
 446:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_SCLK = 0x2UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fSCLK */
 447:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_MCLK = 0x3UL << USIC_CH_BRG_CTQSEL_Pos  /**< fCTQIN = fMCLK */
 448:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CTQSEL_t;
 449:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 450:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 451:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 452:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 453:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 454:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 455:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 456:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 457:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 458:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 459:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 460:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 462:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 463:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 464:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 465:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 466:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 467:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 468:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 469:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 471:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 472:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 473:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 474:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 475:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 476:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 477:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 478:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 479:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 480:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 483:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 484:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 485:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 487:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 488:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 489:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 490:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 491:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 492:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 493:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** */
 494:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 495:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 496:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 497:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 498:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 499:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 500:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 501:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 502:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 503:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 504:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 505:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 506:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 507:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma push
 508:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma anon_unions
 509:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 510:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning 586
 511:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 512:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 514:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 515:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 516:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 517:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 518:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 519:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file,
 520:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 521:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 522:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 523:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 524:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 525:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 526:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 527:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 528:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 529:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 530:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 531:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 532:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 533:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 534:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 535:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 536:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 537:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   union
 539:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   {
 540:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 541:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 542:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 543:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 544:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 545:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   };
 546:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 547:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 548:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   union
 550:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   {
 551:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 552:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 553:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 554:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 555:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 556:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   };
 557:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 558:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 559:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 560:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 561:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 562:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 563:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 564:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 565:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 566:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 567:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 568:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 569:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 570:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 571:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 572:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 573:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 574:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 575:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 576:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 577:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 578:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 579:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 582:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 583:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma pop
 584:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 585:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning restore
 586:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 587:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 588:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 589:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 590:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 591:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 593:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 594:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 595:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 596:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 597:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 598:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 599:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 600:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 601:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 602:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 603:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 604:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 605:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 606:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 607:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 608:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 609:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 610:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 611:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 612:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 613:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 614:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 615:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 616:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 617:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 618:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 619:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 620:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 621:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 622:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 624:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 625:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 626:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 627:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 628:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 629:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 630:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 631:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 632:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 634:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 635:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 636:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 637:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 639:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 640:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 641:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 642:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 643:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 644:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 645:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 646:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 647:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 648:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 649:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 650:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 651:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 652:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 654:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 655:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 656:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 657:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 658:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 659:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 660:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 661:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 662:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 663:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 664:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 665:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 666:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 667:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 668:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 669:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 670:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 674:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 675:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 676:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 677:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 678:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 679:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 680:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 681:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 682:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 683:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 684:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 685:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 686:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 687:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 688:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 689:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 690:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 691:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 692:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 693:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 694:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 695:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 698:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 699:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 700:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 701:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 703:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 704:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 706:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 707:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 708:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 709:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 710:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 711:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 712:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 713:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 714:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 715:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 716:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 717:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 719:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 720:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 721:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 722:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 723:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 726:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 728:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 732:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clksel Baudrate generator clock source.
 733:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pppen Enable 2:1 Divider for fPPP.
 734:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Divider Factor to generate fPDIV = fPPP / (pDIV + 1)
 735:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  ctqsel Input selection for CTQ.
 736:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pctq Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1)
 737:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  dctq Denominator for Time Quanta Counter. fTQ / (DCTQ + 1)
 738:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 739:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 741:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate generator of the USIC channel.
 742:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFractionalDivider() \n\n\n
 745:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 747:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 748:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     bool pppen,
 749:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pdiv,
 750:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 751:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pctq,
 752:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t dctq);
 753:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 757:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 758:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 759:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 760:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 761:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 762:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 763:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 765:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 766:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 767:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 768:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 769:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 770:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 771:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 772:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 773:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 774:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 775:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 776:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 777:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 778:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 780:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 781:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 783:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 784:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 785:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 786:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 787:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 788:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 789:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 790:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 791:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 792:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 793:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 795:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 796:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 797:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 798:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 799:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 800:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 801:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 802:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 803:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 804:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 805:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 806:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 807:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 808:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 809:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 813:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 814:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 815:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 816:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 817:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 818:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 819:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t pdiv,
 820:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t oversampling,
 821:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 822:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 823:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 824:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 825:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 826:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 827:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 828:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 829:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 830:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 831:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 832:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 833:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 834:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 835:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 836:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 837:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc.
 838:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 839:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 841:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 842:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 843:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 844:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 845:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 846:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                                     ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 847:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 848:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 849:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 850:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 851:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 852:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 853:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 854:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 856:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 857:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 858:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 859:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 860:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 861:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 862:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 863:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 864:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_INSW_Msk;
 865:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 866:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 867:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 868:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 869:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 870:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 871:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 872:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 876:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 877:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 878:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 879:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 880:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 881:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 882:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 883:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 884:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 885:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 886:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 887:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 888:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 889:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 890:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 891:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 892:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 893:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 894:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 895:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 896:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 897:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 898:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 899:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 900:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 901:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 902:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 903:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 904:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 905:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 906:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 907:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 908:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 909:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 910:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 911:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 912:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 913:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 914:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 915:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 916:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 917:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 918:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 919:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 920:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 921:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 922:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 923:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 924:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 925:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 926:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 927:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 928:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 929:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 930:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 931:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 932:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 933:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 934:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 935:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 936:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 937:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 938:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 939:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 940:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 941:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 942:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 943:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 944:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 945:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 946:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 947:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 948:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 949:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 950:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 951:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 953:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 954:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 955:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 956:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 957:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &= (uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 958:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 959:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
 960:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 961:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 962:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 963:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 964:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 965:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 966:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 968:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 969:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 970:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 973:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 975:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 977:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 979:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 980:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 981:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 982:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 983:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 984:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 985:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 986:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 987:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 988:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 991:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 993:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
 994:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 995:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
 997:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 998:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 999:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1000:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1001:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1002:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1003:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1004:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
1005:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
1006:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
1007:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
1010:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
1012:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1013:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DSEN_Msk;
1014:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1016:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1017:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1018:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1019:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1020:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
1024:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
1025:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1026:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1027:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
1028:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1029:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
1030:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1031:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DSEN_Msk;
1032:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1033:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1037:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1038:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
1039:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1040:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1041:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1042:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
1043:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1045:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1046:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1047:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
1048:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1049:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)
1050:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
1051:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
1052:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
1053:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1058:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1059:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1060:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1061:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1062:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1064:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1065:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1068:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1070:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1071:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
1072:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
  25              	 .loc 1 1072 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 081C     	 mov r0,r1
  40 000a 111C     	 mov r1,r2
  41 000c FB1C     	 add r3,r7,#3
  42 000e 021C     	 add r2,r0,#0
  43 0010 1A70     	 strb r2,[r3]
  44 0012 BB1C     	 add r3,r7,#2
  45 0014 0A1C     	 add r2,r1,#0
  46 0016 1A70     	 strb r2,[r3]
1073:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  47              	 .loc 1 1073 0
  48 0018 FB1C     	 add r3,r7,#3
  49 001a 1878     	 ldrb r0,[r3]
  50 001c FB1C     	 add r3,r7,#3
  51 001e 1B78     	 ldrb r3,[r3]
  52 0020 7A68     	 ldr r2,[r7,#4]
  53 0022 0633     	 add r3,r3,#6
  54 0024 9B00     	 lsl r3,r3,#2
  55 0026 D318     	 add r3,r2,r3
  56 0028 5B68     	 ldr r3,[r3,#4]
  57 002a 074A     	 ldr r2,.L2
  58 002c 1A40     	 and r2,r3
1074:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
  59              	 .loc 1 1074 0
  60 002e BB1C     	 add r3,r7,#2
  61 0030 1B78     	 ldrb r3,[r3]
  62 0032 9B02     	 lsl r3,r3,#10
1073:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  63              	 .loc 1 1073 0
  64 0034 1A43     	 orr r2,r3
  65 0036 7968     	 ldr r1,[r7,#4]
  66 0038 831D     	 add r3,r0,#6
  67 003a 9B00     	 lsl r3,r3,#2
  68 003c CB18     	 add r3,r1,r3
  69 003e 5A60     	 str r2,[r3,#4]
1075:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
  70              	 .loc 1 1075 0
  71 0040 BD46     	 mov sp,r7
  72 0042 02B0     	 add sp,sp,#8
  73              	 
  74 0044 80BD     	 pop {r7,pc}
  75              	.L3:
  76 0046 C046     	 .align 2
  77              	.L2:
  78 0048 FFF3FFFF 	 .word -3073
  79              	 .cfi_endproc
  80              	.LFE56:
  82              	 .section .text.XMC_USIC_CH_SetBRGInputClockSource,"ax",%progbits
  83              	 .align 2
  84              	 .code 16
  85              	 .thumb_func
  87              	XMC_USIC_CH_SetBRGInputClockSource:
  88              	.LFB57:
1076:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1081:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1082:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1083:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1084:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1085:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  *
1086:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1087:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1088:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****  */
1089:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1090:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** {
  89              	 .loc 1 1090 0
  90              	 .cfi_startproc
  91 0000 80B5     	 push {r7,lr}
  92              	.LCFI3:
  93              	 .cfi_def_cfa_offset 8
  94              	 .cfi_offset 7,-8
  95              	 .cfi_offset 14,-4
  96 0002 82B0     	 sub sp,sp,#8
  97              	.LCFI4:
  98              	 .cfi_def_cfa_offset 16
  99 0004 00AF     	 add r7,sp,#0
 100              	.LCFI5:
 101              	 .cfi_def_cfa_register 7
 102 0006 7860     	 str r0,[r7,#4]
 103 0008 0A1C     	 mov r2,r1
 104 000a FB1C     	 add r3,r7,#3
 105 000c 1A70     	 strb r2,[r3]
1091:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 106              	 .loc 1 1091 0
 107 000e 7B68     	 ldr r3,[r7,#4]
 108 0010 5B69     	 ldr r3,[r3,#20]
 109 0012 0322     	 mov r2,#3
 110 0014 9343     	 bic r3,r2
 111 0016 1A1C     	 mov r2,r3
 112 0018 FB1C     	 add r3,r7,#3
 113 001a 1B78     	 ldrb r3,[r3]
 114 001c 1A43     	 orr r2,r3
 115 001e 7B68     	 ldr r3,[r7,#4]
 116 0020 5A61     	 str r2,[r3,#20]
1092:C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc\xmc_usic.h **** }
 117              	 .loc 1 1092 0
 118 0022 BD46     	 mov sp,r7
 119 0024 02B0     	 add sp,sp,#8
 120              	 
 121 0026 80BD     	 pop {r7,pc}
 122              	 .cfi_endproc
 123              	.LFE57:
 125              	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 126              	 .align 2
 127              	 .global XMC_USIC_CH_Enable
 128              	 .code 16
 129              	 .thumb_func
 131              	XMC_USIC_CH_Enable:
 132              	.LFB129:
 133              	 .file 2 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2020-12-05
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_usic.c ****  *
  14:../Libraries/XMCLib/src/xmc_usic.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_usic.c ****  *
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_usic.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_usic.c ****  *
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_usic.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_usic.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_usic.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_usic.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *
  41:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_usic.c ****  *
  44:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  46:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *
  48:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  49:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *
  51:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  53:../Libraries/XMCLib/src/xmc_usic.c ****  *
  54:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-27:
  55:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  56:../Libraries/XMCLib/src/xmc_usic.c ****  *
  57:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-28:
  58:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  59:../Libraries/XMCLib/src/xmc_usic.c ****  *
  60:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-09-01:
  61:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  62:../Libraries/XMCLib/src/xmc_usic.c ****  *
  63:../Libraries/XMCLib/src/xmc_usic.c ****  * 2018-09-29:
  64:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  65:../Libraries/XMCLib/src/xmc_usic.c ****  *
  66:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-03-30:
  67:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Changed XMC_USIC_Enable() adding polling to check clock ungate
  68:../Libraries/XMCLib/src/xmc_usic.c ****  *
  69:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-05-07:
  70:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  71:../Libraries/XMCLib/src/xmc_usic.c ****  *
  72:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-07-01:
  73:../Libraries/XMCLib/src/xmc_usic.c ****  *     - XMC_USIC_CH_SetBaudrateEx() change type of input parameters
  74:../Libraries/XMCLib/src/xmc_usic.c ****  *
  75:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-09-25:
  76:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed XMC_USIC_CH_SetBaudrate() which under certain circumtances, i.e. if fPERI == baudrat
  77:../Libraries/XMCLib/src/xmc_usic.c ****  *
  78:../Libraries/XMCLib/src/xmc_usic.c ****  * 2020-04-30:
  79:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() and  XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
  80:../Libraries/XMCLib/src/xmc_usic.c ****  *       For new projects please use XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_Se
  81:../Libraries/XMCLib/src/xmc_usic.c ****  *
  82:../Libraries/XMCLib/src/xmc_usic.c ****  * 2020-12-05:
  83:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
  84:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  85:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  86:../Libraries/XMCLib/src/xmc_usic.c ****  *
  87:../Libraries/XMCLib/src/xmc_usic.c ****  */
  88:../Libraries/XMCLib/src/xmc_usic.c **** 
  89:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  90:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  91:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  92:../Libraries/XMCLib/src/xmc_usic.c **** 
  93:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  94:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  95:../Libraries/XMCLib/src/xmc_usic.c **** 
  96:../Libraries/XMCLib/src/xmc_usic.c **** #include <stdlib.h>     /* abs */
  97:../Libraries/XMCLib/src/xmc_usic.c **** 
  98:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  99:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
 100:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
 101:../Libraries/XMCLib/src/xmc_usic.c **** 
 102:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
 103:../Libraries/XMCLib/src/xmc_usic.c **** 
 104:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
 105:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
 106:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
 107:../Libraries/XMCLib/src/xmc_usic.c **** 
 108:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
 109:../Libraries/XMCLib/src/xmc_usic.c **** {
 134              	 .loc 2 109 0
 135              	 .cfi_startproc
 136 0000 80B5     	 push {r7,lr}
 137              	.LCFI6:
 138              	 .cfi_def_cfa_offset 8
 139              	 .cfi_offset 7,-8
 140              	 .cfi_offset 14,-4
 141 0002 82B0     	 sub sp,sp,#8
 142              	.LCFI7:
 143              	 .cfi_def_cfa_offset 16
 144 0004 00AF     	 add r7,sp,#0
 145              	.LCFI8:
 146              	 .cfi_def_cfa_register 7
 147 0006 7860     	 str r0,[r7,#4]
 110:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
 111:../Libraries/XMCLib/src/xmc_usic.c **** 
 112:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
 148              	 .loc 2 112 0
 149 0008 7A68     	 ldr r2,[r7,#4]
 150 000a 9023     	 mov r3,#144
 151 000c DB05     	 lsl r3,r3,#23
 152 000e 9A42     	 cmp r2,r3
 153 0010 03D0     	 beq .L6
 154              	 .loc 2 112 0 is_stmt 0 discriminator 1
 155 0012 7B68     	 ldr r3,[r7,#4]
 156 0014 134A     	 ldr r2,.L11
 157 0016 9342     	 cmp r3,r2
 158 0018 04D1     	 bne .L7
 159              	.L6:
 113:../Libraries/XMCLib/src/xmc_usic.c ****   {
 114:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
 160              	 .loc 2 114 0 is_stmt 1
 161 001a 134B     	 ldr r3,.L11+4
 162 001c 181C     	 mov r0,r3
 163 001e FFF7FEFF 	 bl XMC_USIC_Enable
 164 0022 0BE0     	 b .L8
 165              	.L7:
 115:../Libraries/XMCLib/src/xmc_usic.c ****   }
 116:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
 117:../Libraries/XMCLib/src/xmc_usic.c ****   else if ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
 166              	 .loc 2 117 0
 167 0024 7B68     	 ldr r3,[r7,#4]
 168 0026 114A     	 ldr r2,.L11+8
 169 0028 9342     	 cmp r3,r2
 170 002a 03D0     	 beq .L9
 171              	 .loc 2 117 0 is_stmt 0 discriminator 1
 172 002c 7B68     	 ldr r3,[r7,#4]
 173 002e 104A     	 ldr r2,.L11+12
 174 0030 9342     	 cmp r3,r2
 175 0032 03D1     	 bne .L8
 176              	.L9:
 118:../Libraries/XMCLib/src/xmc_usic.c ****   {
 119:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
 177              	 .loc 2 119 0 is_stmt 1
 178 0034 0F4B     	 ldr r3,.L11+16
 179 0036 181C     	 mov r0,r3
 180 0038 FFF7FEFF 	 bl XMC_USIC_Enable
 181              	.L8:
 120:../Libraries/XMCLib/src/xmc_usic.c ****   }
 121:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 122:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 123:../Libraries/XMCLib/src/xmc_usic.c ****   else if ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
 124:../Libraries/XMCLib/src/xmc_usic.c ****   {
 125:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
 126:../Libraries/XMCLib/src/xmc_usic.c ****   }
 127:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 128:../Libraries/XMCLib/src/xmc_usic.c ****   else
 129:../Libraries/XMCLib/src/xmc_usic.c ****   {
 130:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 131:../Libraries/XMCLib/src/xmc_usic.c ****   }
 132:../Libraries/XMCLib/src/xmc_usic.c **** 
 133:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
 134:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 182              	 .loc 2 134 0
 183 003c 7B68     	 ldr r3,[r7,#4]
 184 003e 0322     	 mov r2,#3
 185 0040 DA60     	 str r2,[r3,#12]
 135:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 186              	 .loc 2 135 0
 187 0042 C046     	 mov r8,r8
 188              	.L10:
 189              	 .loc 2 135 0 is_stmt 0 discriminator 1
 190 0044 7B68     	 ldr r3,[r7,#4]
 191 0046 DB68     	 ldr r3,[r3,#12]
 192 0048 0122     	 mov r2,#1
 193 004a 1340     	 and r3,r2
 194 004c FAD0     	 beq .L10
 136:../Libraries/XMCLib/src/xmc_usic.c ****   {
 137:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
 138:../Libraries/XMCLib/src/xmc_usic.c ****   }
 139:../Libraries/XMCLib/src/xmc_usic.c **** 
 140:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 141:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 195              	 .loc 2 141 0 is_stmt 1
 196 004e 7B68     	 ldr r3,[r7,#4]
 197 0050 1B6C     	 ldr r3,[r3,#64]
 198 0052 0F22     	 mov r2,#15
 199 0054 9343     	 bic r3,r2
 200 0056 1A1C     	 mov r2,r3
 201 0058 7B68     	 ldr r3,[r7,#4]
 202 005a 1A64     	 str r2,[r3,#64]
 142:../Libraries/XMCLib/src/xmc_usic.c **** }
 203              	 .loc 2 142 0
 204 005c BD46     	 mov sp,r7
 205 005e 02B0     	 add sp,sp,#8
 206              	 
 207 0060 80BD     	 pop {r7,pc}
 208              	.L12:
 209 0062 C046     	 .align 2
 210              	.L11:
 211 0064 00020048 	 .word 1207960064
 212 0068 08000048 	 .word 1207959560
 213 006c 00400048 	 .word 1207975936
 214 0070 00420048 	 .word 1207976448
 215 0074 08400048 	 .word 1207975944
 216              	 .cfi_endproc
 217              	.LFE129:
 219              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
 220              	 .align 2
 221              	 .global XMC_USIC_CH_Disable
 222              	 .code 16
 223              	 .thumb_func
 225              	XMC_USIC_CH_Disable:
 226              	.LFB130:
 143:../Libraries/XMCLib/src/xmc_usic.c **** 
 144:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 145:../Libraries/XMCLib/src/xmc_usic.c **** {
 227              	 .loc 2 145 0
 228              	 .cfi_startproc
 229 0000 80B5     	 push {r7,lr}
 230              	.LCFI9:
 231              	 .cfi_def_cfa_offset 8
 232              	 .cfi_offset 7,-8
 233              	 .cfi_offset 14,-4
 234 0002 82B0     	 sub sp,sp,#8
 235              	.LCFI10:
 236              	 .cfi_def_cfa_offset 16
 237 0004 00AF     	 add r7,sp,#0
 238              	.LCFI11:
 239              	 .cfi_def_cfa_register 7
 240 0006 7860     	 str r0,[r7,#4]
 146:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
 241              	 .loc 2 146 0
 242 0008 7B68     	 ldr r3,[r7,#4]
 243 000a DB68     	 ldr r3,[r3,#12]
 244 000c 0322     	 mov r2,#3
 245 000e 9343     	 bic r3,r2
 246 0010 0222     	 mov r2,#2
 247 0012 1A43     	 orr r2,r3
 248 0014 7B68     	 ldr r3,[r7,#4]
 249 0016 DA60     	 str r2,[r3,#12]
 147:../Libraries/XMCLib/src/xmc_usic.c **** }
 250              	 .loc 2 147 0
 251 0018 BD46     	 mov sp,r7
 252 001a 02B0     	 add sp,sp,#8
 253              	 
 254 001c 80BD     	 pop {r7,pc}
 255              	 .cfi_endproc
 256              	.LFE130:
 258              	 .global __aeabi_uidiv
 259 001e C046     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
 260              	 .align 2
 261              	 .global XMC_USIC_CH_SetBaudrate
 262              	 .code 16
 263              	 .thumb_func
 265              	XMC_USIC_CH_SetBaudrate:
 266              	.LFB131:
 148:../Libraries/XMCLib/src/xmc_usic.c **** 
 149:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 150:../Libraries/XMCLib/src/xmc_usic.c **** {
 267              	 .loc 2 150 0
 268              	 .cfi_startproc
 269 0000 80B5     	 push {r7,lr}
 270              	.LCFI12:
 271              	 .cfi_def_cfa_offset 8
 272              	 .cfi_offset 7,-8
 273              	 .cfi_offset 14,-4
 274 0002 8EB0     	 sub sp,sp,#56
 275              	.LCFI13:
 276              	 .cfi_def_cfa_offset 64
 277 0004 00AF     	 add r7,sp,#0
 278              	.LCFI14:
 279              	 .cfi_def_cfa_register 7
 280 0006 F860     	 str r0,[r7,#12]
 281 0008 B960     	 str r1,[r7,#8]
 282 000a 7A60     	 str r2,[r7,#4]
 151:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 152:../Libraries/XMCLib/src/xmc_usic.c **** 
 153:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 154:../Libraries/XMCLib/src/xmc_usic.c **** 
 155:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 156:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 157:../Libraries/XMCLib/src/xmc_usic.c **** 
 158:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 159:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 160:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 161:../Libraries/XMCLib/src/xmc_usic.c **** 
 162:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 163:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 164:../Libraries/XMCLib/src/xmc_usic.c **** 
 165:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 166:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
 283              	 .loc 2 166 0
 284 000c BB68     	 ldr r3,[r7,#8]
 285 000e 632B     	 cmp r3,#99
 286 0010 60D9     	 bls .L15
 287              	 .loc 2 166 0 is_stmt 0 discriminator 1
 288 0012 7B68     	 ldr r3,[r7,#4]
 289 0014 002B     	 cmp r3,#0
 290 0016 5DD0     	 beq .L15
 167:../Libraries/XMCLib/src/xmc_usic.c ****   {
 168:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
 291              	 .loc 2 168 0 is_stmt 1
 292 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 293 001c 031C     	 mov r3,r0
 294 001e 181C     	 mov r0,r3
 295 0020 6421     	 mov r1,#100
 296 0022 FFF7FEFF 	 bl __aeabi_uidiv
 297 0026 031C     	 mov r3,r0
 298 0028 3B62     	 str r3,[r7,#32]
 169:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 299              	 .loc 2 169 0
 300 002a BB68     	 ldr r3,[r7,#8]
 301 002c 181C     	 mov r0,r3
 302 002e 6421     	 mov r1,#100
 303 0030 FFF7FEFF 	 bl __aeabi_uidiv
 304 0034 031C     	 mov r3,r0
 305 0036 BB60     	 str r3,[r7,#8]
 170:../Libraries/XMCLib/src/xmc_usic.c **** 
 171:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1024U;
 306              	 .loc 2 171 0
 307 0038 8023     	 mov r3,#128
 308 003a DB00     	 lsl r3,r3,#3
 309 003c FB62     	 str r3,[r7,#44]
 172:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 310              	 .loc 2 172 0
 311 003e 0123     	 mov r3,#1
 312 0040 BB62     	 str r3,[r7,#40]
 173:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 313              	 .loc 2 173 0
 314 0042 2A4B     	 ldr r3,.L21
 315 0044 7B62     	 str r3,[r7,#36]
 174:../Libraries/XMCLib/src/xmc_usic.c **** 
 175:../Libraries/XMCLib/src/xmc_usic.c ****     for (clock_divider = 1024U; clock_divider > 0U; --clock_divider)
 316              	 .loc 2 175 0
 317 0046 8023     	 mov r3,#128
 318 0048 DB00     	 lsl r3,r3,#3
 319 004a 3B63     	 str r3,[r7,#48]
 320 004c 25E0     	 b .L16
 321              	.L18:
 176:../Libraries/XMCLib/src/xmc_usic.c ****     {
 177:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 322              	 .loc 2 177 0
 323 004e 3B6A     	 ldr r3,[r7,#32]
 324 0050 3A6B     	 ldr r2,[r7,#48]
 325 0052 5A43     	 mul r2,r3
 326 0054 111C     	 mov r1,r2
 327 0056 BB68     	 ldr r3,[r7,#8]
 328 0058 7A68     	 ldr r2,[r7,#4]
 329 005a 5343     	 mul r3,r2
 330 005c 081C     	 mov r0,r1
 331 005e 191C     	 mov r1,r3
 332 0060 FFF7FEFF 	 bl __aeabi_uidiv
 333 0064 031C     	 mov r3,r0
 334 0066 FB61     	 str r3,[r7,#28]
 178:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 335              	 .loc 2 178 0
 336 0068 FB69     	 ldr r3,[r7,#28]
 337 006a 9B0A     	 lsr r3,r3,#10
 338 006c BB61     	 str r3,[r7,#24]
 179:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 339              	 .loc 2 179 0
 340 006e FB69     	 ldr r3,[r7,#28]
 341 0070 9B05     	 lsl r3,r3,#22
 342 0072 9B0D     	 lsr r3,r3,#22
 343 0074 7B61     	 str r3,[r7,#20]
 180:../Libraries/XMCLib/src/xmc_usic.c **** 
 181:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int <= 1024U) && (pdiv_frac < pdiv_frac_min))
 344              	 .loc 2 181 0
 345 0076 BA69     	 ldr r2,[r7,#24]
 346 0078 8023     	 mov r3,#128
 347 007a DB00     	 lsl r3,r3,#3
 348 007c 9A42     	 cmp r2,r3
 349 007e 09D8     	 bhi .L17
 350              	 .loc 2 181 0 is_stmt 0 discriminator 1
 351 0080 7A69     	 ldr r2,[r7,#20]
 352 0082 7B6A     	 ldr r3,[r7,#36]
 353 0084 9A42     	 cmp r2,r3
 354 0086 05D2     	 bcs .L17
 182:../Libraries/XMCLib/src/xmc_usic.c ****       {
 183:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 355              	 .loc 2 183 0 is_stmt 1
 356 0088 7B69     	 ldr r3,[r7,#20]
 357 008a 7B62     	 str r3,[r7,#36]
 184:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 358              	 .loc 2 184 0
 359 008c BB69     	 ldr r3,[r7,#24]
 360 008e BB62     	 str r3,[r7,#40]
 185:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 361              	 .loc 2 185 0
 362 0090 3B6B     	 ldr r3,[r7,#48]
 363 0092 FB62     	 str r3,[r7,#44]
 364              	.L17:
 175:../Libraries/XMCLib/src/xmc_usic.c ****     {
 365              	 .loc 2 175 0 discriminator 2
 366 0094 3B6B     	 ldr r3,[r7,#48]
 367 0096 013B     	 sub r3,r3,#1
 368 0098 3B63     	 str r3,[r7,#48]
 369              	.L16:
 175:../Libraries/XMCLib/src/xmc_usic.c ****     {
 370              	 .loc 2 175 0 is_stmt 0 discriminator 1
 371 009a 3B6B     	 ldr r3,[r7,#48]
 372 009c 002B     	 cmp r3,#0
 373 009e D6D1     	 bne .L18
 186:../Libraries/XMCLib/src/xmc_usic.c ****       }
 187:../Libraries/XMCLib/src/xmc_usic.c ****     }
 188:../Libraries/XMCLib/src/xmc_usic.c **** 
 189:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 190:../Libraries/XMCLib/src/xmc_usic.c ****                    ((clock_divider_min - 1) << USIC_CH_FDR_STEP_Pos);
 374              	 .loc 2 190 0 is_stmt 1
 375 00a0 FB6A     	 ldr r3,[r7,#44]
 376 00a2 013B     	 sub r3,r3,#1
 189:../Libraries/XMCLib/src/xmc_usic.c ****                    ((clock_divider_min - 1) << USIC_CH_FDR_STEP_Pos);
 377              	 .loc 2 189 0
 378 00a4 8022     	 mov r2,#128
 379 00a6 1202     	 lsl r2,r2,#8
 380 00a8 1A43     	 orr r2,r3
 381 00aa FB68     	 ldr r3,[r7,#12]
 382 00ac 1A61     	 str r2,[r3,#16]
 191:../Libraries/XMCLib/src/xmc_usic.c **** 
 192:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 383              	 .loc 2 192 0
 384 00ae FB68     	 ldr r3,[r7,#12]
 385 00b0 5B69     	 ldr r3,[r3,#20]
 386 00b2 0F4A     	 ldr r2,.L21+4
 387 00b4 1A40     	 and r2,r3
 193:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 194:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 195:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 196:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 388              	 .loc 2 196 0
 389 00b6 7B68     	 ldr r3,[r7,#4]
 390 00b8 013B     	 sub r3,r3,#1
 391 00ba 9B02     	 lsl r3,r3,#10
 195:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 392              	 .loc 2 195 0
 393 00bc 1A43     	 orr r2,r3
 197:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 394              	 .loc 2 197 0
 395 00be BB6A     	 ldr r3,[r7,#40]
 396 00c0 013B     	 sub r3,r3,#1
 397 00c2 1B04     	 lsl r3,r3,#16
 196:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 398              	 .loc 2 196 0
 399 00c4 1A43     	 orr r2,r3
 192:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 400              	 .loc 2 192 0
 401 00c6 FB68     	 ldr r3,[r7,#12]
 402 00c8 5A61     	 str r2,[r3,#20]
 198:../Libraries/XMCLib/src/xmc_usic.c **** 
 199:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 403              	 .loc 2 199 0
 404 00ca 3723     	 mov r3,#55
 405 00cc FB18     	 add r3,r7,r3
 406 00ce 0022     	 mov r2,#0
 407 00d0 1A70     	 strb r2,[r3]
 408 00d2 03E0     	 b .L19
 409              	.L15:
 200:../Libraries/XMCLib/src/xmc_usic.c ****   }
 201:../Libraries/XMCLib/src/xmc_usic.c ****   else
 202:../Libraries/XMCLib/src/xmc_usic.c ****   {
 203:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 410              	 .loc 2 203 0
 411 00d4 3723     	 mov r3,#55
 412 00d6 FB18     	 add r3,r7,r3
 413 00d8 0122     	 mov r2,#1
 414 00da 1A70     	 strb r2,[r3]
 415              	.L19:
 204:../Libraries/XMCLib/src/xmc_usic.c ****   }
 205:../Libraries/XMCLib/src/xmc_usic.c **** 
 206:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 416              	 .loc 2 206 0
 417 00dc 3723     	 mov r3,#55
 418 00de FB18     	 add r3,r7,r3
 419 00e0 1B78     	 ldrb r3,[r3]
 207:../Libraries/XMCLib/src/xmc_usic.c **** }
 420              	 .loc 2 207 0
 421 00e2 181C     	 mov r0,r3
 422 00e4 BD46     	 mov sp,r7
 423 00e6 0EB0     	 add sp,sp,#56
 424              	 
 425 00e8 80BD     	 pop {r7,pc}
 426              	.L22:
 427 00ea C046     	 .align 2
 428              	.L21:
 429 00ec FF030000 	 .word 1023
 430 00f0 EF8000FC 	 .word -67075857
 431              	 .cfi_endproc
 432              	.LFE131:
 434              	 .global __aeabi_idiv
 435              	 .section .text.XMC_USIC_CH_SetBaudrateEx,"ax",%progbits
 436              	 .align 2
 437              	 .global XMC_USIC_CH_SetBaudrateEx
 438              	 .code 16
 439              	 .thumb_func
 441              	XMC_USIC_CH_SetBaudrateEx:
 442              	.LFB132:
 208:../Libraries/XMCLib/src/xmc_usic.c **** 
 209:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 210:../Libraries/XMCLib/src/xmc_usic.c **** {
 443              	 .loc 2 210 0
 444              	 .cfi_startproc
 445 0000 80B5     	 push {r7,lr}
 446              	.LCFI15:
 447              	 .cfi_def_cfa_offset 8
 448              	 .cfi_offset 7,-8
 449              	 .cfi_offset 14,-4
 450 0002 8CB0     	 sub sp,sp,#48
 451              	.LCFI16:
 452              	 .cfi_def_cfa_offset 56
 453 0004 00AF     	 add r7,sp,#0
 454              	.LCFI17:
 455              	 .cfi_def_cfa_register 7
 456 0006 F860     	 str r0,[r7,#12]
 457 0008 B960     	 str r1,[r7,#8]
 458 000a 7A60     	 str r2,[r7,#4]
 211:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 459              	 .loc 2 211 0
 460 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 461 0010 031C     	 mov r3,r0
 462 0012 3B62     	 str r3,[r7,#32]
 212:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t brg_clock = rate * oversampling;
 463              	 .loc 2 212 0
 464 0014 BB68     	 ldr r3,[r7,#8]
 465 0016 7A68     	 ldr r2,[r7,#4]
 466 0018 5343     	 mul r3,r2
 467 001a FB61     	 str r3,[r7,#28]
 213:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_upper;
 214:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_lower;
 215:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv = 1;
 468              	 .loc 2 215 0
 469 001c 0123     	 mov r3,#1
 470 001e FB62     	 str r3,[r7,#44]
 216:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider_step;
 217:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 218:../Libraries/XMCLib/src/xmc_usic.c **** 
 219:../Libraries/XMCLib/src/xmc_usic.c ****   if (peripheral_clock > brg_clock)
 471              	 .loc 2 219 0
 472 0020 3A6A     	 ldr r2,[r7,#32]
 473 0022 FB69     	 ldr r3,[r7,#28]
 474 0024 9A42     	 cmp r2,r3
 475 0026 62DD     	 ble .L24
 220:../Libraries/XMCLib/src/xmc_usic.c ****   {
 221:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 476              	 .loc 2 221 0
 477 0028 386A     	 ldr r0,[r7,#32]
 478 002a F969     	 ldr r1,[r7,#28]
 479 002c FFF7FEFF 	 bl __aeabi_idiv
 480 0030 031C     	 mov r3,r0
 481 0032 BB62     	 str r3,[r7,#40]
 222:../Libraries/XMCLib/src/xmc_usic.c ****     while (divider_step >= 1023)
 482              	 .loc 2 222 0
 483 0034 0FE0     	 b .L25
 484              	.L26:
 223:../Libraries/XMCLib/src/xmc_usic.c ****     {
 224:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv++;
 485              	 .loc 2 224 0
 486 0036 FB6A     	 ldr r3,[r7,#44]
 487 0038 0133     	 add r3,r3,#1
 488 003a FB62     	 str r3,[r7,#44]
 225:../Libraries/XMCLib/src/xmc_usic.c ****       brg_clock = rate * oversampling * pdiv;
 489              	 .loc 2 225 0
 490 003c BB68     	 ldr r3,[r7,#8]
 491 003e 7A68     	 ldr r2,[r7,#4]
 492 0040 5343     	 mul r3,r2
 493 0042 1A1C     	 mov r2,r3
 494 0044 FB6A     	 ldr r3,[r7,#44]
 495 0046 5343     	 mul r3,r2
 496 0048 FB61     	 str r3,[r7,#28]
 226:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 497              	 .loc 2 226 0
 498 004a 386A     	 ldr r0,[r7,#32]
 499 004c F969     	 ldr r1,[r7,#28]
 500 004e FFF7FEFF 	 bl __aeabi_idiv
 501 0052 031C     	 mov r3,r0
 502 0054 BB62     	 str r3,[r7,#40]
 503              	.L25:
 222:../Libraries/XMCLib/src/xmc_usic.c ****     {
 504              	 .loc 2 222 0
 505 0056 BB6A     	 ldr r3,[r7,#40]
 506 0058 2A4A     	 ldr r2,.L30
 507 005a 9342     	 cmp r3,r2
 508 005c EBD8     	 bhi .L26
 227:../Libraries/XMCLib/src/xmc_usic.c ****     }
 228:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_upper = peripheral_clock / (divider_step * oversampling * pdiv);
 509              	 .loc 2 228 0
 510 005e 396A     	 ldr r1,[r7,#32]
 511 0060 7B68     	 ldr r3,[r7,#4]
 512 0062 BA6A     	 ldr r2,[r7,#40]
 513 0064 5343     	 mul r3,r2
 514 0066 FA6A     	 ldr r2,[r7,#44]
 515 0068 5343     	 mul r3,r2
 516 006a 081C     	 mov r0,r1
 517 006c 191C     	 mov r1,r3
 518 006e FFF7FEFF 	 bl __aeabi_uidiv
 519 0072 031C     	 mov r3,r0
 520 0074 BB61     	 str r3,[r7,#24]
 229:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 521              	 .loc 2 229 0
 522 0076 396A     	 ldr r1,[r7,#32]
 523 0078 BB6A     	 ldr r3,[r7,#40]
 524 007a 0133     	 add r3,r3,#1
 525 007c 7A68     	 ldr r2,[r7,#4]
 526 007e 5343     	 mul r3,r2
 527 0080 FA6A     	 ldr r2,[r7,#44]
 528 0082 5343     	 mul r3,r2
 529 0084 081C     	 mov r0,r1
 530 0086 191C     	 mov r1,r3
 531 0088 FFF7FEFF 	 bl __aeabi_uidiv
 532 008c 031C     	 mov r3,r0
 533 008e 7B61     	 str r3,[r7,#20]
 230:../Libraries/XMCLib/src/xmc_usic.c **** 
 231:../Libraries/XMCLib/src/xmc_usic.c ****     // choose better approximation if the peripheral frequency is not a multiple of the baudrate
 232:../Libraries/XMCLib/src/xmc_usic.c ****     if (abs(rate - actual_rate_lower) < abs(rate - actual_rate_upper))
 534              	 .loc 2 232 0
 535 0090 BA68     	 ldr r2,[r7,#8]
 536 0092 7B69     	 ldr r3,[r7,#20]
 537 0094 D31A     	 sub r3,r2,r3
 538 0096 D917     	 asr r1,r3,#31
 539 0098 5A18     	 add r2,r3,r1
 540 009a 4A40     	 eor r2,r1
 541 009c B968     	 ldr r1,[r7,#8]
 542 009e BB69     	 ldr r3,[r7,#24]
 543 00a0 CB1A     	 sub r3,r1,r3
 544 00a2 D917     	 asr r1,r3,#31
 545 00a4 5B18     	 add r3,r3,r1
 546 00a6 4B40     	 eor r3,r1
 547 00a8 9A42     	 cmp r2,r3
 548 00aa 02DA     	 bge .L27
 233:../Libraries/XMCLib/src/xmc_usic.c ****     {
 234:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step += 1;
 549              	 .loc 2 234 0
 550 00ac BB6A     	 ldr r3,[r7,#40]
 551 00ae 0133     	 add r3,r3,#1
 552 00b0 BB62     	 str r3,[r7,#40]
 553              	.L27:
 235:../Libraries/XMCLib/src/xmc_usic.c ****     }
 236:../Libraries/XMCLib/src/xmc_usic.c **** 
 237:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = 1024 - divider_step;
 554              	 .loc 2 237 0
 555 00b2 BB6A     	 ldr r3,[r7,#40]
 556 00b4 8022     	 mov r2,#128
 557 00b6 D200     	 lsl r2,r2,#3
 558 00b8 D31A     	 sub r3,r2,r3
 559 00ba BB62     	 str r3,[r7,#40]
 238:../Libraries/XMCLib/src/xmc_usic.c **** 
 239:../Libraries/XMCLib/src/xmc_usic.c **** 
 240:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL |
 560              	 .loc 2 240 0
 561 00bc BB6A     	 ldr r3,[r7,#40]
 562 00be 8022     	 mov r2,#128
 563 00c0 D201     	 lsl r2,r2,#7
 564 00c2 1A43     	 orr r2,r3
 565 00c4 FB68     	 ldr r3,[r7,#12]
 566 00c6 1A61     	 str r2,[r3,#16]
 241:../Libraries/XMCLib/src/xmc_usic.c ****                    (divider_step << USIC_CH_FDR_STEP_Pos);
 242:../Libraries/XMCLib/src/xmc_usic.c **** 
 243:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 567              	 .loc 2 243 0
 568 00c8 FB68     	 ldr r3,[r7,#12]
 569 00ca 5B69     	 ldr r3,[r3,#20]
 570 00cc 0E4A     	 ldr r2,.L30+4
 571 00ce 1A40     	 and r2,r3
 244:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 245:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 246:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 247:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 572              	 .loc 2 247 0
 573 00d0 7B68     	 ldr r3,[r7,#4]
 574 00d2 013B     	 sub r3,r3,#1
 575 00d4 9B02     	 lsl r3,r3,#10
 246:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 576              	 .loc 2 246 0
 577 00d6 1A43     	 orr r2,r3
 248:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv - 1) << USIC_CH_BRG_PDIV_Pos);
 578              	 .loc 2 248 0
 579 00d8 FB6A     	 ldr r3,[r7,#44]
 580 00da 013B     	 sub r3,r3,#1
 581 00dc 1B04     	 lsl r3,r3,#16
 247:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv - 1) << USIC_CH_BRG_PDIV_Pos);
 582              	 .loc 2 247 0
 583 00de 1A43     	 orr r2,r3
 243:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 584              	 .loc 2 243 0
 585 00e0 FB68     	 ldr r3,[r7,#12]
 586 00e2 5A61     	 str r2,[r3,#20]
 249:../Libraries/XMCLib/src/xmc_usic.c **** 
 250:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 587              	 .loc 2 250 0
 588 00e4 2723     	 mov r3,#39
 589 00e6 FB18     	 add r3,r7,r3
 590 00e8 0022     	 mov r2,#0
 591 00ea 1A70     	 strb r2,[r3]
 592 00ec 03E0     	 b .L28
 593              	.L24:
 251:../Libraries/XMCLib/src/xmc_usic.c ****   }
 252:../Libraries/XMCLib/src/xmc_usic.c ****   else
 253:../Libraries/XMCLib/src/xmc_usic.c ****   {
 254:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 594              	 .loc 2 254 0
 595 00ee 2723     	 mov r3,#39
 596 00f0 FB18     	 add r3,r7,r3
 597 00f2 0122     	 mov r2,#1
 598 00f4 1A70     	 strb r2,[r3]
 599              	.L28:
 255:../Libraries/XMCLib/src/xmc_usic.c ****   }
 256:../Libraries/XMCLib/src/xmc_usic.c **** 
 257:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 600              	 .loc 2 257 0
 601 00f6 2723     	 mov r3,#39
 602 00f8 FB18     	 add r3,r7,r3
 603 00fa 1B78     	 ldrb r3,[r3]
 258:../Libraries/XMCLib/src/xmc_usic.c **** }
 604              	 .loc 2 258 0
 605 00fc 181C     	 mov r0,r3
 606 00fe BD46     	 mov sp,r7
 607 0100 0CB0     	 add sp,sp,#48
 608              	 
 609 0102 80BD     	 pop {r7,pc}
 610              	.L31:
 611              	 .align 2
 612              	.L30:
 613 0104 FE030000 	 .word 1022
 614 0108 EF8000FC 	 .word -67075857
 615              	 .cfi_endproc
 616              	.LFE132:
 618              	 .section .text.XMC_USIC_CH_SetBaudrateDivider,"ax",%progbits
 619              	 .align 2
 620              	 .global XMC_USIC_CH_SetBaudrateDivider
 621              	 .code 16
 622              	 .thumb_func
 624              	XMC_USIC_CH_SetBaudrateDivider:
 625              	.LFB133:
 259:../Libraries/XMCLib/src/xmc_usic.c **** 
 260:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 261:../Libraries/XMCLib/src/xmc_usic.c ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 262:../Libraries/XMCLib/src/xmc_usic.c ****                                     bool pppen,
 263:../Libraries/XMCLib/src/xmc_usic.c ****                                     uint32_t pdiv,
 264:../Libraries/XMCLib/src/xmc_usic.c ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 265:../Libraries/XMCLib/src/xmc_usic.c ****                                     uint32_t pctq,
 266:../Libraries/XMCLib/src/xmc_usic.c ****                                     uint32_t dctq)
 267:../Libraries/XMCLib/src/xmc_usic.c **** {
 626              	 .loc 2 267 0
 627              	 .cfi_startproc
 628 0000 80B5     	 push {r7,lr}
 629              	.LCFI18:
 630              	 .cfi_def_cfa_offset 8
 631              	 .cfi_offset 7,-8
 632              	 .cfi_offset 14,-4
 633 0002 86B0     	 sub sp,sp,#24
 634              	.LCFI19:
 635              	 .cfi_def_cfa_offset 32
 636 0004 00AF     	 add r7,sp,#0
 637              	.LCFI20:
 638              	 .cfi_def_cfa_register 7
 639 0006 F860     	 str r0,[r7,#12]
 640 0008 081C     	 mov r0,r1
 641 000a 111C     	 mov r1,r2
 642 000c 7B60     	 str r3,[r7,#4]
 643 000e 0B23     	 mov r3,#11
 644 0010 FB18     	 add r3,r7,r3
 645 0012 021C     	 add r2,r0,#0
 646 0014 1A70     	 strb r2,[r3]
 647 0016 0A23     	 mov r3,#10
 648 0018 FB18     	 add r3,r7,r3
 649 001a 0A1C     	 add r2,r1,#0
 650 001c 1A70     	 strb r2,[r3]
 268:../Libraries/XMCLib/src/xmc_usic.c ****     uint32_t regval = channel->BRG;
 651              	 .loc 2 268 0
 652 001e FB68     	 ldr r3,[r7,#12]
 653 0020 5B69     	 ldr r3,[r3,#20]
 654 0022 7B61     	 str r3,[r7,#20]
 269:../Libraries/XMCLib/src/xmc_usic.c ****     regval &= (uint32_t)~(USIC_CH_BRG_CLKSEL_Msk | USIC_CH_BRG_PPPEN_Msk | USIC_CH_BRG_PDIV_Msk | U
 655              	 .loc 2 269 0
 656 0024 7B69     	 ldr r3,[r7,#20]
 657 0026 124A     	 ldr r2,.L35
 658 0028 1340     	 and r3,r2
 659 002a 7B61     	 str r3,[r7,#20]
 270:../Libraries/XMCLib/src/xmc_usic.c ****     regval |= clksel | (pppen ? USIC_CH_BRG_PPPEN_Msk : 0) | (pdiv << USIC_CH_BRG_PDIV_Pos) | ctqse
 660              	 .loc 2 270 0
 661 002c 0B23     	 mov r3,#11
 662 002e FB18     	 add r3,r7,r3
 663 0030 1A78     	 ldrb r2,[r3]
 664 0032 0A23     	 mov r3,#10
 665 0034 FB18     	 add r3,r7,r3
 666 0036 1B78     	 ldrb r3,[r3]
 667 0038 002B     	 cmp r3,#0
 668 003a 01D0     	 beq .L33
 669              	 .loc 2 270 0 is_stmt 0 discriminator 1
 670 003c 1023     	 mov r3,#16
 671 003e 00E0     	 b .L34
 672              	.L33:
 673              	 .loc 2 270 0 discriminator 2
 674 0040 0023     	 mov r3,#0
 675              	.L34:
 676              	 .loc 2 270 0 discriminator 4
 677 0042 1A43     	 orr r2,r3
 678 0044 7B68     	 ldr r3,[r7,#4]
 679 0046 1B04     	 lsl r3,r3,#16
 680 0048 1A43     	 orr r2,r3
 681 004a 2023     	 mov r3,#32
 682 004c FB18     	 add r3,r7,r3
 683 004e 1B78     	 ldrb r3,[r3]
 684 0050 1A43     	 orr r2,r3
 685 0052 7B6A     	 ldr r3,[r7,#36]
 686 0054 1B02     	 lsl r3,r3,#8
 687 0056 1A43     	 orr r2,r3
 688 0058 BB6A     	 ldr r3,[r7,#40]
 689 005a 9B02     	 lsl r3,r3,#10
 690 005c 1343     	 orr r3,r2
 691 005e 7A69     	 ldr r2,[r7,#20]
 692 0060 1343     	 orr r3,r2
 693 0062 7B61     	 str r3,[r7,#20]
 271:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = regval;
 694              	 .loc 2 271 0 is_stmt 1 discriminator 4
 695 0064 FB68     	 ldr r3,[r7,#12]
 696 0066 7A69     	 ldr r2,[r7,#20]
 697 0068 5A61     	 str r2,[r3,#20]
 272:../Libraries/XMCLib/src/xmc_usic.c **** }
 698              	 .loc 2 272 0 discriminator 4
 699 006a BD46     	 mov sp,r7
 700 006c 06B0     	 add sp,sp,#24
 701              	 
 702 006e 80BD     	 pop {r7,pc}
 703              	.L36:
 704              	 .align 2
 705              	.L35:
 706 0070 2C8000FC 	 .word -67076052
 707              	 .cfi_endproc
 708              	.LFE133:
 710              	 .global __aeabi_ui2f
 711              	 .global __aeabi_fdiv
 712              	 .global __aeabi_fmul
 713              	 .global __aeabi_f2uiz
 714              	 .section .text.XMC_USIC_CH_GetBaudrate,"ax",%progbits
 715              	 .align 2
 716              	 .global XMC_USIC_CH_GetBaudrate
 717              	 .code 16
 718              	 .thumb_func
 720              	XMC_USIC_CH_GetBaudrate:
 721              	.LFB134:
 273:../Libraries/XMCLib/src/xmc_usic.c **** 
 274:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel)
 275:../Libraries/XMCLib/src/xmc_usic.c **** {
 722              	 .loc 2 275 0
 723              	 .cfi_startproc
 724 0000 90B5     	 push {r4,r7,lr}
 725              	.LCFI21:
 726              	 .cfi_def_cfa_offset 12
 727              	 .cfi_offset 4,-12
 728              	 .cfi_offset 7,-8
 729              	 .cfi_offset 14,-4
 730 0002 87B0     	 sub sp,sp,#28
 731              	.LCFI22:
 732              	 .cfi_def_cfa_offset 40
 733 0004 00AF     	 add r7,sp,#0
 734              	.LCFI23:
 735              	 .cfi_def_cfa_register 7
 736 0006 7860     	 str r0,[r7,#4]
 276:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 277:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) == USIC_CH_BRG_CTQSEL_Msk)
 737              	 .loc 2 277 0
 738 0008 7B68     	 ldr r3,[r7,#4]
 739 000a 5B69     	 ldr r3,[r3,#20]
 740 000c C022     	 mov r2,#192
 741 000e 1340     	 and r3,r2
 742 0010 C02B     	 cmp r3,#192
 743 0012 02D1     	 bne .L38
 278:../Libraries/XMCLib/src/xmc_usic.c ****   {
 279:../Libraries/XMCLib/src/xmc_usic.c ****     // CTQSEL = 3
 280:../Libraries/XMCLib/src/xmc_usic.c ****     divider = 2;
 744              	 .loc 2 280 0
 745 0014 0223     	 mov r3,#2
 746 0016 7B61     	 str r3,[r7,#20]
 747 0018 1EE0     	 b .L39
 748              	.L38:
 281:../Libraries/XMCLib/src/xmc_usic.c ****   }
 282:../Libraries/XMCLib/src/xmc_usic.c ****   else
 283:../Libraries/XMCLib/src/xmc_usic.c ****   {
 284:../Libraries/XMCLib/src/xmc_usic.c ****     // CTQSEL = 0, 1, or 2
 285:../Libraries/XMCLib/src/xmc_usic.c ****     divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 749              	 .loc 2 285 0
 750 001a 7B68     	 ldr r3,[r7,#4]
 751 001c 5B69     	 ldr r3,[r3,#20]
 752 001e 1022     	 mov r2,#16
 753 0020 1340     	 and r3,r2
 754 0022 01D0     	 beq .L40
 755              	 .loc 2 285 0 is_stmt 0 discriminator 1
 756 0024 0223     	 mov r3,#2
 757 0026 00E0     	 b .L41
 758              	.L40:
 759              	 .loc 2 285 0 discriminator 2
 760 0028 0123     	 mov r3,#1
 761              	.L41:
 762              	 .loc 2 285 0 discriminator 4
 763 002a 7B61     	 str r3,[r7,#20]
 286:../Libraries/XMCLib/src/xmc_usic.c **** 
 287:../Libraries/XMCLib/src/xmc_usic.c ****     if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x1) == 0)
 764              	 .loc 2 287 0 is_stmt 1 discriminator 4
 765 002c 7B68     	 ldr r3,[r7,#4]
 766 002e 5B69     	 ldr r3,[r3,#20]
 767 0030 4022     	 mov r2,#64
 768 0032 1340     	 and r3,r2
 769 0034 10D1     	 bne .L39
 288:../Libraries/XMCLib/src/xmc_usic.c ****     {
 289:../Libraries/XMCLib/src/xmc_usic.c ****       // CTQSEL = 0 or 2
 290:../Libraries/XMCLib/src/xmc_usic.c ****       divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 770              	 .loc 2 290 0
 771 0036 7B68     	 ldr r3,[r7,#4]
 772 0038 5B69     	 ldr r3,[r3,#20]
 773 003a 3B4A     	 ldr r2,.L45
 774 003c 1340     	 and r3,r2
 775 003e 1B0C     	 lsr r3,r3,#16
 776 0040 5A1C     	 add r2,r3,#1
 777 0042 7B69     	 ldr r3,[r7,#20]
 778 0044 5343     	 mul r3,r2
 779 0046 7B61     	 str r3,[r7,#20]
 291:../Libraries/XMCLib/src/xmc_usic.c ****       if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x2) != 0)
 780              	 .loc 2 291 0
 781 0048 7B68     	 ldr r3,[r7,#4]
 782 004a 5B69     	 ldr r3,[r3,#20]
 783 004c 8022     	 mov r2,#128
 784 004e 1340     	 and r3,r2
 785 0050 02D0     	 beq .L39
 292:../Libraries/XMCLib/src/xmc_usic.c ****       {
 293:../Libraries/XMCLib/src/xmc_usic.c ****         // CTQSEL = 2
 294:../Libraries/XMCLib/src/xmc_usic.c ****         divider *= 2;
 786              	 .loc 2 294 0
 787 0052 7B69     	 ldr r3,[r7,#20]
 788 0054 5B00     	 lsl r3,r3,#1
 789 0056 7B61     	 str r3,[r7,#20]
 790              	.L39:
 295:../Libraries/XMCLib/src/xmc_usic.c ****       }
 296:../Libraries/XMCLib/src/xmc_usic.c ****     }
 297:../Libraries/XMCLib/src/xmc_usic.c ****   }
 298:../Libraries/XMCLib/src/xmc_usic.c **** 
 299:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PCTQ_Msk) >> USIC_CH_BRG_PCTQ_Pos) + 1;
 791              	 .loc 2 299 0
 792 0058 7B68     	 ldr r3,[r7,#4]
 793 005a 5A69     	 ldr r2,[r3,#20]
 794 005c C023     	 mov r3,#192
 795 005e 9B00     	 lsl r3,r3,#2
 796 0060 1340     	 and r3,r2
 797 0062 1B0A     	 lsr r3,r3,#8
 798 0064 5A1C     	 add r2,r3,#1
 799 0066 7B69     	 ldr r3,[r7,#20]
 800 0068 5343     	 mul r3,r2
 801 006a 7B61     	 str r3,[r7,#20]
 300:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 802              	 .loc 2 300 0
 803 006c 7B68     	 ldr r3,[r7,#4]
 804 006e 5A69     	 ldr r2,[r3,#20]
 805 0070 F823     	 mov r3,#248
 806 0072 DB01     	 lsl r3,r3,#7
 807 0074 1340     	 and r3,r2
 808 0076 9B0A     	 lsr r3,r3,#10
 809 0078 5A1C     	 add r2,r3,#1
 810 007a 7B69     	 ldr r3,[r7,#20]
 811 007c 5343     	 mul r3,r2
 812 007e 7B61     	 str r3,[r7,#20]
 301:../Libraries/XMCLib/src/xmc_usic.c **** 
 302:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 813              	 .loc 2 302 0
 814 0080 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 815 0084 031C     	 mov r3,r0
 816 0086 FB60     	 str r3,[r7,#12]
 303:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 304:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 817              	 .loc 2 304 0
 818 0088 7B68     	 ldr r3,[r7,#4]
 819 008a 1A69     	 ldr r2,[r3,#16]
 820 008c C023     	 mov r3,#192
 821 008e 1B02     	 lsl r3,r3,#8
 822 0090 1A40     	 and r2,r3
 823 0092 8023     	 mov r3,#128
 824 0094 1B02     	 lsl r3,r3,#8
 825 0096 9A42     	 cmp r2,r3
 826 0098 18D1     	 bne .L42
 305:../Libraries/XMCLib/src/xmc_usic.c ****   {
 306:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 827              	 .loc 2 306 0
 828 009a F868     	 ldr r0,[r7,#12]
 829 009c FFF7FEFF 	 bl __aeabi_ui2f
 830 00a0 041C     	 add r4,r0,#0
 831 00a2 7B68     	 ldr r3,[r7,#4]
 832 00a4 1B69     	 ldr r3,[r3,#16]
 833 00a6 9B05     	 lsl r3,r3,#22
 834 00a8 9B0D     	 lsr r3,r3,#22
 835 00aa 181C     	 mov r0,r3
 836 00ac FFF7FEFF 	 bl __aeabi_ui2f
 837 00b0 031C     	 add r3,r0,#0
 838 00b2 181C     	 add r0,r3,#0
 839 00b4 8921     	 mov r1,#137
 840 00b6 C905     	 lsl r1,r1,#23
 841 00b8 FFF7FEFF 	 bl __aeabi_fdiv
 842 00bc 031C     	 add r3,r0,#0
 843 00be 201C     	 add r0,r4,#0
 844 00c0 191C     	 add r1,r3,#0
 845 00c2 FFF7FEFF 	 bl __aeabi_fmul
 846 00c6 031C     	 add r3,r0,#0
 847 00c8 3B61     	 str r3,[r7,#16]
 848 00ca 1AE0     	 b .L43
 849              	.L42:
 307:../Libraries/XMCLib/src/xmc_usic.c ****   }
 308:../Libraries/XMCLib/src/xmc_usic.c ****   else
 309:../Libraries/XMCLib/src/xmc_usic.c ****   {
 310:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 311:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 850              	 .loc 2 311 0
 851 00cc F868     	 ldr r0,[r7,#12]
 852 00ce FFF7FEFF 	 bl __aeabi_ui2f
 853 00d2 041C     	 add r4,r0,#0
 854 00d4 7B68     	 ldr r3,[r7,#4]
 855 00d6 1B69     	 ldr r3,[r3,#16]
 856 00d8 9B05     	 lsl r3,r3,#22
 857 00da 9B0D     	 lsr r3,r3,#22
 858 00dc 8022     	 mov r2,#128
 859 00de D200     	 lsl r2,r2,#3
 860 00e0 D31A     	 sub r3,r2,r3
 861 00e2 181C     	 mov r0,r3
 862 00e4 FFF7FEFF 	 bl __aeabi_ui2f
 863 00e8 031C     	 add r3,r0,#0
 864 00ea FE20     	 mov r0,#254
 865 00ec 8005     	 lsl r0,r0,#22
 866 00ee 191C     	 add r1,r3,#0
 867 00f0 FFF7FEFF 	 bl __aeabi_fdiv
 868 00f4 031C     	 add r3,r0,#0
 869 00f6 201C     	 add r0,r4,#0
 870 00f8 191C     	 add r1,r3,#0
 871 00fa FFF7FEFF 	 bl __aeabi_fmul
 872 00fe 031C     	 add r3,r0,#0
 873 0100 3B61     	 str r3,[r7,#16]
 874              	.L43:
 312:../Libraries/XMCLib/src/xmc_usic.c ****   }
 313:../Libraries/XMCLib/src/xmc_usic.c **** 
 314:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 875              	 .loc 2 314 0
 876 0102 7869     	 ldr r0,[r7,#20]
 877 0104 FFF7FEFF 	 bl __aeabi_ui2f
 878 0108 031C     	 add r3,r0,#0
 879 010a 3869     	 ldr r0,[r7,#16]
 880 010c 191C     	 add r1,r3,#0
 881 010e FFF7FEFF 	 bl __aeabi_fdiv
 882 0112 031C     	 add r3,r0,#0
 883 0114 3B61     	 str r3,[r7,#16]
 315:../Libraries/XMCLib/src/xmc_usic.c **** 
 316:../Libraries/XMCLib/src/xmc_usic.c ****   return (uint32_t)baudrate;
 884              	 .loc 2 316 0
 885 0116 3869     	 ldr r0,[r7,#16]
 886 0118 FFF7FEFF 	 bl __aeabi_f2uiz
 887 011c 031C     	 mov r3,r0
 317:../Libraries/XMCLib/src/xmc_usic.c **** }
 888              	 .loc 2 317 0
 889 011e 181C     	 mov r0,r3
 890 0120 BD46     	 mov sp,r7
 891 0122 07B0     	 add sp,sp,#28
 892              	 
 893 0124 90BD     	 pop {r4,r7,pc}
 894              	.L46:
 895 0126 C046     	 .align 2
 896              	.L45:
 897 0128 0000FF03 	 .word 67043328
 898              	 .cfi_endproc
 899              	.LFE134:
 901              	 .section .text.XMC_USIC_CH_GetSCLKFrequency,"ax",%progbits
 902              	 .align 2
 903              	 .global XMC_USIC_CH_GetSCLKFrequency
 904              	 .code 16
 905              	 .thumb_func
 907              	XMC_USIC_CH_GetSCLKFrequency:
 908              	.LFB135:
 318:../Libraries/XMCLib/src/xmc_usic.c **** 
 319:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel)
 320:../Libraries/XMCLib/src/xmc_usic.c **** {
 909              	 .loc 2 320 0
 910              	 .cfi_startproc
 911 0000 90B5     	 push {r4,r7,lr}
 912              	.LCFI24:
 913              	 .cfi_def_cfa_offset 12
 914              	 .cfi_offset 4,-12
 915              	 .cfi_offset 7,-8
 916              	 .cfi_offset 14,-4
 917 0002 87B0     	 sub sp,sp,#28
 918              	.LCFI25:
 919              	 .cfi_def_cfa_offset 40
 920 0004 00AF     	 add r7,sp,#0
 921              	.LCFI26:
 922              	 .cfi_def_cfa_register 7
 923 0006 7860     	 str r0,[r7,#4]
 321:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 322:../Libraries/XMCLib/src/xmc_usic.c ****   divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 924              	 .loc 2 322 0
 925 0008 7B68     	 ldr r3,[r7,#4]
 926 000a 5B69     	 ldr r3,[r3,#20]
 927 000c 1022     	 mov r2,#16
 928 000e 1340     	 and r3,r2
 929 0010 01D0     	 beq .L48
 930              	 .loc 2 322 0 is_stmt 0 discriminator 1
 931 0012 0223     	 mov r3,#2
 932 0014 00E0     	 b .L49
 933              	.L48:
 934              	 .loc 2 322 0 discriminator 2
 935 0016 0123     	 mov r3,#1
 936              	.L49:
 937              	 .loc 2 322 0 discriminator 4
 938 0018 3B61     	 str r3,[r7,#16]
 323:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 939              	 .loc 2 323 0 is_stmt 1 discriminator 4
 940 001a 7B68     	 ldr r3,[r7,#4]
 941 001c 5B69     	 ldr r3,[r3,#20]
 942 001e 2E4A     	 ldr r2,.L53
 943 0020 1340     	 and r3,r2
 944 0022 1B0C     	 lsr r3,r3,#16
 945 0024 5A1C     	 add r2,r3,#1
 946 0026 3B69     	 ldr r3,[r7,#16]
 947 0028 5343     	 mul r3,r2
 948 002a 3B61     	 str r3,[r7,#16]
 324:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= 2;
 949              	 .loc 2 324 0 discriminator 4
 950 002c 3B69     	 ldr r3,[r7,#16]
 951 002e 5B00     	 lsl r3,r3,#1
 952 0030 3B61     	 str r3,[r7,#16]
 325:../Libraries/XMCLib/src/xmc_usic.c **** 
 326:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 953              	 .loc 2 326 0 discriminator 4
 954 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 955 0036 031C     	 mov r3,r0
 956 0038 FB60     	 str r3,[r7,#12]
 327:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 328:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 957              	 .loc 2 328 0 discriminator 4
 958 003a 7B68     	 ldr r3,[r7,#4]
 959 003c 1A69     	 ldr r2,[r3,#16]
 960 003e C023     	 mov r3,#192
 961 0040 1B02     	 lsl r3,r3,#8
 962 0042 1A40     	 and r2,r3
 963 0044 8023     	 mov r3,#128
 964 0046 1B02     	 lsl r3,r3,#8
 965 0048 9A42     	 cmp r2,r3
 966 004a 18D1     	 bne .L50
 329:../Libraries/XMCLib/src/xmc_usic.c ****   {
 330:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 331:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 967              	 .loc 2 331 0
 968 004c F868     	 ldr r0,[r7,#12]
 969 004e FFF7FEFF 	 bl __aeabi_ui2f
 970 0052 041C     	 add r4,r0,#0
 971 0054 7B68     	 ldr r3,[r7,#4]
 972 0056 1B69     	 ldr r3,[r3,#16]
 973 0058 9B05     	 lsl r3,r3,#22
 974 005a 9B0D     	 lsr r3,r3,#22
 975 005c 181C     	 mov r0,r3
 976 005e FFF7FEFF 	 bl __aeabi_ui2f
 977 0062 031C     	 add r3,r0,#0
 978 0064 181C     	 add r0,r3,#0
 979 0066 8921     	 mov r1,#137
 980 0068 C905     	 lsl r1,r1,#23
 981 006a FFF7FEFF 	 bl __aeabi_fdiv
 982 006e 031C     	 add r3,r0,#0
 983 0070 201C     	 add r0,r4,#0
 984 0072 191C     	 add r1,r3,#0
 985 0074 FFF7FEFF 	 bl __aeabi_fmul
 986 0078 031C     	 add r3,r0,#0
 987 007a 7B61     	 str r3,[r7,#20]
 988 007c 1AE0     	 b .L51
 989              	.L50:
 332:../Libraries/XMCLib/src/xmc_usic.c ****   }
 333:../Libraries/XMCLib/src/xmc_usic.c ****   else
 334:../Libraries/XMCLib/src/xmc_usic.c ****   {
 335:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 336:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 990              	 .loc 2 336 0
 991 007e F868     	 ldr r0,[r7,#12]
 992 0080 FFF7FEFF 	 bl __aeabi_ui2f
 993 0084 041C     	 add r4,r0,#0
 994 0086 7B68     	 ldr r3,[r7,#4]
 995 0088 1B69     	 ldr r3,[r3,#16]
 996 008a 9B05     	 lsl r3,r3,#22
 997 008c 9B0D     	 lsr r3,r3,#22
 998 008e 8022     	 mov r2,#128
 999 0090 D200     	 lsl r2,r2,#3
 1000 0092 D31A     	 sub r3,r2,r3
 1001 0094 181C     	 mov r0,r3
 1002 0096 FFF7FEFF 	 bl __aeabi_ui2f
 1003 009a 031C     	 add r3,r0,#0
 1004 009c FE20     	 mov r0,#254
 1005 009e 8005     	 lsl r0,r0,#22
 1006 00a0 191C     	 add r1,r3,#0
 1007 00a2 FFF7FEFF 	 bl __aeabi_fdiv
 1008 00a6 031C     	 add r3,r0,#0
 1009 00a8 201C     	 add r0,r4,#0
 1010 00aa 191C     	 add r1,r3,#0
 1011 00ac FFF7FEFF 	 bl __aeabi_fmul
 1012 00b0 031C     	 add r3,r0,#0
 1013 00b2 7B61     	 str r3,[r7,#20]
 1014              	.L51:
 337:../Libraries/XMCLib/src/xmc_usic.c ****   }
 338:../Libraries/XMCLib/src/xmc_usic.c **** 
 339:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 1015              	 .loc 2 339 0
 1016 00b4 3869     	 ldr r0,[r7,#16]
 1017 00b6 FFF7FEFF 	 bl __aeabi_ui2f
 1018 00ba 031C     	 add r3,r0,#0
 1019 00bc 7869     	 ldr r0,[r7,#20]
 1020 00be 191C     	 add r1,r3,#0
 1021 00c0 FFF7FEFF 	 bl __aeabi_fdiv
 1022 00c4 031C     	 add r3,r0,#0
 1023 00c6 7B61     	 str r3,[r7,#20]
 340:../Libraries/XMCLib/src/xmc_usic.c **** 
 341:../Libraries/XMCLib/src/xmc_usic.c ****   return (uint32_t)baudrate;
 1024              	 .loc 2 341 0
 1025 00c8 7869     	 ldr r0,[r7,#20]
 1026 00ca FFF7FEFF 	 bl __aeabi_f2uiz
 1027 00ce 031C     	 mov r3,r0
 342:../Libraries/XMCLib/src/xmc_usic.c **** }
 1028              	 .loc 2 342 0
 1029 00d0 181C     	 mov r0,r3
 1030 00d2 BD46     	 mov sp,r7
 1031 00d4 07B0     	 add sp,sp,#28
 1032              	 
 1033 00d6 90BD     	 pop {r4,r7,pc}
 1034              	.L54:
 1035              	 .align 2
 1036              	.L53:
 1037 00d8 0000FF03 	 .word 67043328
 1038              	 .cfi_endproc
 1039              	.LFE135:
 1041              	 .section .text.XMC_USIC_CH_GetMCLKFrequency,"ax",%progbits
 1042              	 .align 2
 1043              	 .global XMC_USIC_CH_GetMCLKFrequency
 1044              	 .code 16
 1045              	 .thumb_func
 1047              	XMC_USIC_CH_GetMCLKFrequency:
 1048              	.LFB136:
 343:../Libraries/XMCLib/src/xmc_usic.c **** 
 344:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel)
 345:../Libraries/XMCLib/src/xmc_usic.c **** {
 1049              	 .loc 2 345 0
 1050              	 .cfi_startproc
 1051 0000 90B5     	 push {r4,r7,lr}
 1052              	.LCFI27:
 1053              	 .cfi_def_cfa_offset 12
 1054              	 .cfi_offset 4,-12
 1055              	 .cfi_offset 7,-8
 1056              	 .cfi_offset 14,-4
 1057 0002 85B0     	 sub sp,sp,#20
 1058              	.LCFI28:
 1059              	 .cfi_def_cfa_offset 32
 1060 0004 00AF     	 add r7,sp,#0
 1061              	.LCFI29:
 1062              	 .cfi_def_cfa_register 7
 1063 0006 7860     	 str r0,[r7,#4]
 346:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 1064              	 .loc 2 346 0
 1065 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 1066 000c 031C     	 mov r3,r0
 1067 000e BB60     	 str r3,[r7,#8]
 347:../Libraries/XMCLib/src/xmc_usic.c **** 
 348:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 349:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 1068              	 .loc 2 349 0
 1069 0010 7B68     	 ldr r3,[r7,#4]
 1070 0012 1A69     	 ldr r2,[r3,#16]
 1071 0014 C023     	 mov r3,#192
 1072 0016 1B02     	 lsl r3,r3,#8
 1073 0018 1A40     	 and r2,r3
 1074 001a 8023     	 mov r3,#128
 1075 001c 1B02     	 lsl r3,r3,#8
 1076 001e 9A42     	 cmp r2,r3
 1077 0020 1BD1     	 bne .L56
 350:../Libraries/XMCLib/src/xmc_usic.c ****   {
 351:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 352:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 1078              	 .loc 2 352 0
 1079 0022 B868     	 ldr r0,[r7,#8]
 1080 0024 FFF7FEFF 	 bl __aeabi_ui2f
 1081 0028 041C     	 add r4,r0,#0
 1082 002a 7B68     	 ldr r3,[r7,#4]
 1083 002c 1B69     	 ldr r3,[r3,#16]
 1084 002e 9B05     	 lsl r3,r3,#22
 1085 0030 9B0D     	 lsr r3,r3,#22
 1086 0032 8022     	 mov r2,#128
 1087 0034 D200     	 lsl r2,r2,#3
 1088 0036 D31A     	 sub r3,r2,r3
 1089 0038 181C     	 mov r0,r3
 1090 003a FFF7FEFF 	 bl __aeabi_ui2f
 1091 003e 031C     	 add r3,r0,#0
 1092 0040 FE20     	 mov r0,#254
 1093 0042 8005     	 lsl r0,r0,#22
 1094 0044 191C     	 add r1,r3,#0
 1095 0046 FFF7FEFF 	 bl __aeabi_fdiv
 1096 004a 031C     	 add r3,r0,#0
 1097 004c 201C     	 add r0,r4,#0
 1098 004e 191C     	 add r1,r3,#0
 1099 0050 FFF7FEFF 	 bl __aeabi_fmul
 1100 0054 031C     	 add r3,r0,#0
 1101 0056 FB60     	 str r3,[r7,#12]
 1102 0058 17E0     	 b .L57
 1103              	.L56:
 353:../Libraries/XMCLib/src/xmc_usic.c ****   }
 354:../Libraries/XMCLib/src/xmc_usic.c ****   else
 355:../Libraries/XMCLib/src/xmc_usic.c ****   {
 356:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 357:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi / (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 1104              	 .loc 2 357 0
 1105 005a B868     	 ldr r0,[r7,#8]
 1106 005c FFF7FEFF 	 bl __aeabi_ui2f
 1107 0060 041C     	 add r4,r0,#0
 1108 0062 7B68     	 ldr r3,[r7,#4]
 1109 0064 1B69     	 ldr r3,[r3,#16]
 1110 0066 9B05     	 lsl r3,r3,#22
 1111 0068 9B0D     	 lsr r3,r3,#22
 1112 006a 181C     	 mov r0,r3
 1113 006c FFF7FEFF 	 bl __aeabi_ui2f
 1114 0070 031C     	 add r3,r0,#0
 1115 0072 181C     	 add r0,r3,#0
 1116 0074 8921     	 mov r1,#137
 1117 0076 C905     	 lsl r1,r1,#23
 1118 0078 FFF7FEFF 	 bl __aeabi_fdiv
 1119 007c 031C     	 add r3,r0,#0
 1120 007e 201C     	 add r0,r4,#0
 1121 0080 191C     	 add r1,r3,#0
 1122 0082 FFF7FEFF 	 bl __aeabi_fdiv
 1123 0086 031C     	 add r3,r0,#0
 1124 0088 FB60     	 str r3,[r7,#12]
 1125              	.L57:
 358:../Libraries/XMCLib/src/xmc_usic.c ****   }
 359:../Libraries/XMCLib/src/xmc_usic.c **** 
 360:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= 2;
 1126              	 .loc 2 360 0
 1127 008a F868     	 ldr r0,[r7,#12]
 1128 008c 8021     	 mov r1,#128
 1129 008e C905     	 lsl r1,r1,#23
 1130 0090 FFF7FEFF 	 bl __aeabi_fdiv
 1131 0094 031C     	 add r3,r0,#0
 1132 0096 FB60     	 str r3,[r7,#12]
 361:../Libraries/XMCLib/src/xmc_usic.c **** 
 362:../Libraries/XMCLib/src/xmc_usic.c ****   return (uint32_t)baudrate;
 1133              	 .loc 2 362 0
 1134 0098 F868     	 ldr r0,[r7,#12]
 1135 009a FFF7FEFF 	 bl __aeabi_f2uiz
 1136 009e 031C     	 mov r3,r0
 363:../Libraries/XMCLib/src/xmc_usic.c **** }
 1137              	 .loc 2 363 0
 1138 00a0 181C     	 mov r0,r3
 1139 00a2 BD46     	 mov sp,r7
 1140 00a4 05B0     	 add sp,sp,#20
 1141              	 
 1142 00a6 90BD     	 pop {r4,r7,pc}
 1143              	 .cfi_endproc
 1144              	.LFE136:
 1146              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 1147              	 .align 2
 1148              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 1149              	 .code 16
 1150              	 .thumb_func
 1152              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 1153              	.LFB137:
 364:../Libraries/XMCLib/src/xmc_usic.c **** 
 365:../Libraries/XMCLib/src/xmc_usic.c **** 
 366:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 367:../Libraries/XMCLib/src/xmc_usic.c ****     const uint16_t pdiv,
 368:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t oversampling,
 369:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 370:../Libraries/XMCLib/src/xmc_usic.c **** {
 1154              	 .loc 2 370 0
 1155              	 .cfi_startproc
 1156 0000 80B5     	 push {r7,lr}
 1157              	.LCFI30:
 1158              	 .cfi_def_cfa_offset 8
 1159              	 .cfi_offset 7,-8
 1160              	 .cfi_offset 14,-4
 1161 0002 84B0     	 sub sp,sp,#16
 1162              	.LCFI31:
 1163              	 .cfi_def_cfa_offset 24
 1164 0004 00AF     	 add r7,sp,#0
 1165              	.LCFI32:
 1166              	 .cfi_def_cfa_register 7
 1167 0006 F860     	 str r0,[r7,#12]
 1168 0008 081C     	 mov r0,r1
 1169 000a 7A60     	 str r2,[r7,#4]
 1170 000c 191C     	 mov r1,r3
 1171 000e 0A23     	 mov r3,#10
 1172 0010 FB18     	 add r3,r7,r3
 1173 0012 021C     	 add r2,r0,#0
 1174 0014 1A80     	 strh r2,[r3]
 1175 0016 0923     	 mov r3,#9
 1176 0018 FB18     	 add r3,r7,r3
 1177 001a 0A1C     	 add r2,r1,#0
 1178 001c 1A70     	 strb r2,[r3]
 371:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 372:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 373:../Libraries/XMCLib/src/xmc_usic.c **** 
 374:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 375:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 1179              	 .loc 2 375 0
 1180 001e FB68     	 ldr r3,[r7,#12]
 1181 0020 181C     	 mov r0,r3
 1182 0022 0221     	 mov r1,#2
 1183 0024 FFF7FEFF 	 bl XMC_USIC_CH_SetBRGInputClockSource
 376:../Libraries/XMCLib/src/xmc_usic.c **** 
 377:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the trigger combination mode */
 378:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel, XMC_USIC_CH_INPUT_DX1, combination_mode);
 1184              	 .loc 2 378 0
 1185 0028 FA68     	 ldr r2,[r7,#12]
 1186 002a 0923     	 mov r3,#9
 1187 002c FB18     	 add r3,r7,r3
 1188 002e 1B78     	 ldrb r3,[r3]
 1189 0030 101C     	 mov r0,r2
 1190 0032 0121     	 mov r1,#1
 1191 0034 1A1C     	 mov r2,r3
 1192 0036 FFF7FEFF 	 bl XMC_USIC_CH_SetInputTriggerCombinationMode
 379:../Libraries/XMCLib/src/xmc_usic.c **** 
 380:../Libraries/XMCLib/src/xmc_usic.c ****   /* Configuring the dividers and oversampling */
 381:../Libraries/XMCLib/src/xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 1193              	 .loc 2 381 0
 1194 003a FB68     	 ldr r3,[r7,#12]
 1195 003c 5B69     	 ldr r3,[r3,#20]
 1196 003e 084A     	 ldr r2,.L60
 1197 0040 1A40     	 and r2,r3
 382:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 383:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 384:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 385:../Libraries/XMCLib/src/xmc_usic.c ****                  (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1198              	 .loc 2 385 0
 1199 0042 7B68     	 ldr r3,[r7,#4]
 1200 0044 013B     	 sub r3,r3,#1
 1201 0046 9B02     	 lsl r3,r3,#10
 384:../Libraries/XMCLib/src/xmc_usic.c ****                  (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1202              	 .loc 2 384 0
 1203 0048 1A43     	 orr r2,r3
 386:../Libraries/XMCLib/src/xmc_usic.c ****                  (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1204              	 .loc 2 386 0
 1205 004a 0A23     	 mov r3,#10
 1206 004c FB18     	 add r3,r7,r3
 1207 004e 1B88     	 ldrh r3,[r3]
 1208 0050 013B     	 sub r3,r3,#1
 1209 0052 1B04     	 lsl r3,r3,#16
 385:../Libraries/XMCLib/src/xmc_usic.c ****                  (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1210              	 .loc 2 385 0
 1211 0054 1A43     	 orr r2,r3
 381:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 1212              	 .loc 2 381 0
 1213 0056 FB68     	 ldr r3,[r7,#12]
 1214 0058 5A61     	 str r2,[r3,#20]
 387:../Libraries/XMCLib/src/xmc_usic.c **** }
 1215              	 .loc 2 387 0
 1216 005a BD46     	 mov sp,r7
 1217 005c 04B0     	 add sp,sp,#16
 1218              	 
 1219 005e 80BD     	 pop {r7,pc}
 1220              	.L61:
 1221              	 .align 2
 1222              	.L60:
 1223 0060 EF8000FC 	 .word -67075857
 1224              	 .cfi_endproc
 1225              	.LFE137:
 1227              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 1228              	 .align 2
 1229              	 .global XMC_USIC_CH_TXFIFO_Configure
 1230              	 .code 16
 1231              	 .thumb_func
 1233              	XMC_USIC_CH_TXFIFO_Configure:
 1234              	.LFB138:
 388:../Libraries/XMCLib/src/xmc_usic.c **** 
 389:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 390:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 391:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 392:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 393:../Libraries/XMCLib/src/xmc_usic.c **** {
 1235              	 .loc 2 393 0
 1236              	 .cfi_startproc
 1237 0000 80B5     	 push {r7,lr}
 1238              	.LCFI33:
 1239              	 .cfi_def_cfa_offset 8
 1240              	 .cfi_offset 7,-8
 1241              	 .cfi_offset 14,-4
 1242 0002 84B0     	 sub sp,sp,#16
 1243              	.LCFI34:
 1244              	 .cfi_def_cfa_offset 24
 1245 0004 00AF     	 add r7,sp,#0
 1246              	.LCFI35:
 1247              	 .cfi_def_cfa_register 7
 1248 0006 F860     	 str r0,[r7,#12]
 1249 0008 B960     	 str r1,[r7,#8]
 1250 000a 3B60     	 str r3,[r7]
 1251 000c FB1D     	 add r3,r7,#7
 1252 000e 1A70     	 strb r2,[r3]
 394:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 395:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1253              	 .loc 2 395 0
 1254 0010 FA68     	 ldr r2,[r7,#12]
 1255 0012 8423     	 mov r3,#132
 1256 0014 5B00     	 lsl r3,r3,#1
 1257 0016 D358     	 ldr r3,[r2,r3]
 1258 0018 0E4A     	 ldr r2,.L63
 1259 001a 1340     	 and r3,r2
 1260 001c 191C     	 mov r1,r3
 1261 001e FA68     	 ldr r2,[r7,#12]
 1262 0020 8423     	 mov r3,#132
 1263 0022 5B00     	 lsl r3,r3,#1
 1264 0024 D150     	 str r1,[r2,r3]
 396:../Libraries/XMCLib/src/xmc_usic.c **** 
 397:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 398:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 399:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 400:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 401:../Libraries/XMCLib/src/xmc_usic.c ****    */
 402:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 1265              	 .loc 2 402 0
 1266 0026 FA68     	 ldr r2,[r7,#12]
 1267 0028 8423     	 mov r3,#132
 1268 002a 5B00     	 lsl r3,r3,#1
 1269 002c D358     	 ldr r3,[r2,r3]
 1270 002e 0A4A     	 ldr r2,.L63+4
 1271 0030 1A40     	 and r2,r3
 403:../Libraries/XMCLib/src/xmc_usic.c ****                               USIC_CH_TBCTR_DPTR_Msk |
 404:../Libraries/XMCLib/src/xmc_usic.c ****                               USIC_CH_TBCTR_SIZE_Msk)) |
 405:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1272              	 .loc 2 405 0
 1273 0032 3B68     	 ldr r3,[r7]
 1274 0034 1902     	 lsl r1,r3,#8
 1275 0036 BB68     	 ldr r3,[r7,#8]
 1276 0038 1943     	 orr r1,r3
 406:../Libraries/XMCLib/src/xmc_usic.c ****                               (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 407:../Libraries/XMCLib/src/xmc_usic.c ****                               ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1277              	 .loc 2 407 0
 1278 003a FB1D     	 add r3,r7,#7
 1279 003c 1B78     	 ldrb r3,[r3]
 1280 003e 1B06     	 lsl r3,r3,#24
 405:../Libraries/XMCLib/src/xmc_usic.c ****                               (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 1281              	 .loc 2 405 0
 1282 0040 0B43     	 orr r3,r1
 404:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1283              	 .loc 2 404 0
 1284 0042 1A43     	 orr r2,r3
 1285 0044 111C     	 mov r1,r2
 402:../Libraries/XMCLib/src/xmc_usic.c ****                               USIC_CH_TBCTR_DPTR_Msk |
 1286              	 .loc 2 402 0
 1287 0046 FA68     	 ldr r2,[r7,#12]
 1288 0048 8423     	 mov r3,#132
 1289 004a 5B00     	 lsl r3,r3,#1
 1290 004c D150     	 str r1,[r2,r3]
 408:../Libraries/XMCLib/src/xmc_usic.c **** }
 1291              	 .loc 2 408 0
 1292 004e BD46     	 mov sp,r7
 1293 0050 04B0     	 add sp,sp,#16
 1294              	 
 1295 0052 80BD     	 pop {r7,pc}
 1296              	.L64:
 1297              	 .align 2
 1298              	.L63:
 1299 0054 FFFFFFF8 	 .word -117440513
 1300 0058 C0C0FFF8 	 .word -117456704
 1301              	 .cfi_endproc
 1302              	.LFE138:
 1304              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 1305              	 .align 2
 1306              	 .global XMC_USIC_CH_RXFIFO_Configure
 1307              	 .code 16
 1308              	 .thumb_func
 1310              	XMC_USIC_CH_RXFIFO_Configure:
 1311              	.LFB139:
 409:../Libraries/XMCLib/src/xmc_usic.c **** 
 410:../Libraries/XMCLib/src/xmc_usic.c **** 
 411:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 412:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 413:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 414:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 415:../Libraries/XMCLib/src/xmc_usic.c **** {
 1312              	 .loc 2 415 0
 1313              	 .cfi_startproc
 1314 0000 80B5     	 push {r7,lr}
 1315              	.LCFI36:
 1316              	 .cfi_def_cfa_offset 8
 1317              	 .cfi_offset 7,-8
 1318              	 .cfi_offset 14,-4
 1319 0002 84B0     	 sub sp,sp,#16
 1320              	.LCFI37:
 1321              	 .cfi_def_cfa_offset 24
 1322 0004 00AF     	 add r7,sp,#0
 1323              	.LCFI38:
 1324              	 .cfi_def_cfa_register 7
 1325 0006 F860     	 str r0,[r7,#12]
 1326 0008 B960     	 str r1,[r7,#8]
 1327 000a 3B60     	 str r3,[r7]
 1328 000c FB1D     	 add r3,r7,#7
 1329 000e 1A70     	 strb r2,[r3]
 416:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 417:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1330              	 .loc 2 417 0
 1331 0010 FA68     	 ldr r2,[r7,#12]
 1332 0012 8623     	 mov r3,#134
 1333 0014 5B00     	 lsl r3,r3,#1
 1334 0016 D358     	 ldr r3,[r2,r3]
 1335 0018 104A     	 ldr r2,.L66
 1336 001a 1340     	 and r3,r2
 1337 001c 191C     	 mov r1,r3
 1338 001e FA68     	 ldr r2,[r7,#12]
 1339 0020 8623     	 mov r3,#134
 1340 0022 5B00     	 lsl r3,r3,#1
 1341 0024 D150     	 str r1,[r2,r3]
 418:../Libraries/XMCLib/src/xmc_usic.c **** 
 419:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 420:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 421:../Libraries/XMCLib/src/xmc_usic.c ****    */
 422:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 1342              	 .loc 2 422 0
 1343 0026 FA68     	 ldr r2,[r7,#12]
 1344 0028 8623     	 mov r3,#134
 1345 002a 5B00     	 lsl r3,r3,#1
 1346 002c D358     	 ldr r3,[r2,r3]
 1347 002e 0C4A     	 ldr r2,.L66+4
 1348 0030 1A40     	 and r2,r3
 423:../Libraries/XMCLib/src/xmc_usic.c ****                                USIC_CH_RBCTR_DPTR_Msk |
 424:../Libraries/XMCLib/src/xmc_usic.c ****                                USIC_CH_RBCTR_LOF_Msk)) |
 425:../Libraries/XMCLib/src/xmc_usic.c ****                               ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1349              	 .loc 2 425 0
 1350 0032 3B68     	 ldr r3,[r7]
 1351 0034 1902     	 lsl r1,r3,#8
 1352 0036 BB68     	 ldr r3,[r7,#8]
 1353 0038 1943     	 orr r1,r3
 426:../Libraries/XMCLib/src/xmc_usic.c ****                                (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 427:../Libraries/XMCLib/src/xmc_usic.c ****                                ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 1354              	 .loc 2 427 0
 1355 003a FB1D     	 add r3,r7,#7
 1356 003c 1B78     	 ldrb r3,[r3]
 1357 003e 1B06     	 lsl r3,r3,#24
 426:../Libraries/XMCLib/src/xmc_usic.c ****                                (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 1358              	 .loc 2 426 0
 1359 0040 0B43     	 orr r3,r1
 422:../Libraries/XMCLib/src/xmc_usic.c ****                                USIC_CH_RBCTR_DPTR_Msk |
 1360              	 .loc 2 422 0
 1361 0042 1343     	 orr r3,r2
 1362 0044 8022     	 mov r2,#128
 1363 0046 5205     	 lsl r2,r2,#21
 1364 0048 1A43     	 orr r2,r3
 1365 004a 111C     	 mov r1,r2
 1366 004c FA68     	 ldr r2,[r7,#12]
 1367 004e 8623     	 mov r3,#134
 1368 0050 5B00     	 lsl r3,r3,#1
 1369 0052 D150     	 str r1,[r2,r3]
 428:../Libraries/XMCLib/src/xmc_usic.c ****                                (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 429:../Libraries/XMCLib/src/xmc_usic.c **** }
 1370              	 .loc 2 429 0
 1371 0054 BD46     	 mov sp,r7
 1372 0056 04B0     	 add sp,sp,#16
 1373              	 
 1374 0058 80BD     	 pop {r7,pc}
 1375              	.L67:
 1376 005a C046     	 .align 2
 1377              	.L66:
 1378 005c FFFFFFF8 	 .word -117440513
 1379 0060 C0C0FFEF 	 .word -268451648
 1380              	 .cfi_endproc
 1381              	.LFE139:
 1383              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1384              	 .align 2
 1385              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 1386              	 .code 16
 1387              	 .thumb_func
 1389              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 1390              	.LFB140:
 430:../Libraries/XMCLib/src/xmc_usic.c **** 
 431:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 432:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_FIFO_SIZE_t size,
 433:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t limit)
 434:../Libraries/XMCLib/src/xmc_usic.c **** {
 1391              	 .loc 2 434 0
 1392              	 .cfi_startproc
 1393 0000 80B5     	 push {r7,lr}
 1394              	.LCFI39:
 1395              	 .cfi_def_cfa_offset 8
 1396              	 .cfi_offset 7,-8
 1397              	 .cfi_offset 14,-4
 1398 0002 84B0     	 sub sp,sp,#16
 1399              	.LCFI40:
 1400              	 .cfi_def_cfa_offset 24
 1401 0004 00AF     	 add r7,sp,#0
 1402              	.LCFI41:
 1403              	 .cfi_def_cfa_register 7
 1404 0006 F860     	 str r0,[r7,#12]
 1405 0008 7A60     	 str r2,[r7,#4]
 1406 000a 0B23     	 mov r3,#11
 1407 000c FB18     	 add r3,r7,r3
 1408 000e 0A1C     	 add r2,r1,#0
 1409 0010 1A70     	 strb r2,[r3]
 435:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_UNUSED_ARG(size);
 436:../Libraries/XMCLib/src/xmc_usic.c **** 
 437:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 438:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 439:../Libraries/XMCLib/src/xmc_usic.c ****    */
 440:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 1410              	 .loc 2 440 0
 1411 0012 FA68     	 ldr r2,[r7,#12]
 1412 0014 8423     	 mov r3,#132
 1413 0016 5B00     	 lsl r3,r3,#1
 1414 0018 D358     	 ldr r3,[r2,r3]
 1415 001a 064A     	 ldr r2,.L69
 1416 001c 1A40     	 and r2,r3
 441:../Libraries/XMCLib/src/xmc_usic.c ****                               (limit << USIC_CH_TBCTR_LIMIT_Pos));
 1417              	 .loc 2 441 0
 1418 001e 7B68     	 ldr r3,[r7,#4]
 1419 0020 1B02     	 lsl r3,r3,#8
 440:../Libraries/XMCLib/src/xmc_usic.c ****                               (limit << USIC_CH_TBCTR_LIMIT_Pos));
 1420              	 .loc 2 440 0
 1421 0022 1A43     	 orr r2,r3
 1422 0024 111C     	 mov r1,r2
 1423 0026 FA68     	 ldr r2,[r7,#12]
 1424 0028 8423     	 mov r3,#132
 1425 002a 5B00     	 lsl r3,r3,#1
 1426 002c D150     	 str r1,[r2,r3]
 442:../Libraries/XMCLib/src/xmc_usic.c **** }
 1427              	 .loc 2 442 0
 1428 002e BD46     	 mov sp,r7
 1429 0030 04B0     	 add sp,sp,#16
 1430              	 
 1431 0032 80BD     	 pop {r7,pc}
 1432              	.L70:
 1433              	 .align 2
 1434              	.L69:
 1435 0034 FFC0FFFF 	 .word -16129
 1436              	 .cfi_endproc
 1437              	.LFE140:
 1439              	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1440              	 .align 2
 1441              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 1442              	 .code 16
 1443              	 .thumb_func
 1445              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 1446              	.LFB141:
 443:../Libraries/XMCLib/src/xmc_usic.c **** 
 444:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 445:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_FIFO_SIZE_t size,
 446:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t limit)
 447:../Libraries/XMCLib/src/xmc_usic.c **** {
 1447              	 .loc 2 447 0
 1448              	 .cfi_startproc
 1449 0000 80B5     	 push {r7,lr}
 1450              	.LCFI42:
 1451              	 .cfi_def_cfa_offset 8
 1452              	 .cfi_offset 7,-8
 1453              	 .cfi_offset 14,-4
 1454 0002 84B0     	 sub sp,sp,#16
 1455              	.LCFI43:
 1456              	 .cfi_def_cfa_offset 24
 1457 0004 00AF     	 add r7,sp,#0
 1458              	.LCFI44:
 1459              	 .cfi_def_cfa_register 7
 1460 0006 F860     	 str r0,[r7,#12]
 1461 0008 7A60     	 str r2,[r7,#4]
 1462 000a 0B23     	 mov r3,#11
 1463 000c FB18     	 add r3,r7,r3
 1464 000e 0A1C     	 add r2,r1,#0
 1465 0010 1A70     	 strb r2,[r3]
 448:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_UNUSED_ARG(size);
 449:../Libraries/XMCLib/src/xmc_usic.c **** 
 450:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 1466              	 .loc 2 450 0
 1467 0012 FA68     	 ldr r2,[r7,#12]
 1468 0014 8623     	 mov r3,#134
 1469 0016 5B00     	 lsl r3,r3,#1
 1470 0018 D358     	 ldr r3,[r2,r3]
 1471 001a 064A     	 ldr r2,.L72
 1472 001c 1A40     	 and r2,r3
 451:../Libraries/XMCLib/src/xmc_usic.c ****                               (limit << USIC_CH_RBCTR_LIMIT_Pos));
 1473              	 .loc 2 451 0
 1474 001e 7B68     	 ldr r3,[r7,#4]
 1475 0020 1B02     	 lsl r3,r3,#8
 450:../Libraries/XMCLib/src/xmc_usic.c ****                               (limit << USIC_CH_RBCTR_LIMIT_Pos));
 1476              	 .loc 2 450 0
 1477 0022 1A43     	 orr r2,r3
 1478 0024 111C     	 mov r1,r2
 1479 0026 FA68     	 ldr r2,[r7,#12]
 1480 0028 8623     	 mov r3,#134
 1481 002a 5B00     	 lsl r3,r3,#1
 1482 002c D150     	 str r1,[r2,r3]
 452:../Libraries/XMCLib/src/xmc_usic.c **** }
 1483              	 .loc 2 452 0
 1484 002e BD46     	 mov sp,r7
 1485 0030 04B0     	 add sp,sp,#16
 1486              	 
 1487 0032 80BD     	 pop {r7,pc}
 1488              	.L73:
 1489              	 .align 2
 1490              	.L72:
 1491 0034 FFC0FFFF 	 .word -16129
 1492              	 .cfi_endproc
 1493              	.LFE141:
 1495              	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 1496              	 .align 2
 1497              	 .global XMC_USIC_CH_SetInterruptNodePointer
 1498              	 .code 16
 1499              	 .thumb_func
 1501              	XMC_USIC_CH_SetInterruptNodePointer:
 1502              	.LFB142:
 453:../Libraries/XMCLib/src/xmc_usic.c **** 
 454:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 455:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 456:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t service_request)
 457:../Libraries/XMCLib/src/xmc_usic.c **** {
 1503              	 .loc 2 457 0
 1504              	 .cfi_startproc
 1505 0000 80B5     	 push {r7,lr}
 1506              	.LCFI45:
 1507              	 .cfi_def_cfa_offset 8
 1508              	 .cfi_offset 7,-8
 1509              	 .cfi_offset 14,-4
 1510 0002 84B0     	 sub sp,sp,#16
 1511              	.LCFI46:
 1512              	 .cfi_def_cfa_offset 24
 1513 0004 00AF     	 add r7,sp,#0
 1514              	.LCFI47:
 1515              	 .cfi_def_cfa_register 7
 1516 0006 F860     	 str r0,[r7,#12]
 1517 0008 7A60     	 str r2,[r7,#4]
 1518 000a 0B23     	 mov r3,#11
 1519 000c FB18     	 add r3,r7,r3
 1520 000e 0A1C     	 add r2,r1,#0
 1521 0010 1A70     	 strb r2,[r3]
 458:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1522              	 .loc 2 458 0
 1523 0012 FB68     	 ldr r3,[r7,#12]
 1524 0014 9B69     	 ldr r3,[r3,#24]
 1525 0016 0B22     	 mov r2,#11
 1526 0018 BA18     	 add r2,r7,r2
 1527 001a 1278     	 ldrb r2,[r2]
 1528 001c 0721     	 mov r1,#7
 1529 001e 9140     	 lsl r1,r1,r2
 1530 0020 0A1C     	 mov r2,r1
 1531 0022 D243     	 mvn r2,r2
 1532 0024 1A40     	 and r2,r3
 459:../Libraries/XMCLib/src/xmc_usic.c ****                              (service_request << (uint32_t)interrupt_node));
 1533              	 .loc 2 459 0
 1534 0026 0B23     	 mov r3,#11
 1535 0028 FB18     	 add r3,r7,r3
 1536 002a 1B78     	 ldrb r3,[r3]
 1537 002c 7968     	 ldr r1,[r7,#4]
 1538 002e 9940     	 lsl r1,r1,r3
 1539 0030 0B1C     	 mov r3,r1
 458:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1540              	 .loc 2 458 0
 1541 0032 1A43     	 orr r2,r3
 1542 0034 FB68     	 ldr r3,[r7,#12]
 1543 0036 9A61     	 str r2,[r3,#24]
 460:../Libraries/XMCLib/src/xmc_usic.c **** }
 1544              	 .loc 2 460 0
 1545 0038 BD46     	 mov sp,r7
 1546 003a 04B0     	 add sp,sp,#16
 1547              	 
 1548 003c 80BD     	 pop {r7,pc}
 1549              	 .cfi_endproc
 1550              	.LFE142:
 1552 003e C046     	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 1553              	 .align 2
 1554              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 1555              	 .code 16
 1556              	 .thumb_func
 1558              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 1559              	.LFB143:
 461:../Libraries/XMCLib/src/xmc_usic.c **** 
 462:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 463:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
 464:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t service_request)
 465:../Libraries/XMCLib/src/xmc_usic.c **** {
 1560              	 .loc 2 465 0
 1561              	 .cfi_startproc
 1562 0000 80B5     	 push {r7,lr}
 1563              	.LCFI48:
 1564              	 .cfi_def_cfa_offset 8
 1565              	 .cfi_offset 7,-8
 1566              	 .cfi_offset 14,-4
 1567 0002 84B0     	 sub sp,sp,#16
 1568              	.LCFI49:
 1569              	 .cfi_def_cfa_offset 24
 1570 0004 00AF     	 add r7,sp,#0
 1571              	.LCFI50:
 1572              	 .cfi_def_cfa_register 7
 1573 0006 F860     	 str r0,[r7,#12]
 1574 0008 7A60     	 str r2,[r7,#4]
 1575 000a 0B23     	 mov r3,#11
 1576 000c FB18     	 add r3,r7,r3
 1577 000e 0A1C     	 add r2,r1,#0
 1578 0010 1A70     	 strb r2,[r3]
 466:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1579              	 .loc 2 466 0
 1580 0012 FA68     	 ldr r2,[r7,#12]
 1581 0014 8423     	 mov r3,#132
 1582 0016 5B00     	 lsl r3,r3,#1
 1583 0018 D358     	 ldr r3,[r2,r3]
 1584 001a 0B22     	 mov r2,#11
 1585 001c BA18     	 add r2,r7,r2
 1586 001e 1278     	 ldrb r2,[r2]
 1587 0020 0721     	 mov r1,#7
 1588 0022 9140     	 lsl r1,r1,r2
 1589 0024 0A1C     	 mov r2,r1
 1590 0026 D243     	 mvn r2,r2
 1591 0028 1A40     	 and r2,r3
 467:../Libraries/XMCLib/src/xmc_usic.c ****                               (service_request << (uint32_t)interrupt_node));
 1592              	 .loc 2 467 0
 1593 002a 0B23     	 mov r3,#11
 1594 002c FB18     	 add r3,r7,r3
 1595 002e 1B78     	 ldrb r3,[r3]
 1596 0030 7968     	 ldr r1,[r7,#4]
 1597 0032 9940     	 lsl r1,r1,r3
 1598 0034 0B1C     	 mov r3,r1
 466:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1599              	 .loc 2 466 0
 1600 0036 1A43     	 orr r2,r3
 1601 0038 111C     	 mov r1,r2
 1602 003a FA68     	 ldr r2,[r7,#12]
 1603 003c 8423     	 mov r3,#132
 1604 003e 5B00     	 lsl r3,r3,#1
 1605 0040 D150     	 str r1,[r2,r3]
 468:../Libraries/XMCLib/src/xmc_usic.c **** }
 1606              	 .loc 2 468 0
 1607 0042 BD46     	 mov sp,r7
 1608 0044 04B0     	 add sp,sp,#16
 1609              	 
 1610 0046 80BD     	 pop {r7,pc}
 1611              	 .cfi_endproc
 1612              	.LFE143:
 1614              	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 1615              	 .align 2
 1616              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 1617              	 .code 16
 1618              	 .thumb_func
 1620              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 1621              	.LFB144:
 469:../Libraries/XMCLib/src/xmc_usic.c **** 
 470:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 471:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
 472:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t service_request)
 473:../Libraries/XMCLib/src/xmc_usic.c **** {
 1622              	 .loc 2 473 0
 1623              	 .cfi_startproc
 1624 0000 80B5     	 push {r7,lr}
 1625              	.LCFI51:
 1626              	 .cfi_def_cfa_offset 8
 1627              	 .cfi_offset 7,-8
 1628              	 .cfi_offset 14,-4
 1629 0002 84B0     	 sub sp,sp,#16
 1630              	.LCFI52:
 1631              	 .cfi_def_cfa_offset 24
 1632 0004 00AF     	 add r7,sp,#0
 1633              	.LCFI53:
 1634              	 .cfi_def_cfa_register 7
 1635 0006 F860     	 str r0,[r7,#12]
 1636 0008 7A60     	 str r2,[r7,#4]
 1637 000a 0B23     	 mov r3,#11
 1638 000c FB18     	 add r3,r7,r3
 1639 000e 0A1C     	 add r2,r1,#0
 1640 0010 1A70     	 strb r2,[r3]
 474:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1641              	 .loc 2 474 0
 1642 0012 FA68     	 ldr r2,[r7,#12]
 1643 0014 8623     	 mov r3,#134
 1644 0016 5B00     	 lsl r3,r3,#1
 1645 0018 D358     	 ldr r3,[r2,r3]
 1646 001a 0B22     	 mov r2,#11
 1647 001c BA18     	 add r2,r7,r2
 1648 001e 1278     	 ldrb r2,[r2]
 1649 0020 0721     	 mov r1,#7
 1650 0022 9140     	 lsl r1,r1,r2
 1651 0024 0A1C     	 mov r2,r1
 1652 0026 D243     	 mvn r2,r2
 1653 0028 1A40     	 and r2,r3
 475:../Libraries/XMCLib/src/xmc_usic.c ****                               (service_request << (uint32_t)interrupt_node));
 1654              	 .loc 2 475 0
 1655 002a 0B23     	 mov r3,#11
 1656 002c FB18     	 add r3,r7,r3
 1657 002e 1B78     	 ldrb r3,[r3]
 1658 0030 7968     	 ldr r1,[r7,#4]
 1659 0032 9940     	 lsl r1,r1,r3
 1660 0034 0B1C     	 mov r3,r1
 474:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1661              	 .loc 2 474 0
 1662 0036 1A43     	 orr r2,r3
 1663 0038 111C     	 mov r1,r2
 1664 003a FA68     	 ldr r2,[r7,#12]
 1665 003c 8623     	 mov r3,#134
 1666 003e 5B00     	 lsl r3,r3,#1
 1667 0040 D150     	 str r1,[r2,r3]
 476:../Libraries/XMCLib/src/xmc_usic.c **** }
 1668              	 .loc 2 476 0
 1669 0042 BD46     	 mov sp,r7
 1670 0044 04B0     	 add sp,sp,#16
 1671              	 
 1672 0046 80BD     	 pop {r7,pc}
 1673              	 .cfi_endproc
 1674              	.LFE144:
 1676              	 .section .text.XMC_USIC_Enable,"ax",%progbits
 1677              	 .align 2
 1678              	 .global XMC_USIC_Enable
 1679              	 .code 16
 1680              	 .thumb_func
 1682              	XMC_USIC_Enable:
 1683              	.LFB145:
 477:../Libraries/XMCLib/src/xmc_usic.c **** 
 478:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
 479:../Libraries/XMCLib/src/xmc_usic.c **** {
 1684              	 .loc 2 479 0
 1685              	 .cfi_startproc
 1686 0000 80B5     	 push {r7,lr}
 1687              	.LCFI54:
 1688              	 .cfi_def_cfa_offset 8
 1689              	 .cfi_offset 7,-8
 1690              	 .cfi_offset 14,-4
 1691 0002 82B0     	 sub sp,sp,#8
 1692              	.LCFI55:
 1693              	 .cfi_def_cfa_offset 16
 1694 0004 00AF     	 add r7,sp,#0
 1695              	.LCFI56:
 1696              	 .cfi_def_cfa_register 7
 1697 0006 7860     	 str r0,[r7,#4]
 480:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 1698              	 .loc 2 480 0
 1699 0008 7B68     	 ldr r3,[r7,#4]
 1700 000a 104A     	 ldr r2,.L82
 1701 000c 9342     	 cmp r3,r2
 1702 000e 09D1     	 bne .L78
 481:../Libraries/XMCLib/src/xmc_usic.c ****   {
 482:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 483:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 1703              	 .loc 2 483 0
 1704 0010 0820     	 mov r0,#8
 1705 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 484:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC0));
 1706              	 .loc 2 484 0
 1707 0016 C046     	 mov r8,r8
 1708              	.L79:
 1709              	 .loc 2 484 0 is_stmt 0 discriminator 1
 1710 0018 0820     	 mov r0,#8
 1711 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 1712 001e 031E     	 sub r3,r0,#0
 1713 0020 FAD1     	 bne .L79
 1714 0022 10E0     	 b .L77
 1715              	.L78:
 485:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 486:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 487:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 488:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC0));
 489:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 490:../Libraries/XMCLib/src/xmc_usic.c ****   }
 491:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
 492:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC1)
 1716              	 .loc 2 492 0 is_stmt 1
 1717 0024 7B68     	 ldr r3,[r7,#4]
 1718 0026 0A4A     	 ldr r2,.L82+4
 1719 0028 9342     	 cmp r3,r2
 1720 002a 0CD1     	 bne .L77
 493:../Libraries/XMCLib/src/xmc_usic.c ****   {
 494:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 495:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 1721              	 .loc 2 495 0
 1722 002c 8023     	 mov r3,#128
 1723 002e DB02     	 lsl r3,r3,#11
 1724 0030 181C     	 mov r0,r3
 1725 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 496:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC1));
 1726              	 .loc 2 496 0
 1727 0036 C046     	 mov r8,r8
 1728              	.L81:
 1729              	 .loc 2 496 0 is_stmt 0 discriminator 1
 1730 0038 8023     	 mov r3,#128
 1731 003a DB02     	 lsl r3,r3,#11
 1732 003c 181C     	 mov r0,r3
 1733 003e FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 1734 0042 031E     	 sub r3,r0,#0
 1735 0044 F8D1     	 bne .L81
 1736              	.L77:
 497:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 498:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 499:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 500:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC1));
 501:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 502:../Libraries/XMCLib/src/xmc_usic.c ****   }
 503:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 504:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 505:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC2)
 506:../Libraries/XMCLib/src/xmc_usic.c ****   {
 507:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 508:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 509:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC2));
 510:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 511:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 512:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 513:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC2));
 514:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 515:../Libraries/XMCLib/src/xmc_usic.c ****   }
 516:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 517:../Libraries/XMCLib/src/xmc_usic.c ****   else
 518:../Libraries/XMCLib/src/xmc_usic.c ****   {
 519:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 520:../Libraries/XMCLib/src/xmc_usic.c ****   }
 521:../Libraries/XMCLib/src/xmc_usic.c **** }
 1737              	 .loc 2 521 0 is_stmt 1
 1738 0046 BD46     	 mov sp,r7
 1739 0048 02B0     	 add sp,sp,#8
 1740              	 
 1741 004a 80BD     	 pop {r7,pc}
 1742              	.L83:
 1743              	 .align 2
 1744              	.L82:
 1745 004c 08000048 	 .word 1207959560
 1746 0050 08400048 	 .word 1207975944
 1747              	 .cfi_endproc
 1748              	.LFE145:
 1750              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 1751              	 .align 2
 1752              	 .global XMC_USIC_Disable
 1753              	 .code 16
 1754              	 .thumb_func
 1756              	XMC_USIC_Disable:
 1757              	.LFB146:
 522:../Libraries/XMCLib/src/xmc_usic.c **** 
 523:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 524:../Libraries/XMCLib/src/xmc_usic.c **** {
 1758              	 .loc 2 524 0
 1759              	 .cfi_startproc
 1760 0000 80B5     	 push {r7,lr}
 1761              	.LCFI57:
 1762              	 .cfi_def_cfa_offset 8
 1763              	 .cfi_offset 7,-8
 1764              	 .cfi_offset 14,-4
 1765 0002 82B0     	 sub sp,sp,#8
 1766              	.LCFI58:
 1767              	 .cfi_def_cfa_offset 16
 1768 0004 00AF     	 add r7,sp,#0
 1769              	.LCFI59:
 1770              	 .cfi_def_cfa_register 7
 1771 0006 7860     	 str r0,[r7,#4]
 525:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 1772              	 .loc 2 525 0
 1773 0008 7B68     	 ldr r3,[r7,#4]
 1774 000a 094A     	 ldr r2,.L87
 1775 000c 9342     	 cmp r3,r2
 1776 000e 03D1     	 bne .L85
 526:../Libraries/XMCLib/src/xmc_usic.c ****   {
 527:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 528:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 529:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 530:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 531:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 1777              	 .loc 2 531 0
 1778 0010 0820     	 mov r0,#8
 1779 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 1780 0016 08E0     	 b .L84
 1781              	.L85:
 532:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 533:../Libraries/XMCLib/src/xmc_usic.c ****   }
 534:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
 535:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 1782              	 .loc 2 535 0
 1783 0018 7B68     	 ldr r3,[r7,#4]
 1784 001a 064A     	 ldr r2,.L87+4
 1785 001c 9342     	 cmp r3,r2
 1786 001e 04D1     	 bne .L84
 536:../Libraries/XMCLib/src/xmc_usic.c ****   {
 537:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 538:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 539:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 540:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 541:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 1787              	 .loc 2 541 0
 1788 0020 8023     	 mov r3,#128
 1789 0022 DB02     	 lsl r3,r3,#11
 1790 0024 181C     	 mov r0,r3
 1791 0026 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 1792              	.L84:
 542:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 543:../Libraries/XMCLib/src/xmc_usic.c ****   }
 544:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 545:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 546:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 547:../Libraries/XMCLib/src/xmc_usic.c ****   {
 548:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 549:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 550:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 551:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 552:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 553:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 554:../Libraries/XMCLib/src/xmc_usic.c ****   }
 555:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 556:../Libraries/XMCLib/src/xmc_usic.c ****   else
 557:../Libraries/XMCLib/src/xmc_usic.c ****   {
 558:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 559:../Libraries/XMCLib/src/xmc_usic.c ****   }
 560:../Libraries/XMCLib/src/xmc_usic.c **** 
 561:../Libraries/XMCLib/src/xmc_usic.c **** }
 1793              	 .loc 2 561 0
 1794 002a BD46     	 mov sp,r7
 1795 002c 02B0     	 add sp,sp,#8
 1796              	 
 1797 002e 80BD     	 pop {r7,pc}
 1798              	.L88:
 1799              	 .align 2
 1800              	.L87:
 1801 0030 08000048 	 .word 1207959560
 1802 0034 08400048 	 .word 1207975944
 1803              	 .cfi_endproc
 1804              	.LFE146:
 1806              	 .text
 1807              	.Letext0:
 1808              	 .file 3 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1809              	 .file 4 "d:\\downloads\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1810              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 1811              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/XMCLib/inc/xmc1_scu.h"
 1812              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Include/cmsis_gcc.h"
 1813              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/RoverX/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:18     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 $t
    {standard input}:22     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 XMC_USIC_CH_SetInputTriggerCombinationMode
    {standard input}:78     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000048 $d
    {standard input}:83     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 $t
    {standard input}:87     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 XMC_USIC_CH_SetBRGInputClockSource
    {standard input}:126    .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:131    .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:1682   .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:211    .text.XMC_USIC_CH_Enable:00000064 $d
    {standard input}:220    .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:225    .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:260    .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:265    .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:429    .text.XMC_USIC_CH_SetBaudrate:000000ec $d
    {standard input}:436    .text.XMC_USIC_CH_SetBaudrateEx:00000000 $t
    {standard input}:441    .text.XMC_USIC_CH_SetBaudrateEx:00000000 XMC_USIC_CH_SetBaudrateEx
    {standard input}:613    .text.XMC_USIC_CH_SetBaudrateEx:00000104 $d
    {standard input}:619    .text.XMC_USIC_CH_SetBaudrateDivider:00000000 $t
    {standard input}:624    .text.XMC_USIC_CH_SetBaudrateDivider:00000000 XMC_USIC_CH_SetBaudrateDivider
    {standard input}:706    .text.XMC_USIC_CH_SetBaudrateDivider:00000070 $d
    {standard input}:715    .text.XMC_USIC_CH_GetBaudrate:00000000 $t
    {standard input}:720    .text.XMC_USIC_CH_GetBaudrate:00000000 XMC_USIC_CH_GetBaudrate
    {standard input}:897    .text.XMC_USIC_CH_GetBaudrate:00000128 $d
    {standard input}:902    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 $t
    {standard input}:907    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 XMC_USIC_CH_GetSCLKFrequency
    {standard input}:1037   .text.XMC_USIC_CH_GetSCLKFrequency:000000d8 $d
    {standard input}:1042   .text.XMC_USIC_CH_GetMCLKFrequency:00000000 $t
    {standard input}:1047   .text.XMC_USIC_CH_GetMCLKFrequency:00000000 XMC_USIC_CH_GetMCLKFrequency
    {standard input}:1147   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:1152   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:1223   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000060 $d
    {standard input}:1228   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:1233   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:1299   .text.XMC_USIC_CH_TXFIFO_Configure:00000054 $d
    {standard input}:1305   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:1310   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:1378   .text.XMC_USIC_CH_RXFIFO_Configure:0000005c $d
    {standard input}:1384   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1389   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:1435   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000034 $d
    {standard input}:1440   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1445   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:1491   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000034 $d
    {standard input}:1496   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:1501   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:1553   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1558   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:1615   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1620   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:1677   .text.XMC_USIC_Enable:00000000 $t
    {standard input}:1745   .text.XMC_USIC_Enable:0000004c $d
    {standard input}:1751   .text.XMC_USIC_Disable:00000000 $t
    {standard input}:1756   .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:1801   .text.XMC_USIC_Disable:00000030 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
XMC_SCU_CLOCK_GetPeripheralClockFrequency
__aeabi_idiv
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_f2uiz
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_IsPeripheralClockGated
XMC_SCU_CLOCK_GatePeripheralClock
